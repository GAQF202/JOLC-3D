Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMILLASDOBLES
    LOCAL

Grammar

Rule 0     S' -> start
Rule 1     start -> body
Rule 2     body -> body Print
Rule 3     body -> body Println
Rule 4     body -> body Asignacion
Rule 5     body -> body create_function
Rule 6     body -> body functionCall
Rule 7     body -> body whileLoop
Rule 8     body -> body forLoop
Rule 9     body -> body IfCondition
Rule 10    body -> body parseNative
Rule 11    body -> body truncNative
Rule 12    body -> body floatNative
Rule 13    body -> body stringNative
Rule 14    body -> body typeOfNative
Rule 15    body -> body pushArray
Rule 16    body -> body popArray
Rule 17    body -> body lengthArray
Rule 18    body -> body assignmentArray
Rule 19    body -> body Struct
Rule 20    body -> body structAccess
Rule 21    body -> Print
Rule 22    body -> Println
Rule 23    body -> create_function
Rule 24    body -> Asignacion
Rule 25    body -> functionCall
Rule 26    body -> whileLoop
Rule 27    body -> forLoop
Rule 28    body -> IfCondition
Rule 29    body -> parseNative
Rule 30    body -> truncNative
Rule 31    body -> floatNative
Rule 32    body -> stringNative
Rule 33    body -> typeOfNative
Rule 34    body -> pushArray
Rule 35    body -> popArray
Rule 36    body -> lengthArray
Rule 37    body -> assignmentArray
Rule 38    body -> Struct
Rule 39    body -> structAccess
Rule 40    body -> empty
Rule 41    Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA
Rule 42    Struct -> STRUCT ID bodyStruct END PCOMA
Rule 43    bodyStruct -> bodyStruct ID DOSP DOSP type PCOMA
Rule 44    bodyStruct -> bodyStruct ID PCOMA
Rule 45    bodyStruct -> ID DOSP DOSP type PCOMA
Rule 46    bodyStruct -> ID PCOMA
Rule 47    bodyStruct -> bodyStruct ID DOSP DOSP ID PCOMA
Rule 48    bodyStruct -> ID DOSP DOSP ID PCOMA
Rule 49    structAccess -> ID attributes IGUAL exp PCOMA
Rule 50    pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
Rule 51    pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
Rule 52    popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA
Rule 53    popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA
Rule 54    lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA
Rule 55    lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA
Rule 56    parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
Rule 57    truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
Rule 58    truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA
Rule 59    floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA
Rule 60    stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
Rule 61    typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA
Rule 62    IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA
Rule 63    elseIfSt -> elseIfSt ELSEIF exp block_loops
Rule 64    elseIfSt -> ELSEIF exp block_loops
Rule 65    elseIfSt -> empty
Rule 66    elseSt -> ELSE block_loops
Rule 67    elseSt -> empty
Rule 68    empty -> <empty>
Rule 69    whileLoop -> MIENTRAS exp block_loops END PCOMA
Rule 70    forLoop -> FOR ID IN exp block_loops END PCOMA
Rule 71    functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA
Rule 72    functionCall -> ID PARENTESISA PARENTESISC PCOMA
Rule 73    parametersCall -> parametersCall COMA exp
Rule 74    parametersCall -> exp
Rule 75    create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA
Rule 76    create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA
Rule 77    parameters -> parameters COMA ID
Rule 78    parameters -> parameters COMA ID DOSP DOSP type
Rule 79    parameters -> parameters COMA ID DOSP DOSP ID
Rule 80    parameters -> ID
Rule 81    parameters -> ID DOSP DOSP type
Rule 82    parameters -> ID DOSP DOSP ID
Rule 83    block_function -> block_function Print
Rule 84    block_function -> block_function Println
Rule 85    block_function -> block_function Asignacion
Rule 86    block_function -> block_function retorno
Rule 87    block_function -> block_function functionCall
Rule 88    block_function -> block_function whileLoop
Rule 89    block_function -> block_function forLoop
Rule 90    block_function -> block_function IfCondition
Rule 91    block_function -> block_function parseNative
Rule 92    block_function -> block_function truncNative
Rule 93    block_function -> block_function floatNative
Rule 94    block_function -> block_function stringNative
Rule 95    block_function -> block_function typeOfNative
Rule 96    block_function -> block_function pushArray
Rule 97    block_function -> block_function popArray
Rule 98    block_function -> block_function lengthArray
Rule 99    block_function -> block_function assignmentArray
Rule 100   block_function -> block_function Struct
Rule 101   block_function -> block_function structAccess
Rule 102   block_function -> Print
Rule 103   block_function -> Println
Rule 104   block_function -> Asignacion
Rule 105   block_function -> retorno
Rule 106   block_function -> functionCall
Rule 107   block_function -> whileLoop
Rule 108   block_function -> forLoop
Rule 109   block_function -> IfCondition
Rule 110   block_function -> parseNative
Rule 111   block_function -> truncNative
Rule 112   block_function -> floatNative
Rule 113   block_function -> stringNative
Rule 114   block_function -> typeOfNative
Rule 115   block_function -> pushArray
Rule 116   block_function -> popArray
Rule 117   block_function -> lengthArray
Rule 118   block_function -> assignmentArray
Rule 119   block_function -> Struct
Rule 120   block_function -> structAccess
Rule 121   block_function -> empty
Rule 122   Break -> BREAK PCOMA
Rule 123   Continue -> CONTINUE PCOMA
Rule 124   block_loops -> block_loops Print
Rule 125   block_loops -> block_loops Println
Rule 126   block_loops -> block_loops Asignacion
Rule 127   block_loops -> block_loops retorno
Rule 128   block_loops -> block_loops functionCall
Rule 129   block_loops -> block_loops forLoop
Rule 130   block_loops -> block_loops whileLoop
Rule 131   block_loops -> block_loops IfCondition
Rule 132   block_loops -> block_loops parseNative
Rule 133   block_loops -> block_loops truncNative
Rule 134   block_loops -> block_loops floatNative
Rule 135   block_loops -> block_loops stringNative
Rule 136   block_loops -> block_loops typeOfNative
Rule 137   block_loops -> block_loops pushArray
Rule 138   block_loops -> block_loops popArray
Rule 139   block_loops -> block_loops lengthArray
Rule 140   block_loops -> block_loops assignmentArray
Rule 141   block_loops -> block_loops Break
Rule 142   block_loops -> block_loops Continue
Rule 143   block_loops -> block_loops Struct
Rule 144   block_loops -> block_loops structAccess
Rule 145   block_loops -> Print
Rule 146   block_loops -> Println
Rule 147   block_loops -> Asignacion
Rule 148   block_loops -> retorno
Rule 149   block_loops -> functionCall
Rule 150   block_loops -> whileLoop
Rule 151   block_loops -> forLoop
Rule 152   block_loops -> IfCondition
Rule 153   block_loops -> parseNative
Rule 154   block_loops -> truncNative
Rule 155   block_loops -> floatNative
Rule 156   block_loops -> stringNative
Rule 157   block_loops -> typeOfNative
Rule 158   block_loops -> pushArray
Rule 159   block_loops -> popArray
Rule 160   block_loops -> lengthArray
Rule 161   block_loops -> assignmentArray
Rule 162   block_loops -> Break
Rule 163   block_loops -> Continue
Rule 164   block_loops -> Struct
Rule 165   block_loops -> structAccess
Rule 166   block_loops -> empty
Rule 167   retorno -> RETURN exp PCOMA
Rule 168   Print -> PRINT PARENTESISA exp PARENTESISC PCOMA
Rule 169   Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA
Rule 170   Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA
Rule 171   Println -> PRINTLN PARENTESISA PARENTESISC PCOMA
Rule 172   Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
Rule 173   Asignacion -> ID IGUAL exp PCOMA
Rule 174   Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA
Rule 175   Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA
Rule 176   Asignacion -> GLOBAL ID IGUAL exp PCOMA
Rule 177   Asignacion -> GLOBAL ID PCOMA
Rule 178   exp -> exp MAS exp
Rule 179   exp -> exp MENOS exp
Rule 180   exp -> exp POR exp
Rule 181   exp -> exp DIVIDIDO exp
Rule 182   exp -> exp POTENCIA exp
Rule 183   exp -> exp PORCENTAJE exp
Rule 184   exp -> exp MAYOR exp
Rule 185   exp -> exp MENOR exp
Rule 186   exp -> exp MAYORIGUAL exp
Rule 187   exp -> exp MENORIGUAL exp
Rule 188   exp -> exp DOBLEIGUAL exp
Rule 189   exp -> exp NOIGUAL exp
Rule 190   exp -> exp OR exp
Rule 191   exp -> exp AND exp
Rule 192   exp -> ID attributes
Rule 193   attributes -> attributes PUNTO ID
Rule 194   attributes -> PUNTO ID
Rule 195   exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
Rule 196   exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
Rule 197   exp -> POP NOT PARENTESISA exp PARENTESISC
Rule 198   exp -> POP NOT PARENTESISA ID PARENTESISC
Rule 199   exp -> LENGTH PARENTESISA exp PARENTESISC
Rule 200   exp -> LENGTH PARENTESISA ID PARENTESISC
Rule 201   exp -> PARSE PARENTESISA type COMA exp PARENTESISC
Rule 202   exp -> TRUNC PARENTESISA type COMA exp PARENTESISC
Rule 203   exp -> TRUNC PARENTESISA exp PARENTESISC
Rule 204   exp -> FLOAT PARENTESISA exp PARENTESISC
Rule 205   exp -> STRINGNATIVE PARENTESISA exp PARENTESISC
Rule 206   exp -> TYPEOF PARENTESISA exp PARENTESISC
Rule 207   exp -> array
Rule 208   array -> CORCHETEA parametersCall CORCHETEC
Rule 209   exp -> exp DOSP exp
Rule 210   exp -> ID PARENTESISA parametersCall PARENTESISC
Rule 211   exp -> ID PARENTESISA PARENTESISC
Rule 212   exp -> MENOS exp
Rule 213   exp -> NOT exp
Rule 214   exp -> PARENTESISA exp PARENTESISC
Rule 215   exp -> ENTERO
Rule 216   exp -> DECIMAL
Rule 217   exp -> CADENA
Rule 218   exp -> CARACTER
Rule 219   exp -> FALSE
Rule 220   exp -> TRUE
Rule 221   exp -> NULO
Rule 222   exp -> ID
Rule 223   exp -> ID listArray
Rule 224   assignmentArray -> ID listArrayRef IGUAL exp PCOMA
Rule 225   listArrayRef -> listArrayRef CORCHETEA exp CORCHETEC
Rule 226   listArrayRef -> CORCHETEA exp CORCHETEC
Rule 227   listArray -> listArray CORCHETEA exp CORCHETEC
Rule 228   listArray -> CORCHETEA exp CORCHETEC
Rule 229   exp -> UPPERCASE PARENTESISA exp PARENTESISC
Rule 230   exp -> LOWERCASE PARENTESISA exp PARENTESISC
Rule 231   exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC
Rule 232   exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
Rule 233   exp -> SIN PARENTESISA exp PARENTESISC
Rule 234   exp -> COS PARENTESISA exp PARENTESISC
Rule 235   exp -> TAN PARENTESISA exp PARENTESISC
Rule 236   exp -> SQRT PARENTESISA exp PARENTESISC
Rule 237   type -> INT64
Rule 238   type -> FLOAT64
Rule 239   type -> STRING
Rule 240   type -> CHAR
Rule 241   type -> BOOL
Rule 242   type -> NULO

Terminals, with rules where they appear

AND                  : 191
BOOL                 : 241
BREAK                : 122
CADENA               : 217
CARACTER             : 218
CHAR                 : 240
COMA                 : 50 51 56 57 73 77 78 79 195 196 201 202 232
COMILLASDOBLES       : 
CONTINUE             : 123
CORCHETEA            : 208 225 226 227 228
CORCHETEC            : 208 225 226 227 228
COS                  : 234
DECIMAL              : 216
DIVIDIDO             : 181
DOBLEIGUAL           : 188
DOSP                 : 43 43 45 45 47 47 48 48 78 78 79 79 81 81 82 82 174 174 175 175 209
ELSE                 : 66
ELSEIF               : 63 64
END                  : 41 42 62 69 70 75 76
ENTERO               : 215
FALSE                : 219
FLOAT                : 59 204
FLOAT64              : 238
FOR                  : 70
FUNCTION             : 75 76
GLOBAL               : 176 177
ID                   : 41 42 43 44 45 46 47 47 48 48 49 51 53 55 70 71 72 75 76 77 78 79 79 80 81 82 82 173 174 175 175 176 177 192 193 194 196 198 200 210 211 222 223 224
IF                   : 62
IGUAL                : 49 173 174 175 176 224
IN                   : 70
INT64                : 237
LENGTH               : 54 55 199 200
LOCAL                : 
LOGARITMOB10         : 231
LOGARITMONOB10       : 232
LOWERCASE            : 230
MAS                  : 178
MAYOR                : 184
MAYORIGUAL           : 186
MENOR                : 185
MENORIGUAL           : 187
MENOS                : 179 212
MIENTRAS             : 69
MUTABLE              : 41
NOIGUAL              : 189
NOT                  : 50 51 52 53 195 196 197 198 213
NULO                 : 221 242
OR                   : 190
PARENTESISA          : 50 51 52 53 54 55 56 57 58 59 60 61 71 72 75 76 168 169 170 171 172 195 196 197 198 199 200 201 202 203 204 205 206 210 211 214 229 230 231 232 233 234 235 236
PARENTESISC          : 50 51 52 53 54 55 56 57 58 59 60 61 71 72 75 76 168 169 170 171 172 195 196 197 198 199 200 201 202 203 204 205 206 210 211 214 229 230 231 232 233 234 235 236
PARSE                : 56 201
PCOMA                : 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 69 70 71 72 75 76 122 123 167 168 169 170 171 172 173 174 175 176 177 224
POP                  : 52 53 197 198
POR                  : 180
PORCENTAJE           : 183
POTENCIA             : 182
PRINT                : 168 169
PRINTLN              : 170 171 172
PUNTO                : 193 194
PUSH                 : 50 51 195 196
RETURN               : 167
SIN                  : 233
SQRT                 : 236
STRING               : 239
STRINGNATIVE         : 60 205
STRUCT               : 41 42
TAN                  : 235
TRUE                 : 220
TRUNC                : 57 58 202 203
TYPEOF               : 61 206
UPPERCASE            : 229
error                : 

Nonterminals, with rules where they appear

Asignacion           : 4 24 85 104 126 147
Break                : 141 162
Continue             : 142 163
IfCondition          : 9 28 90 109 131 152
Print                : 2 21 83 102 124 145
Println              : 3 22 84 103 125 146
Struct               : 19 38 100 119 143 164
array                : 207
assignmentArray      : 18 37 99 118 140 161
attributes           : 49 192 193
block_function       : 75 76 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101
block_loops          : 62 63 64 66 69 70 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144
body                 : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
bodyStruct           : 41 42 43 44 47
create_function      : 5 23
elseIfSt             : 62 63
elseSt               : 62
empty                : 40 65 67 121 166
exp                  : 49 50 52 54 56 57 58 59 60 61 62 63 64 69 70 73 74 167 168 170 173 174 175 176 178 178 179 179 180 180 181 181 182 182 183 183 184 184 185 185 186 186 187 187 188 188 189 189 190 190 191 191 195 197 199 201 202 203 204 205 206 209 209 212 213 214 224 225 226 227 228 229 230 231 232 232 233 234 235 236
floatNative          : 12 31 93 112 134 155
forLoop              : 8 27 89 108 129 151
functionCall         : 6 25 87 106 128 149
lengthArray          : 17 36 98 117 139 160
listArray            : 223 227
listArrayRef         : 224 225
parameters           : 75 77 78 79
parametersCall       : 50 51 71 73 169 172 195 196 208 210
parseNative          : 10 29 91 110 132 153
popArray             : 16 35 97 116 138 159
pushArray            : 15 34 96 115 137 158
retorno              : 86 105 127 148
start                : 0
stringNative         : 13 32 94 113 135 156
structAccess         : 20 39 101 120 144 165
truncNative          : 11 30 92 111 133 154
type                 : 43 45 56 57 78 81 174 201 202
typeOfNative         : 14 33 95 114 136 157
whileLoop            : 7 26 88 107 130 150

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . body
    (2) body -> . body Print
    (3) body -> . body Println
    (4) body -> . body Asignacion
    (5) body -> . body create_function
    (6) body -> . body functionCall
    (7) body -> . body whileLoop
    (8) body -> . body forLoop
    (9) body -> . body IfCondition
    (10) body -> . body parseNative
    (11) body -> . body truncNative
    (12) body -> . body floatNative
    (13) body -> . body stringNative
    (14) body -> . body typeOfNative
    (15) body -> . body pushArray
    (16) body -> . body popArray
    (17) body -> . body lengthArray
    (18) body -> . body assignmentArray
    (19) body -> . body Struct
    (20) body -> . body structAccess
    (21) body -> . Print
    (22) body -> . Println
    (23) body -> . create_function
    (24) body -> . Asignacion
    (25) body -> . functionCall
    (26) body -> . whileLoop
    (27) body -> . forLoop
    (28) body -> . IfCondition
    (29) body -> . parseNative
    (30) body -> . truncNative
    (31) body -> . floatNative
    (32) body -> . stringNative
    (33) body -> . typeOfNative
    (34) body -> . pushArray
    (35) body -> . popArray
    (36) body -> . lengthArray
    (37) body -> . assignmentArray
    (38) body -> . Struct
    (39) body -> . structAccess
    (40) body -> . empty
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (75) create_function -> . FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA
    (76) create_function -> . FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA
    (68) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for GLOBAL resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARSE resolved as shift
  ! shift/reduce conflict for TRUNC resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRINGNATIVE resolved as shift
  ! shift/reduce conflict for TYPEOF resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for LENGTH resolved as shift
  ! shift/reduce conflict for MUTABLE resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    FUNCTION        shift and go to state 25
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    MIENTRAS        shift and go to state 28
    FOR             shift and go to state 29
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40
    $end            reduce using rule 68 (empty -> .)

  ! PRINT           [ reduce using rule 68 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 68 (empty -> .) ]
  ! ID              [ reduce using rule 68 (empty -> .) ]
  ! GLOBAL          [ reduce using rule 68 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 68 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 68 (empty -> .) ]
  ! FOR             [ reduce using rule 68 (empty -> .) ]
  ! IF              [ reduce using rule 68 (empty -> .) ]
  ! PARSE           [ reduce using rule 68 (empty -> .) ]
  ! TRUNC           [ reduce using rule 68 (empty -> .) ]
  ! FLOAT           [ reduce using rule 68 (empty -> .) ]
  ! STRINGNATIVE    [ reduce using rule 68 (empty -> .) ]
  ! TYPEOF          [ reduce using rule 68 (empty -> .) ]
  ! PUSH            [ reduce using rule 68 (empty -> .) ]
  ! POP             [ reduce using rule 68 (empty -> .) ]
  ! LENGTH          [ reduce using rule 68 (empty -> .) ]
  ! MUTABLE         [ reduce using rule 68 (empty -> .) ]
  ! STRUCT          [ reduce using rule 68 (empty -> .) ]

    start                          shift and go to state 1
    body                           shift and go to state 2
    Print                          shift and go to state 3
    Println                        shift and go to state 4
    Asignacion                     shift and go to state 5
    create_function                shift and go to state 6
    functionCall                   shift and go to state 7
    whileLoop                      shift and go to state 8
    forLoop                        shift and go to state 9
    IfCondition                    shift and go to state 10
    parseNative                    shift and go to state 11
    truncNative                    shift and go to state 12
    floatNative                    shift and go to state 13
    stringNative                   shift and go to state 14
    typeOfNative                   shift and go to state 15
    pushArray                      shift and go to state 16
    popArray                       shift and go to state 17
    lengthArray                    shift and go to state 18
    assignmentArray                shift and go to state 19
    Struct                         shift and go to state 20
    structAccess                   shift and go to state 21
    empty                          shift and go to state 22

state 1

    (0) S' -> start .



state 2

    (1) start -> body .
    (2) body -> body . Print
    (3) body -> body . Println
    (4) body -> body . Asignacion
    (5) body -> body . create_function
    (6) body -> body . functionCall
    (7) body -> body . whileLoop
    (8) body -> body . forLoop
    (9) body -> body . IfCondition
    (10) body -> body . parseNative
    (11) body -> body . truncNative
    (12) body -> body . floatNative
    (13) body -> body . stringNative
    (14) body -> body . typeOfNative
    (15) body -> body . pushArray
    (16) body -> body . popArray
    (17) body -> body . lengthArray
    (18) body -> body . assignmentArray
    (19) body -> body . Struct
    (20) body -> body . structAccess
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (75) create_function -> . FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA
    (76) create_function -> . FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA

    $end            reduce using rule 1 (start -> body .)
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    FUNCTION        shift and go to state 25
    MIENTRAS        shift and go to state 28
    FOR             shift and go to state 29
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40

    Print                          shift and go to state 41
    Println                        shift and go to state 42
    Asignacion                     shift and go to state 43
    create_function                shift and go to state 44
    functionCall                   shift and go to state 45
    whileLoop                      shift and go to state 46
    forLoop                        shift and go to state 47
    IfCondition                    shift and go to state 48
    parseNative                    shift and go to state 49
    truncNative                    shift and go to state 50
    floatNative                    shift and go to state 51
    stringNative                   shift and go to state 52
    typeOfNative                   shift and go to state 53
    pushArray                      shift and go to state 54
    popArray                       shift and go to state 55
    lengthArray                    shift and go to state 56
    assignmentArray                shift and go to state 57
    Struct                         shift and go to state 58
    structAccess                   shift and go to state 59

state 3

    (21) body -> Print .

    PRINT           reduce using rule 21 (body -> Print .)
    PRINTLN         reduce using rule 21 (body -> Print .)
    ID              reduce using rule 21 (body -> Print .)
    GLOBAL          reduce using rule 21 (body -> Print .)
    FUNCTION        reduce using rule 21 (body -> Print .)
    MIENTRAS        reduce using rule 21 (body -> Print .)
    FOR             reduce using rule 21 (body -> Print .)
    IF              reduce using rule 21 (body -> Print .)
    PARSE           reduce using rule 21 (body -> Print .)
    TRUNC           reduce using rule 21 (body -> Print .)
    FLOAT           reduce using rule 21 (body -> Print .)
    STRINGNATIVE    reduce using rule 21 (body -> Print .)
    TYPEOF          reduce using rule 21 (body -> Print .)
    PUSH            reduce using rule 21 (body -> Print .)
    POP             reduce using rule 21 (body -> Print .)
    LENGTH          reduce using rule 21 (body -> Print .)
    MUTABLE         reduce using rule 21 (body -> Print .)
    STRUCT          reduce using rule 21 (body -> Print .)
    $end            reduce using rule 21 (body -> Print .)


state 4

    (22) body -> Println .

    PRINT           reduce using rule 22 (body -> Println .)
    PRINTLN         reduce using rule 22 (body -> Println .)
    ID              reduce using rule 22 (body -> Println .)
    GLOBAL          reduce using rule 22 (body -> Println .)
    FUNCTION        reduce using rule 22 (body -> Println .)
    MIENTRAS        reduce using rule 22 (body -> Println .)
    FOR             reduce using rule 22 (body -> Println .)
    IF              reduce using rule 22 (body -> Println .)
    PARSE           reduce using rule 22 (body -> Println .)
    TRUNC           reduce using rule 22 (body -> Println .)
    FLOAT           reduce using rule 22 (body -> Println .)
    STRINGNATIVE    reduce using rule 22 (body -> Println .)
    TYPEOF          reduce using rule 22 (body -> Println .)
    PUSH            reduce using rule 22 (body -> Println .)
    POP             reduce using rule 22 (body -> Println .)
    LENGTH          reduce using rule 22 (body -> Println .)
    MUTABLE         reduce using rule 22 (body -> Println .)
    STRUCT          reduce using rule 22 (body -> Println .)
    $end            reduce using rule 22 (body -> Println .)


state 5

    (24) body -> Asignacion .

    PRINT           reduce using rule 24 (body -> Asignacion .)
    PRINTLN         reduce using rule 24 (body -> Asignacion .)
    ID              reduce using rule 24 (body -> Asignacion .)
    GLOBAL          reduce using rule 24 (body -> Asignacion .)
    FUNCTION        reduce using rule 24 (body -> Asignacion .)
    MIENTRAS        reduce using rule 24 (body -> Asignacion .)
    FOR             reduce using rule 24 (body -> Asignacion .)
    IF              reduce using rule 24 (body -> Asignacion .)
    PARSE           reduce using rule 24 (body -> Asignacion .)
    TRUNC           reduce using rule 24 (body -> Asignacion .)
    FLOAT           reduce using rule 24 (body -> Asignacion .)
    STRINGNATIVE    reduce using rule 24 (body -> Asignacion .)
    TYPEOF          reduce using rule 24 (body -> Asignacion .)
    PUSH            reduce using rule 24 (body -> Asignacion .)
    POP             reduce using rule 24 (body -> Asignacion .)
    LENGTH          reduce using rule 24 (body -> Asignacion .)
    MUTABLE         reduce using rule 24 (body -> Asignacion .)
    STRUCT          reduce using rule 24 (body -> Asignacion .)
    $end            reduce using rule 24 (body -> Asignacion .)


state 6

    (23) body -> create_function .

    PRINT           reduce using rule 23 (body -> create_function .)
    PRINTLN         reduce using rule 23 (body -> create_function .)
    ID              reduce using rule 23 (body -> create_function .)
    GLOBAL          reduce using rule 23 (body -> create_function .)
    FUNCTION        reduce using rule 23 (body -> create_function .)
    MIENTRAS        reduce using rule 23 (body -> create_function .)
    FOR             reduce using rule 23 (body -> create_function .)
    IF              reduce using rule 23 (body -> create_function .)
    PARSE           reduce using rule 23 (body -> create_function .)
    TRUNC           reduce using rule 23 (body -> create_function .)
    FLOAT           reduce using rule 23 (body -> create_function .)
    STRINGNATIVE    reduce using rule 23 (body -> create_function .)
    TYPEOF          reduce using rule 23 (body -> create_function .)
    PUSH            reduce using rule 23 (body -> create_function .)
    POP             reduce using rule 23 (body -> create_function .)
    LENGTH          reduce using rule 23 (body -> create_function .)
    MUTABLE         reduce using rule 23 (body -> create_function .)
    STRUCT          reduce using rule 23 (body -> create_function .)
    $end            reduce using rule 23 (body -> create_function .)


state 7

    (25) body -> functionCall .

    PRINT           reduce using rule 25 (body -> functionCall .)
    PRINTLN         reduce using rule 25 (body -> functionCall .)
    ID              reduce using rule 25 (body -> functionCall .)
    GLOBAL          reduce using rule 25 (body -> functionCall .)
    FUNCTION        reduce using rule 25 (body -> functionCall .)
    MIENTRAS        reduce using rule 25 (body -> functionCall .)
    FOR             reduce using rule 25 (body -> functionCall .)
    IF              reduce using rule 25 (body -> functionCall .)
    PARSE           reduce using rule 25 (body -> functionCall .)
    TRUNC           reduce using rule 25 (body -> functionCall .)
    FLOAT           reduce using rule 25 (body -> functionCall .)
    STRINGNATIVE    reduce using rule 25 (body -> functionCall .)
    TYPEOF          reduce using rule 25 (body -> functionCall .)
    PUSH            reduce using rule 25 (body -> functionCall .)
    POP             reduce using rule 25 (body -> functionCall .)
    LENGTH          reduce using rule 25 (body -> functionCall .)
    MUTABLE         reduce using rule 25 (body -> functionCall .)
    STRUCT          reduce using rule 25 (body -> functionCall .)
    $end            reduce using rule 25 (body -> functionCall .)


state 8

    (26) body -> whileLoop .

    PRINT           reduce using rule 26 (body -> whileLoop .)
    PRINTLN         reduce using rule 26 (body -> whileLoop .)
    ID              reduce using rule 26 (body -> whileLoop .)
    GLOBAL          reduce using rule 26 (body -> whileLoop .)
    FUNCTION        reduce using rule 26 (body -> whileLoop .)
    MIENTRAS        reduce using rule 26 (body -> whileLoop .)
    FOR             reduce using rule 26 (body -> whileLoop .)
    IF              reduce using rule 26 (body -> whileLoop .)
    PARSE           reduce using rule 26 (body -> whileLoop .)
    TRUNC           reduce using rule 26 (body -> whileLoop .)
    FLOAT           reduce using rule 26 (body -> whileLoop .)
    STRINGNATIVE    reduce using rule 26 (body -> whileLoop .)
    TYPEOF          reduce using rule 26 (body -> whileLoop .)
    PUSH            reduce using rule 26 (body -> whileLoop .)
    POP             reduce using rule 26 (body -> whileLoop .)
    LENGTH          reduce using rule 26 (body -> whileLoop .)
    MUTABLE         reduce using rule 26 (body -> whileLoop .)
    STRUCT          reduce using rule 26 (body -> whileLoop .)
    $end            reduce using rule 26 (body -> whileLoop .)


state 9

    (27) body -> forLoop .

    PRINT           reduce using rule 27 (body -> forLoop .)
    PRINTLN         reduce using rule 27 (body -> forLoop .)
    ID              reduce using rule 27 (body -> forLoop .)
    GLOBAL          reduce using rule 27 (body -> forLoop .)
    FUNCTION        reduce using rule 27 (body -> forLoop .)
    MIENTRAS        reduce using rule 27 (body -> forLoop .)
    FOR             reduce using rule 27 (body -> forLoop .)
    IF              reduce using rule 27 (body -> forLoop .)
    PARSE           reduce using rule 27 (body -> forLoop .)
    TRUNC           reduce using rule 27 (body -> forLoop .)
    FLOAT           reduce using rule 27 (body -> forLoop .)
    STRINGNATIVE    reduce using rule 27 (body -> forLoop .)
    TYPEOF          reduce using rule 27 (body -> forLoop .)
    PUSH            reduce using rule 27 (body -> forLoop .)
    POP             reduce using rule 27 (body -> forLoop .)
    LENGTH          reduce using rule 27 (body -> forLoop .)
    MUTABLE         reduce using rule 27 (body -> forLoop .)
    STRUCT          reduce using rule 27 (body -> forLoop .)
    $end            reduce using rule 27 (body -> forLoop .)


state 10

    (28) body -> IfCondition .

    PRINT           reduce using rule 28 (body -> IfCondition .)
    PRINTLN         reduce using rule 28 (body -> IfCondition .)
    ID              reduce using rule 28 (body -> IfCondition .)
    GLOBAL          reduce using rule 28 (body -> IfCondition .)
    FUNCTION        reduce using rule 28 (body -> IfCondition .)
    MIENTRAS        reduce using rule 28 (body -> IfCondition .)
    FOR             reduce using rule 28 (body -> IfCondition .)
    IF              reduce using rule 28 (body -> IfCondition .)
    PARSE           reduce using rule 28 (body -> IfCondition .)
    TRUNC           reduce using rule 28 (body -> IfCondition .)
    FLOAT           reduce using rule 28 (body -> IfCondition .)
    STRINGNATIVE    reduce using rule 28 (body -> IfCondition .)
    TYPEOF          reduce using rule 28 (body -> IfCondition .)
    PUSH            reduce using rule 28 (body -> IfCondition .)
    POP             reduce using rule 28 (body -> IfCondition .)
    LENGTH          reduce using rule 28 (body -> IfCondition .)
    MUTABLE         reduce using rule 28 (body -> IfCondition .)
    STRUCT          reduce using rule 28 (body -> IfCondition .)
    $end            reduce using rule 28 (body -> IfCondition .)


state 11

    (29) body -> parseNative .

    PRINT           reduce using rule 29 (body -> parseNative .)
    PRINTLN         reduce using rule 29 (body -> parseNative .)
    ID              reduce using rule 29 (body -> parseNative .)
    GLOBAL          reduce using rule 29 (body -> parseNative .)
    FUNCTION        reduce using rule 29 (body -> parseNative .)
    MIENTRAS        reduce using rule 29 (body -> parseNative .)
    FOR             reduce using rule 29 (body -> parseNative .)
    IF              reduce using rule 29 (body -> parseNative .)
    PARSE           reduce using rule 29 (body -> parseNative .)
    TRUNC           reduce using rule 29 (body -> parseNative .)
    FLOAT           reduce using rule 29 (body -> parseNative .)
    STRINGNATIVE    reduce using rule 29 (body -> parseNative .)
    TYPEOF          reduce using rule 29 (body -> parseNative .)
    PUSH            reduce using rule 29 (body -> parseNative .)
    POP             reduce using rule 29 (body -> parseNative .)
    LENGTH          reduce using rule 29 (body -> parseNative .)
    MUTABLE         reduce using rule 29 (body -> parseNative .)
    STRUCT          reduce using rule 29 (body -> parseNative .)
    $end            reduce using rule 29 (body -> parseNative .)


state 12

    (30) body -> truncNative .

    PRINT           reduce using rule 30 (body -> truncNative .)
    PRINTLN         reduce using rule 30 (body -> truncNative .)
    ID              reduce using rule 30 (body -> truncNative .)
    GLOBAL          reduce using rule 30 (body -> truncNative .)
    FUNCTION        reduce using rule 30 (body -> truncNative .)
    MIENTRAS        reduce using rule 30 (body -> truncNative .)
    FOR             reduce using rule 30 (body -> truncNative .)
    IF              reduce using rule 30 (body -> truncNative .)
    PARSE           reduce using rule 30 (body -> truncNative .)
    TRUNC           reduce using rule 30 (body -> truncNative .)
    FLOAT           reduce using rule 30 (body -> truncNative .)
    STRINGNATIVE    reduce using rule 30 (body -> truncNative .)
    TYPEOF          reduce using rule 30 (body -> truncNative .)
    PUSH            reduce using rule 30 (body -> truncNative .)
    POP             reduce using rule 30 (body -> truncNative .)
    LENGTH          reduce using rule 30 (body -> truncNative .)
    MUTABLE         reduce using rule 30 (body -> truncNative .)
    STRUCT          reduce using rule 30 (body -> truncNative .)
    $end            reduce using rule 30 (body -> truncNative .)


state 13

    (31) body -> floatNative .

    PRINT           reduce using rule 31 (body -> floatNative .)
    PRINTLN         reduce using rule 31 (body -> floatNative .)
    ID              reduce using rule 31 (body -> floatNative .)
    GLOBAL          reduce using rule 31 (body -> floatNative .)
    FUNCTION        reduce using rule 31 (body -> floatNative .)
    MIENTRAS        reduce using rule 31 (body -> floatNative .)
    FOR             reduce using rule 31 (body -> floatNative .)
    IF              reduce using rule 31 (body -> floatNative .)
    PARSE           reduce using rule 31 (body -> floatNative .)
    TRUNC           reduce using rule 31 (body -> floatNative .)
    FLOAT           reduce using rule 31 (body -> floatNative .)
    STRINGNATIVE    reduce using rule 31 (body -> floatNative .)
    TYPEOF          reduce using rule 31 (body -> floatNative .)
    PUSH            reduce using rule 31 (body -> floatNative .)
    POP             reduce using rule 31 (body -> floatNative .)
    LENGTH          reduce using rule 31 (body -> floatNative .)
    MUTABLE         reduce using rule 31 (body -> floatNative .)
    STRUCT          reduce using rule 31 (body -> floatNative .)
    $end            reduce using rule 31 (body -> floatNative .)


state 14

    (32) body -> stringNative .

    PRINT           reduce using rule 32 (body -> stringNative .)
    PRINTLN         reduce using rule 32 (body -> stringNative .)
    ID              reduce using rule 32 (body -> stringNative .)
    GLOBAL          reduce using rule 32 (body -> stringNative .)
    FUNCTION        reduce using rule 32 (body -> stringNative .)
    MIENTRAS        reduce using rule 32 (body -> stringNative .)
    FOR             reduce using rule 32 (body -> stringNative .)
    IF              reduce using rule 32 (body -> stringNative .)
    PARSE           reduce using rule 32 (body -> stringNative .)
    TRUNC           reduce using rule 32 (body -> stringNative .)
    FLOAT           reduce using rule 32 (body -> stringNative .)
    STRINGNATIVE    reduce using rule 32 (body -> stringNative .)
    TYPEOF          reduce using rule 32 (body -> stringNative .)
    PUSH            reduce using rule 32 (body -> stringNative .)
    POP             reduce using rule 32 (body -> stringNative .)
    LENGTH          reduce using rule 32 (body -> stringNative .)
    MUTABLE         reduce using rule 32 (body -> stringNative .)
    STRUCT          reduce using rule 32 (body -> stringNative .)
    $end            reduce using rule 32 (body -> stringNative .)


state 15

    (33) body -> typeOfNative .

    PRINT           reduce using rule 33 (body -> typeOfNative .)
    PRINTLN         reduce using rule 33 (body -> typeOfNative .)
    ID              reduce using rule 33 (body -> typeOfNative .)
    GLOBAL          reduce using rule 33 (body -> typeOfNative .)
    FUNCTION        reduce using rule 33 (body -> typeOfNative .)
    MIENTRAS        reduce using rule 33 (body -> typeOfNative .)
    FOR             reduce using rule 33 (body -> typeOfNative .)
    IF              reduce using rule 33 (body -> typeOfNative .)
    PARSE           reduce using rule 33 (body -> typeOfNative .)
    TRUNC           reduce using rule 33 (body -> typeOfNative .)
    FLOAT           reduce using rule 33 (body -> typeOfNative .)
    STRINGNATIVE    reduce using rule 33 (body -> typeOfNative .)
    TYPEOF          reduce using rule 33 (body -> typeOfNative .)
    PUSH            reduce using rule 33 (body -> typeOfNative .)
    POP             reduce using rule 33 (body -> typeOfNative .)
    LENGTH          reduce using rule 33 (body -> typeOfNative .)
    MUTABLE         reduce using rule 33 (body -> typeOfNative .)
    STRUCT          reduce using rule 33 (body -> typeOfNative .)
    $end            reduce using rule 33 (body -> typeOfNative .)


state 16

    (34) body -> pushArray .

    PRINT           reduce using rule 34 (body -> pushArray .)
    PRINTLN         reduce using rule 34 (body -> pushArray .)
    ID              reduce using rule 34 (body -> pushArray .)
    GLOBAL          reduce using rule 34 (body -> pushArray .)
    FUNCTION        reduce using rule 34 (body -> pushArray .)
    MIENTRAS        reduce using rule 34 (body -> pushArray .)
    FOR             reduce using rule 34 (body -> pushArray .)
    IF              reduce using rule 34 (body -> pushArray .)
    PARSE           reduce using rule 34 (body -> pushArray .)
    TRUNC           reduce using rule 34 (body -> pushArray .)
    FLOAT           reduce using rule 34 (body -> pushArray .)
    STRINGNATIVE    reduce using rule 34 (body -> pushArray .)
    TYPEOF          reduce using rule 34 (body -> pushArray .)
    PUSH            reduce using rule 34 (body -> pushArray .)
    POP             reduce using rule 34 (body -> pushArray .)
    LENGTH          reduce using rule 34 (body -> pushArray .)
    MUTABLE         reduce using rule 34 (body -> pushArray .)
    STRUCT          reduce using rule 34 (body -> pushArray .)
    $end            reduce using rule 34 (body -> pushArray .)


state 17

    (35) body -> popArray .

    PRINT           reduce using rule 35 (body -> popArray .)
    PRINTLN         reduce using rule 35 (body -> popArray .)
    ID              reduce using rule 35 (body -> popArray .)
    GLOBAL          reduce using rule 35 (body -> popArray .)
    FUNCTION        reduce using rule 35 (body -> popArray .)
    MIENTRAS        reduce using rule 35 (body -> popArray .)
    FOR             reduce using rule 35 (body -> popArray .)
    IF              reduce using rule 35 (body -> popArray .)
    PARSE           reduce using rule 35 (body -> popArray .)
    TRUNC           reduce using rule 35 (body -> popArray .)
    FLOAT           reduce using rule 35 (body -> popArray .)
    STRINGNATIVE    reduce using rule 35 (body -> popArray .)
    TYPEOF          reduce using rule 35 (body -> popArray .)
    PUSH            reduce using rule 35 (body -> popArray .)
    POP             reduce using rule 35 (body -> popArray .)
    LENGTH          reduce using rule 35 (body -> popArray .)
    MUTABLE         reduce using rule 35 (body -> popArray .)
    STRUCT          reduce using rule 35 (body -> popArray .)
    $end            reduce using rule 35 (body -> popArray .)


state 18

    (36) body -> lengthArray .

    PRINT           reduce using rule 36 (body -> lengthArray .)
    PRINTLN         reduce using rule 36 (body -> lengthArray .)
    ID              reduce using rule 36 (body -> lengthArray .)
    GLOBAL          reduce using rule 36 (body -> lengthArray .)
    FUNCTION        reduce using rule 36 (body -> lengthArray .)
    MIENTRAS        reduce using rule 36 (body -> lengthArray .)
    FOR             reduce using rule 36 (body -> lengthArray .)
    IF              reduce using rule 36 (body -> lengthArray .)
    PARSE           reduce using rule 36 (body -> lengthArray .)
    TRUNC           reduce using rule 36 (body -> lengthArray .)
    FLOAT           reduce using rule 36 (body -> lengthArray .)
    STRINGNATIVE    reduce using rule 36 (body -> lengthArray .)
    TYPEOF          reduce using rule 36 (body -> lengthArray .)
    PUSH            reduce using rule 36 (body -> lengthArray .)
    POP             reduce using rule 36 (body -> lengthArray .)
    LENGTH          reduce using rule 36 (body -> lengthArray .)
    MUTABLE         reduce using rule 36 (body -> lengthArray .)
    STRUCT          reduce using rule 36 (body -> lengthArray .)
    $end            reduce using rule 36 (body -> lengthArray .)


state 19

    (37) body -> assignmentArray .

    PRINT           reduce using rule 37 (body -> assignmentArray .)
    PRINTLN         reduce using rule 37 (body -> assignmentArray .)
    ID              reduce using rule 37 (body -> assignmentArray .)
    GLOBAL          reduce using rule 37 (body -> assignmentArray .)
    FUNCTION        reduce using rule 37 (body -> assignmentArray .)
    MIENTRAS        reduce using rule 37 (body -> assignmentArray .)
    FOR             reduce using rule 37 (body -> assignmentArray .)
    IF              reduce using rule 37 (body -> assignmentArray .)
    PARSE           reduce using rule 37 (body -> assignmentArray .)
    TRUNC           reduce using rule 37 (body -> assignmentArray .)
    FLOAT           reduce using rule 37 (body -> assignmentArray .)
    STRINGNATIVE    reduce using rule 37 (body -> assignmentArray .)
    TYPEOF          reduce using rule 37 (body -> assignmentArray .)
    PUSH            reduce using rule 37 (body -> assignmentArray .)
    POP             reduce using rule 37 (body -> assignmentArray .)
    LENGTH          reduce using rule 37 (body -> assignmentArray .)
    MUTABLE         reduce using rule 37 (body -> assignmentArray .)
    STRUCT          reduce using rule 37 (body -> assignmentArray .)
    $end            reduce using rule 37 (body -> assignmentArray .)


state 20

    (38) body -> Struct .

    PRINT           reduce using rule 38 (body -> Struct .)
    PRINTLN         reduce using rule 38 (body -> Struct .)
    ID              reduce using rule 38 (body -> Struct .)
    GLOBAL          reduce using rule 38 (body -> Struct .)
    FUNCTION        reduce using rule 38 (body -> Struct .)
    MIENTRAS        reduce using rule 38 (body -> Struct .)
    FOR             reduce using rule 38 (body -> Struct .)
    IF              reduce using rule 38 (body -> Struct .)
    PARSE           reduce using rule 38 (body -> Struct .)
    TRUNC           reduce using rule 38 (body -> Struct .)
    FLOAT           reduce using rule 38 (body -> Struct .)
    STRINGNATIVE    reduce using rule 38 (body -> Struct .)
    TYPEOF          reduce using rule 38 (body -> Struct .)
    PUSH            reduce using rule 38 (body -> Struct .)
    POP             reduce using rule 38 (body -> Struct .)
    LENGTH          reduce using rule 38 (body -> Struct .)
    MUTABLE         reduce using rule 38 (body -> Struct .)
    STRUCT          reduce using rule 38 (body -> Struct .)
    $end            reduce using rule 38 (body -> Struct .)


state 21

    (39) body -> structAccess .

    PRINT           reduce using rule 39 (body -> structAccess .)
    PRINTLN         reduce using rule 39 (body -> structAccess .)
    ID              reduce using rule 39 (body -> structAccess .)
    GLOBAL          reduce using rule 39 (body -> structAccess .)
    FUNCTION        reduce using rule 39 (body -> structAccess .)
    MIENTRAS        reduce using rule 39 (body -> structAccess .)
    FOR             reduce using rule 39 (body -> structAccess .)
    IF              reduce using rule 39 (body -> structAccess .)
    PARSE           reduce using rule 39 (body -> structAccess .)
    TRUNC           reduce using rule 39 (body -> structAccess .)
    FLOAT           reduce using rule 39 (body -> structAccess .)
    STRINGNATIVE    reduce using rule 39 (body -> structAccess .)
    TYPEOF          reduce using rule 39 (body -> structAccess .)
    PUSH            reduce using rule 39 (body -> structAccess .)
    POP             reduce using rule 39 (body -> structAccess .)
    LENGTH          reduce using rule 39 (body -> structAccess .)
    MUTABLE         reduce using rule 39 (body -> structAccess .)
    STRUCT          reduce using rule 39 (body -> structAccess .)
    $end            reduce using rule 39 (body -> structAccess .)


state 22

    (40) body -> empty .

    PRINT           reduce using rule 40 (body -> empty .)
    PRINTLN         reduce using rule 40 (body -> empty .)
    ID              reduce using rule 40 (body -> empty .)
    GLOBAL          reduce using rule 40 (body -> empty .)
    FUNCTION        reduce using rule 40 (body -> empty .)
    MIENTRAS        reduce using rule 40 (body -> empty .)
    FOR             reduce using rule 40 (body -> empty .)
    IF              reduce using rule 40 (body -> empty .)
    PARSE           reduce using rule 40 (body -> empty .)
    TRUNC           reduce using rule 40 (body -> empty .)
    FLOAT           reduce using rule 40 (body -> empty .)
    STRINGNATIVE    reduce using rule 40 (body -> empty .)
    TYPEOF          reduce using rule 40 (body -> empty .)
    PUSH            reduce using rule 40 (body -> empty .)
    POP             reduce using rule 40 (body -> empty .)
    LENGTH          reduce using rule 40 (body -> empty .)
    MUTABLE         reduce using rule 40 (body -> empty .)
    STRUCT          reduce using rule 40 (body -> empty .)
    $end            reduce using rule 40 (body -> empty .)


state 23

    (168) Print -> PRINT . PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> PRINT . PARENTESISA parametersCall PARENTESISC PCOMA

    PARENTESISA     shift and go to state 60


state 24

    (170) Println -> PRINTLN . PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> PRINTLN . PARENTESISA PARENTESISC PCOMA
    (172) Println -> PRINTLN . PARENTESISA parametersCall PARENTESISC PCOMA

    PARENTESISA     shift and go to state 61


state 25

    (75) create_function -> FUNCTION . ID PARENTESISA parameters PARENTESISC block_function END PCOMA
    (76) create_function -> FUNCTION . ID PARENTESISA PARENTESISC block_function END PCOMA

    ID              shift and go to state 62


state 26

    (173) Asignacion -> ID . IGUAL exp PCOMA
    (174) Asignacion -> ID . IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> ID . IGUAL exp DOSP DOSP ID PCOMA
    (71) functionCall -> ID . PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> ID . PARENTESISA PARENTESISC PCOMA
    (224) assignmentArray -> ID . listArrayRef IGUAL exp PCOMA
    (49) structAccess -> ID . attributes IGUAL exp PCOMA
    (225) listArrayRef -> . listArrayRef CORCHETEA exp CORCHETEC
    (226) listArrayRef -> . CORCHETEA exp CORCHETEC
    (193) attributes -> . attributes PUNTO ID
    (194) attributes -> . PUNTO ID

    IGUAL           shift and go to state 63
    PARENTESISA     shift and go to state 64
    CORCHETEA       shift and go to state 67
    PUNTO           shift and go to state 68

    listArrayRef                   shift and go to state 65
    attributes                     shift and go to state 66

state 27

    (176) Asignacion -> GLOBAL . ID IGUAL exp PCOMA
    (177) Asignacion -> GLOBAL . ID PCOMA

    ID              shift and go to state 69


state 28

    (69) whileLoop -> MIENTRAS . exp block_loops END PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 70
    array                          shift and go to state 83

state 29

    (70) forLoop -> FOR . ID IN exp block_loops END PCOMA

    ID              shift and go to state 100


state 30

    (62) IfCondition -> IF . exp block_loops elseIfSt elseSt END PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 101
    array                          shift and go to state 83

state 31

    (56) parseNative -> PARSE . PARENTESISA type COMA exp PARENTESISC PCOMA

    PARENTESISA     shift and go to state 102


state 32

    (57) truncNative -> TRUNC . PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> TRUNC . PARENTESISA exp PARENTESISC PCOMA

    PARENTESISA     shift and go to state 103


state 33

    (59) floatNative -> FLOAT . PARENTESISA exp PARENTESISC PCOMA

    PARENTESISA     shift and go to state 104


state 34

    (60) stringNative -> STRINGNATIVE . PARENTESISA exp PARENTESISC PCOMA

    PARENTESISA     shift and go to state 105


state 35

    (61) typeOfNative -> TYPEOF . PARENTESISA exp PARENTESISC PCOMA

    PARENTESISA     shift and go to state 106


state 36

    (50) pushArray -> PUSH . NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> PUSH . NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA

    NOT             shift and go to state 107


state 37

    (52) popArray -> POP . NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> POP . NOT PARENTESISA ID PARENTESISC PCOMA

    NOT             shift and go to state 108


state 38

    (54) lengthArray -> LENGTH . PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> LENGTH . PARENTESISA ID PARENTESISC PCOMA

    PARENTESISA     shift and go to state 109


state 39

    (41) Struct -> MUTABLE . STRUCT ID bodyStruct END PCOMA

    STRUCT          shift and go to state 110


state 40

    (42) Struct -> STRUCT . ID bodyStruct END PCOMA

    ID              shift and go to state 111


state 41

    (2) body -> body Print .

    PRINT           reduce using rule 2 (body -> body Print .)
    PRINTLN         reduce using rule 2 (body -> body Print .)
    ID              reduce using rule 2 (body -> body Print .)
    GLOBAL          reduce using rule 2 (body -> body Print .)
    FUNCTION        reduce using rule 2 (body -> body Print .)
    MIENTRAS        reduce using rule 2 (body -> body Print .)
    FOR             reduce using rule 2 (body -> body Print .)
    IF              reduce using rule 2 (body -> body Print .)
    PARSE           reduce using rule 2 (body -> body Print .)
    TRUNC           reduce using rule 2 (body -> body Print .)
    FLOAT           reduce using rule 2 (body -> body Print .)
    STRINGNATIVE    reduce using rule 2 (body -> body Print .)
    TYPEOF          reduce using rule 2 (body -> body Print .)
    PUSH            reduce using rule 2 (body -> body Print .)
    POP             reduce using rule 2 (body -> body Print .)
    LENGTH          reduce using rule 2 (body -> body Print .)
    MUTABLE         reduce using rule 2 (body -> body Print .)
    STRUCT          reduce using rule 2 (body -> body Print .)
    $end            reduce using rule 2 (body -> body Print .)


state 42

    (3) body -> body Println .

    PRINT           reduce using rule 3 (body -> body Println .)
    PRINTLN         reduce using rule 3 (body -> body Println .)
    ID              reduce using rule 3 (body -> body Println .)
    GLOBAL          reduce using rule 3 (body -> body Println .)
    FUNCTION        reduce using rule 3 (body -> body Println .)
    MIENTRAS        reduce using rule 3 (body -> body Println .)
    FOR             reduce using rule 3 (body -> body Println .)
    IF              reduce using rule 3 (body -> body Println .)
    PARSE           reduce using rule 3 (body -> body Println .)
    TRUNC           reduce using rule 3 (body -> body Println .)
    FLOAT           reduce using rule 3 (body -> body Println .)
    STRINGNATIVE    reduce using rule 3 (body -> body Println .)
    TYPEOF          reduce using rule 3 (body -> body Println .)
    PUSH            reduce using rule 3 (body -> body Println .)
    POP             reduce using rule 3 (body -> body Println .)
    LENGTH          reduce using rule 3 (body -> body Println .)
    MUTABLE         reduce using rule 3 (body -> body Println .)
    STRUCT          reduce using rule 3 (body -> body Println .)
    $end            reduce using rule 3 (body -> body Println .)


state 43

    (4) body -> body Asignacion .

    PRINT           reduce using rule 4 (body -> body Asignacion .)
    PRINTLN         reduce using rule 4 (body -> body Asignacion .)
    ID              reduce using rule 4 (body -> body Asignacion .)
    GLOBAL          reduce using rule 4 (body -> body Asignacion .)
    FUNCTION        reduce using rule 4 (body -> body Asignacion .)
    MIENTRAS        reduce using rule 4 (body -> body Asignacion .)
    FOR             reduce using rule 4 (body -> body Asignacion .)
    IF              reduce using rule 4 (body -> body Asignacion .)
    PARSE           reduce using rule 4 (body -> body Asignacion .)
    TRUNC           reduce using rule 4 (body -> body Asignacion .)
    FLOAT           reduce using rule 4 (body -> body Asignacion .)
    STRINGNATIVE    reduce using rule 4 (body -> body Asignacion .)
    TYPEOF          reduce using rule 4 (body -> body Asignacion .)
    PUSH            reduce using rule 4 (body -> body Asignacion .)
    POP             reduce using rule 4 (body -> body Asignacion .)
    LENGTH          reduce using rule 4 (body -> body Asignacion .)
    MUTABLE         reduce using rule 4 (body -> body Asignacion .)
    STRUCT          reduce using rule 4 (body -> body Asignacion .)
    $end            reduce using rule 4 (body -> body Asignacion .)


state 44

    (5) body -> body create_function .

    PRINT           reduce using rule 5 (body -> body create_function .)
    PRINTLN         reduce using rule 5 (body -> body create_function .)
    ID              reduce using rule 5 (body -> body create_function .)
    GLOBAL          reduce using rule 5 (body -> body create_function .)
    FUNCTION        reduce using rule 5 (body -> body create_function .)
    MIENTRAS        reduce using rule 5 (body -> body create_function .)
    FOR             reduce using rule 5 (body -> body create_function .)
    IF              reduce using rule 5 (body -> body create_function .)
    PARSE           reduce using rule 5 (body -> body create_function .)
    TRUNC           reduce using rule 5 (body -> body create_function .)
    FLOAT           reduce using rule 5 (body -> body create_function .)
    STRINGNATIVE    reduce using rule 5 (body -> body create_function .)
    TYPEOF          reduce using rule 5 (body -> body create_function .)
    PUSH            reduce using rule 5 (body -> body create_function .)
    POP             reduce using rule 5 (body -> body create_function .)
    LENGTH          reduce using rule 5 (body -> body create_function .)
    MUTABLE         reduce using rule 5 (body -> body create_function .)
    STRUCT          reduce using rule 5 (body -> body create_function .)
    $end            reduce using rule 5 (body -> body create_function .)


state 45

    (6) body -> body functionCall .

    PRINT           reduce using rule 6 (body -> body functionCall .)
    PRINTLN         reduce using rule 6 (body -> body functionCall .)
    ID              reduce using rule 6 (body -> body functionCall .)
    GLOBAL          reduce using rule 6 (body -> body functionCall .)
    FUNCTION        reduce using rule 6 (body -> body functionCall .)
    MIENTRAS        reduce using rule 6 (body -> body functionCall .)
    FOR             reduce using rule 6 (body -> body functionCall .)
    IF              reduce using rule 6 (body -> body functionCall .)
    PARSE           reduce using rule 6 (body -> body functionCall .)
    TRUNC           reduce using rule 6 (body -> body functionCall .)
    FLOAT           reduce using rule 6 (body -> body functionCall .)
    STRINGNATIVE    reduce using rule 6 (body -> body functionCall .)
    TYPEOF          reduce using rule 6 (body -> body functionCall .)
    PUSH            reduce using rule 6 (body -> body functionCall .)
    POP             reduce using rule 6 (body -> body functionCall .)
    LENGTH          reduce using rule 6 (body -> body functionCall .)
    MUTABLE         reduce using rule 6 (body -> body functionCall .)
    STRUCT          reduce using rule 6 (body -> body functionCall .)
    $end            reduce using rule 6 (body -> body functionCall .)


state 46

    (7) body -> body whileLoop .

    PRINT           reduce using rule 7 (body -> body whileLoop .)
    PRINTLN         reduce using rule 7 (body -> body whileLoop .)
    ID              reduce using rule 7 (body -> body whileLoop .)
    GLOBAL          reduce using rule 7 (body -> body whileLoop .)
    FUNCTION        reduce using rule 7 (body -> body whileLoop .)
    MIENTRAS        reduce using rule 7 (body -> body whileLoop .)
    FOR             reduce using rule 7 (body -> body whileLoop .)
    IF              reduce using rule 7 (body -> body whileLoop .)
    PARSE           reduce using rule 7 (body -> body whileLoop .)
    TRUNC           reduce using rule 7 (body -> body whileLoop .)
    FLOAT           reduce using rule 7 (body -> body whileLoop .)
    STRINGNATIVE    reduce using rule 7 (body -> body whileLoop .)
    TYPEOF          reduce using rule 7 (body -> body whileLoop .)
    PUSH            reduce using rule 7 (body -> body whileLoop .)
    POP             reduce using rule 7 (body -> body whileLoop .)
    LENGTH          reduce using rule 7 (body -> body whileLoop .)
    MUTABLE         reduce using rule 7 (body -> body whileLoop .)
    STRUCT          reduce using rule 7 (body -> body whileLoop .)
    $end            reduce using rule 7 (body -> body whileLoop .)


state 47

    (8) body -> body forLoop .

    PRINT           reduce using rule 8 (body -> body forLoop .)
    PRINTLN         reduce using rule 8 (body -> body forLoop .)
    ID              reduce using rule 8 (body -> body forLoop .)
    GLOBAL          reduce using rule 8 (body -> body forLoop .)
    FUNCTION        reduce using rule 8 (body -> body forLoop .)
    MIENTRAS        reduce using rule 8 (body -> body forLoop .)
    FOR             reduce using rule 8 (body -> body forLoop .)
    IF              reduce using rule 8 (body -> body forLoop .)
    PARSE           reduce using rule 8 (body -> body forLoop .)
    TRUNC           reduce using rule 8 (body -> body forLoop .)
    FLOAT           reduce using rule 8 (body -> body forLoop .)
    STRINGNATIVE    reduce using rule 8 (body -> body forLoop .)
    TYPEOF          reduce using rule 8 (body -> body forLoop .)
    PUSH            reduce using rule 8 (body -> body forLoop .)
    POP             reduce using rule 8 (body -> body forLoop .)
    LENGTH          reduce using rule 8 (body -> body forLoop .)
    MUTABLE         reduce using rule 8 (body -> body forLoop .)
    STRUCT          reduce using rule 8 (body -> body forLoop .)
    $end            reduce using rule 8 (body -> body forLoop .)


state 48

    (9) body -> body IfCondition .

    PRINT           reduce using rule 9 (body -> body IfCondition .)
    PRINTLN         reduce using rule 9 (body -> body IfCondition .)
    ID              reduce using rule 9 (body -> body IfCondition .)
    GLOBAL          reduce using rule 9 (body -> body IfCondition .)
    FUNCTION        reduce using rule 9 (body -> body IfCondition .)
    MIENTRAS        reduce using rule 9 (body -> body IfCondition .)
    FOR             reduce using rule 9 (body -> body IfCondition .)
    IF              reduce using rule 9 (body -> body IfCondition .)
    PARSE           reduce using rule 9 (body -> body IfCondition .)
    TRUNC           reduce using rule 9 (body -> body IfCondition .)
    FLOAT           reduce using rule 9 (body -> body IfCondition .)
    STRINGNATIVE    reduce using rule 9 (body -> body IfCondition .)
    TYPEOF          reduce using rule 9 (body -> body IfCondition .)
    PUSH            reduce using rule 9 (body -> body IfCondition .)
    POP             reduce using rule 9 (body -> body IfCondition .)
    LENGTH          reduce using rule 9 (body -> body IfCondition .)
    MUTABLE         reduce using rule 9 (body -> body IfCondition .)
    STRUCT          reduce using rule 9 (body -> body IfCondition .)
    $end            reduce using rule 9 (body -> body IfCondition .)


state 49

    (10) body -> body parseNative .

    PRINT           reduce using rule 10 (body -> body parseNative .)
    PRINTLN         reduce using rule 10 (body -> body parseNative .)
    ID              reduce using rule 10 (body -> body parseNative .)
    GLOBAL          reduce using rule 10 (body -> body parseNative .)
    FUNCTION        reduce using rule 10 (body -> body parseNative .)
    MIENTRAS        reduce using rule 10 (body -> body parseNative .)
    FOR             reduce using rule 10 (body -> body parseNative .)
    IF              reduce using rule 10 (body -> body parseNative .)
    PARSE           reduce using rule 10 (body -> body parseNative .)
    TRUNC           reduce using rule 10 (body -> body parseNative .)
    FLOAT           reduce using rule 10 (body -> body parseNative .)
    STRINGNATIVE    reduce using rule 10 (body -> body parseNative .)
    TYPEOF          reduce using rule 10 (body -> body parseNative .)
    PUSH            reduce using rule 10 (body -> body parseNative .)
    POP             reduce using rule 10 (body -> body parseNative .)
    LENGTH          reduce using rule 10 (body -> body parseNative .)
    MUTABLE         reduce using rule 10 (body -> body parseNative .)
    STRUCT          reduce using rule 10 (body -> body parseNative .)
    $end            reduce using rule 10 (body -> body parseNative .)


state 50

    (11) body -> body truncNative .

    PRINT           reduce using rule 11 (body -> body truncNative .)
    PRINTLN         reduce using rule 11 (body -> body truncNative .)
    ID              reduce using rule 11 (body -> body truncNative .)
    GLOBAL          reduce using rule 11 (body -> body truncNative .)
    FUNCTION        reduce using rule 11 (body -> body truncNative .)
    MIENTRAS        reduce using rule 11 (body -> body truncNative .)
    FOR             reduce using rule 11 (body -> body truncNative .)
    IF              reduce using rule 11 (body -> body truncNative .)
    PARSE           reduce using rule 11 (body -> body truncNative .)
    TRUNC           reduce using rule 11 (body -> body truncNative .)
    FLOAT           reduce using rule 11 (body -> body truncNative .)
    STRINGNATIVE    reduce using rule 11 (body -> body truncNative .)
    TYPEOF          reduce using rule 11 (body -> body truncNative .)
    PUSH            reduce using rule 11 (body -> body truncNative .)
    POP             reduce using rule 11 (body -> body truncNative .)
    LENGTH          reduce using rule 11 (body -> body truncNative .)
    MUTABLE         reduce using rule 11 (body -> body truncNative .)
    STRUCT          reduce using rule 11 (body -> body truncNative .)
    $end            reduce using rule 11 (body -> body truncNative .)


state 51

    (12) body -> body floatNative .

    PRINT           reduce using rule 12 (body -> body floatNative .)
    PRINTLN         reduce using rule 12 (body -> body floatNative .)
    ID              reduce using rule 12 (body -> body floatNative .)
    GLOBAL          reduce using rule 12 (body -> body floatNative .)
    FUNCTION        reduce using rule 12 (body -> body floatNative .)
    MIENTRAS        reduce using rule 12 (body -> body floatNative .)
    FOR             reduce using rule 12 (body -> body floatNative .)
    IF              reduce using rule 12 (body -> body floatNative .)
    PARSE           reduce using rule 12 (body -> body floatNative .)
    TRUNC           reduce using rule 12 (body -> body floatNative .)
    FLOAT           reduce using rule 12 (body -> body floatNative .)
    STRINGNATIVE    reduce using rule 12 (body -> body floatNative .)
    TYPEOF          reduce using rule 12 (body -> body floatNative .)
    PUSH            reduce using rule 12 (body -> body floatNative .)
    POP             reduce using rule 12 (body -> body floatNative .)
    LENGTH          reduce using rule 12 (body -> body floatNative .)
    MUTABLE         reduce using rule 12 (body -> body floatNative .)
    STRUCT          reduce using rule 12 (body -> body floatNative .)
    $end            reduce using rule 12 (body -> body floatNative .)


state 52

    (13) body -> body stringNative .

    PRINT           reduce using rule 13 (body -> body stringNative .)
    PRINTLN         reduce using rule 13 (body -> body stringNative .)
    ID              reduce using rule 13 (body -> body stringNative .)
    GLOBAL          reduce using rule 13 (body -> body stringNative .)
    FUNCTION        reduce using rule 13 (body -> body stringNative .)
    MIENTRAS        reduce using rule 13 (body -> body stringNative .)
    FOR             reduce using rule 13 (body -> body stringNative .)
    IF              reduce using rule 13 (body -> body stringNative .)
    PARSE           reduce using rule 13 (body -> body stringNative .)
    TRUNC           reduce using rule 13 (body -> body stringNative .)
    FLOAT           reduce using rule 13 (body -> body stringNative .)
    STRINGNATIVE    reduce using rule 13 (body -> body stringNative .)
    TYPEOF          reduce using rule 13 (body -> body stringNative .)
    PUSH            reduce using rule 13 (body -> body stringNative .)
    POP             reduce using rule 13 (body -> body stringNative .)
    LENGTH          reduce using rule 13 (body -> body stringNative .)
    MUTABLE         reduce using rule 13 (body -> body stringNative .)
    STRUCT          reduce using rule 13 (body -> body stringNative .)
    $end            reduce using rule 13 (body -> body stringNative .)


state 53

    (14) body -> body typeOfNative .

    PRINT           reduce using rule 14 (body -> body typeOfNative .)
    PRINTLN         reduce using rule 14 (body -> body typeOfNative .)
    ID              reduce using rule 14 (body -> body typeOfNative .)
    GLOBAL          reduce using rule 14 (body -> body typeOfNative .)
    FUNCTION        reduce using rule 14 (body -> body typeOfNative .)
    MIENTRAS        reduce using rule 14 (body -> body typeOfNative .)
    FOR             reduce using rule 14 (body -> body typeOfNative .)
    IF              reduce using rule 14 (body -> body typeOfNative .)
    PARSE           reduce using rule 14 (body -> body typeOfNative .)
    TRUNC           reduce using rule 14 (body -> body typeOfNative .)
    FLOAT           reduce using rule 14 (body -> body typeOfNative .)
    STRINGNATIVE    reduce using rule 14 (body -> body typeOfNative .)
    TYPEOF          reduce using rule 14 (body -> body typeOfNative .)
    PUSH            reduce using rule 14 (body -> body typeOfNative .)
    POP             reduce using rule 14 (body -> body typeOfNative .)
    LENGTH          reduce using rule 14 (body -> body typeOfNative .)
    MUTABLE         reduce using rule 14 (body -> body typeOfNative .)
    STRUCT          reduce using rule 14 (body -> body typeOfNative .)
    $end            reduce using rule 14 (body -> body typeOfNative .)


state 54

    (15) body -> body pushArray .

    PRINT           reduce using rule 15 (body -> body pushArray .)
    PRINTLN         reduce using rule 15 (body -> body pushArray .)
    ID              reduce using rule 15 (body -> body pushArray .)
    GLOBAL          reduce using rule 15 (body -> body pushArray .)
    FUNCTION        reduce using rule 15 (body -> body pushArray .)
    MIENTRAS        reduce using rule 15 (body -> body pushArray .)
    FOR             reduce using rule 15 (body -> body pushArray .)
    IF              reduce using rule 15 (body -> body pushArray .)
    PARSE           reduce using rule 15 (body -> body pushArray .)
    TRUNC           reduce using rule 15 (body -> body pushArray .)
    FLOAT           reduce using rule 15 (body -> body pushArray .)
    STRINGNATIVE    reduce using rule 15 (body -> body pushArray .)
    TYPEOF          reduce using rule 15 (body -> body pushArray .)
    PUSH            reduce using rule 15 (body -> body pushArray .)
    POP             reduce using rule 15 (body -> body pushArray .)
    LENGTH          reduce using rule 15 (body -> body pushArray .)
    MUTABLE         reduce using rule 15 (body -> body pushArray .)
    STRUCT          reduce using rule 15 (body -> body pushArray .)
    $end            reduce using rule 15 (body -> body pushArray .)


state 55

    (16) body -> body popArray .

    PRINT           reduce using rule 16 (body -> body popArray .)
    PRINTLN         reduce using rule 16 (body -> body popArray .)
    ID              reduce using rule 16 (body -> body popArray .)
    GLOBAL          reduce using rule 16 (body -> body popArray .)
    FUNCTION        reduce using rule 16 (body -> body popArray .)
    MIENTRAS        reduce using rule 16 (body -> body popArray .)
    FOR             reduce using rule 16 (body -> body popArray .)
    IF              reduce using rule 16 (body -> body popArray .)
    PARSE           reduce using rule 16 (body -> body popArray .)
    TRUNC           reduce using rule 16 (body -> body popArray .)
    FLOAT           reduce using rule 16 (body -> body popArray .)
    STRINGNATIVE    reduce using rule 16 (body -> body popArray .)
    TYPEOF          reduce using rule 16 (body -> body popArray .)
    PUSH            reduce using rule 16 (body -> body popArray .)
    POP             reduce using rule 16 (body -> body popArray .)
    LENGTH          reduce using rule 16 (body -> body popArray .)
    MUTABLE         reduce using rule 16 (body -> body popArray .)
    STRUCT          reduce using rule 16 (body -> body popArray .)
    $end            reduce using rule 16 (body -> body popArray .)


state 56

    (17) body -> body lengthArray .

    PRINT           reduce using rule 17 (body -> body lengthArray .)
    PRINTLN         reduce using rule 17 (body -> body lengthArray .)
    ID              reduce using rule 17 (body -> body lengthArray .)
    GLOBAL          reduce using rule 17 (body -> body lengthArray .)
    FUNCTION        reduce using rule 17 (body -> body lengthArray .)
    MIENTRAS        reduce using rule 17 (body -> body lengthArray .)
    FOR             reduce using rule 17 (body -> body lengthArray .)
    IF              reduce using rule 17 (body -> body lengthArray .)
    PARSE           reduce using rule 17 (body -> body lengthArray .)
    TRUNC           reduce using rule 17 (body -> body lengthArray .)
    FLOAT           reduce using rule 17 (body -> body lengthArray .)
    STRINGNATIVE    reduce using rule 17 (body -> body lengthArray .)
    TYPEOF          reduce using rule 17 (body -> body lengthArray .)
    PUSH            reduce using rule 17 (body -> body lengthArray .)
    POP             reduce using rule 17 (body -> body lengthArray .)
    LENGTH          reduce using rule 17 (body -> body lengthArray .)
    MUTABLE         reduce using rule 17 (body -> body lengthArray .)
    STRUCT          reduce using rule 17 (body -> body lengthArray .)
    $end            reduce using rule 17 (body -> body lengthArray .)


state 57

    (18) body -> body assignmentArray .

    PRINT           reduce using rule 18 (body -> body assignmentArray .)
    PRINTLN         reduce using rule 18 (body -> body assignmentArray .)
    ID              reduce using rule 18 (body -> body assignmentArray .)
    GLOBAL          reduce using rule 18 (body -> body assignmentArray .)
    FUNCTION        reduce using rule 18 (body -> body assignmentArray .)
    MIENTRAS        reduce using rule 18 (body -> body assignmentArray .)
    FOR             reduce using rule 18 (body -> body assignmentArray .)
    IF              reduce using rule 18 (body -> body assignmentArray .)
    PARSE           reduce using rule 18 (body -> body assignmentArray .)
    TRUNC           reduce using rule 18 (body -> body assignmentArray .)
    FLOAT           reduce using rule 18 (body -> body assignmentArray .)
    STRINGNATIVE    reduce using rule 18 (body -> body assignmentArray .)
    TYPEOF          reduce using rule 18 (body -> body assignmentArray .)
    PUSH            reduce using rule 18 (body -> body assignmentArray .)
    POP             reduce using rule 18 (body -> body assignmentArray .)
    LENGTH          reduce using rule 18 (body -> body assignmentArray .)
    MUTABLE         reduce using rule 18 (body -> body assignmentArray .)
    STRUCT          reduce using rule 18 (body -> body assignmentArray .)
    $end            reduce using rule 18 (body -> body assignmentArray .)


state 58

    (19) body -> body Struct .

    PRINT           reduce using rule 19 (body -> body Struct .)
    PRINTLN         reduce using rule 19 (body -> body Struct .)
    ID              reduce using rule 19 (body -> body Struct .)
    GLOBAL          reduce using rule 19 (body -> body Struct .)
    FUNCTION        reduce using rule 19 (body -> body Struct .)
    MIENTRAS        reduce using rule 19 (body -> body Struct .)
    FOR             reduce using rule 19 (body -> body Struct .)
    IF              reduce using rule 19 (body -> body Struct .)
    PARSE           reduce using rule 19 (body -> body Struct .)
    TRUNC           reduce using rule 19 (body -> body Struct .)
    FLOAT           reduce using rule 19 (body -> body Struct .)
    STRINGNATIVE    reduce using rule 19 (body -> body Struct .)
    TYPEOF          reduce using rule 19 (body -> body Struct .)
    PUSH            reduce using rule 19 (body -> body Struct .)
    POP             reduce using rule 19 (body -> body Struct .)
    LENGTH          reduce using rule 19 (body -> body Struct .)
    MUTABLE         reduce using rule 19 (body -> body Struct .)
    STRUCT          reduce using rule 19 (body -> body Struct .)
    $end            reduce using rule 19 (body -> body Struct .)


state 59

    (20) body -> body structAccess .

    PRINT           reduce using rule 20 (body -> body structAccess .)
    PRINTLN         reduce using rule 20 (body -> body structAccess .)
    ID              reduce using rule 20 (body -> body structAccess .)
    GLOBAL          reduce using rule 20 (body -> body structAccess .)
    FUNCTION        reduce using rule 20 (body -> body structAccess .)
    MIENTRAS        reduce using rule 20 (body -> body structAccess .)
    FOR             reduce using rule 20 (body -> body structAccess .)
    IF              reduce using rule 20 (body -> body structAccess .)
    PARSE           reduce using rule 20 (body -> body structAccess .)
    TRUNC           reduce using rule 20 (body -> body structAccess .)
    FLOAT           reduce using rule 20 (body -> body structAccess .)
    STRINGNATIVE    reduce using rule 20 (body -> body structAccess .)
    TYPEOF          reduce using rule 20 (body -> body structAccess .)
    PUSH            reduce using rule 20 (body -> body structAccess .)
    POP             reduce using rule 20 (body -> body structAccess .)
    LENGTH          reduce using rule 20 (body -> body structAccess .)
    MUTABLE         reduce using rule 20 (body -> body structAccess .)
    STRUCT          reduce using rule 20 (body -> body structAccess .)
    $end            reduce using rule 20 (body -> body structAccess .)


state 60

    (168) Print -> PRINT PARENTESISA . exp PARENTESISC PCOMA
    (169) Print -> PRINT PARENTESISA . parametersCall PARENTESISC PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (73) parametersCall -> . parametersCall COMA exp
    (74) parametersCall -> . exp
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 112
    parametersCall                 shift and go to state 113
    array                          shift and go to state 83

state 61

    (170) Println -> PRINTLN PARENTESISA . exp PARENTESISC PCOMA
    (171) Println -> PRINTLN PARENTESISA . PARENTESISC PCOMA
    (172) Println -> PRINTLN PARENTESISA . parametersCall PARENTESISC PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (73) parametersCall -> . parametersCall COMA exp
    (74) parametersCall -> . exp
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    PARENTESISC     shift and go to state 115
    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 114
    parametersCall                 shift and go to state 116
    array                          shift and go to state 83

state 62

    (75) create_function -> FUNCTION ID . PARENTESISA parameters PARENTESISC block_function END PCOMA
    (76) create_function -> FUNCTION ID . PARENTESISA PARENTESISC block_function END PCOMA

    PARENTESISA     shift and go to state 117


state 63

    (173) Asignacion -> ID IGUAL . exp PCOMA
    (174) Asignacion -> ID IGUAL . exp DOSP DOSP type PCOMA
    (175) Asignacion -> ID IGUAL . exp DOSP DOSP ID PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 118
    array                          shift and go to state 83

state 64

    (71) functionCall -> ID PARENTESISA . parametersCall PARENTESISC PCOMA
    (72) functionCall -> ID PARENTESISA . PARENTESISC PCOMA
    (73) parametersCall -> . parametersCall COMA exp
    (74) parametersCall -> . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    PARENTESISC     shift and go to state 120
    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    parametersCall                 shift and go to state 119
    exp                            shift and go to state 121
    array                          shift and go to state 83

state 65

    (224) assignmentArray -> ID listArrayRef . IGUAL exp PCOMA
    (225) listArrayRef -> listArrayRef . CORCHETEA exp CORCHETEC

    IGUAL           shift and go to state 122
    CORCHETEA       shift and go to state 123


state 66

    (49) structAccess -> ID attributes . IGUAL exp PCOMA
    (193) attributes -> attributes . PUNTO ID

    IGUAL           shift and go to state 124
    PUNTO           shift and go to state 125


state 67

    (226) listArrayRef -> CORCHETEA . exp CORCHETEC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 126
    array                          shift and go to state 83

state 68

    (194) attributes -> PUNTO . ID

    ID              shift and go to state 127


state 69

    (176) Asignacion -> GLOBAL ID . IGUAL exp PCOMA
    (177) Asignacion -> GLOBAL ID . PCOMA

    IGUAL           shift and go to state 128
    PCOMA           shift and go to state 129


state 70

    (69) whileLoop -> MIENTRAS exp . block_loops END PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp
    (124) block_loops -> . block_loops Print
    (125) block_loops -> . block_loops Println
    (126) block_loops -> . block_loops Asignacion
    (127) block_loops -> . block_loops retorno
    (128) block_loops -> . block_loops functionCall
    (129) block_loops -> . block_loops forLoop
    (130) block_loops -> . block_loops whileLoop
    (131) block_loops -> . block_loops IfCondition
    (132) block_loops -> . block_loops parseNative
    (133) block_loops -> . block_loops truncNative
    (134) block_loops -> . block_loops floatNative
    (135) block_loops -> . block_loops stringNative
    (136) block_loops -> . block_loops typeOfNative
    (137) block_loops -> . block_loops pushArray
    (138) block_loops -> . block_loops popArray
    (139) block_loops -> . block_loops lengthArray
    (140) block_loops -> . block_loops assignmentArray
    (141) block_loops -> . block_loops Break
    (142) block_loops -> . block_loops Continue
    (143) block_loops -> . block_loops Struct
    (144) block_loops -> . block_loops structAccess
    (145) block_loops -> . Print
    (146) block_loops -> . Println
    (147) block_loops -> . Asignacion
    (148) block_loops -> . retorno
    (149) block_loops -> . functionCall
    (150) block_loops -> . whileLoop
    (151) block_loops -> . forLoop
    (152) block_loops -> . IfCondition
    (153) block_loops -> . parseNative
    (154) block_loops -> . truncNative
    (155) block_loops -> . floatNative
    (156) block_loops -> . stringNative
    (157) block_loops -> . typeOfNative
    (158) block_loops -> . pushArray
    (159) block_loops -> . popArray
    (160) block_loops -> . lengthArray
    (161) block_loops -> . assignmentArray
    (162) block_loops -> . Break
    (163) block_loops -> . Continue
    (164) block_loops -> . Struct
    (165) block_loops -> . structAccess
    (166) block_loops -> . empty
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (167) retorno -> . RETURN exp PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (122) Break -> . BREAK PCOMA
    (123) Continue -> . CONTINUE PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA
    (68) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for GLOBAL resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARSE resolved as shift
  ! shift/reduce conflict for TRUNC resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRINGNATIVE resolved as shift
  ! shift/reduce conflict for TYPEOF resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for LENGTH resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for MUTABLE resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    RETURN          shift and go to state 168
    MIENTRAS        shift and go to state 28
    FOR             shift and go to state 29
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    BREAK           shift and go to state 169
    CONTINUE        shift and go to state 170
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40
    END             reduce using rule 68 (empty -> .)

  ! PRINT           [ reduce using rule 68 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 68 (empty -> .) ]
  ! ID              [ reduce using rule 68 (empty -> .) ]
  ! GLOBAL          [ reduce using rule 68 (empty -> .) ]
  ! RETURN          [ reduce using rule 68 (empty -> .) ]
  ! FOR             [ reduce using rule 68 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 68 (empty -> .) ]
  ! IF              [ reduce using rule 68 (empty -> .) ]
  ! PARSE           [ reduce using rule 68 (empty -> .) ]
  ! TRUNC           [ reduce using rule 68 (empty -> .) ]
  ! FLOAT           [ reduce using rule 68 (empty -> .) ]
  ! STRINGNATIVE    [ reduce using rule 68 (empty -> .) ]
  ! TYPEOF          [ reduce using rule 68 (empty -> .) ]
  ! PUSH            [ reduce using rule 68 (empty -> .) ]
  ! POP             [ reduce using rule 68 (empty -> .) ]
  ! LENGTH          [ reduce using rule 68 (empty -> .) ]
  ! BREAK           [ reduce using rule 68 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 68 (empty -> .) ]
  ! MUTABLE         [ reduce using rule 68 (empty -> .) ]
  ! STRUCT          [ reduce using rule 68 (empty -> .) ]

    block_loops                    shift and go to state 130
    Print                          shift and go to state 146
    Println                        shift and go to state 147
    Asignacion                     shift and go to state 148
    retorno                        shift and go to state 149
    functionCall                   shift and go to state 150
    forLoop                        shift and go to state 151
    whileLoop                      shift and go to state 152
    IfCondition                    shift and go to state 153
    parseNative                    shift and go to state 154
    truncNative                    shift and go to state 155
    floatNative                    shift and go to state 156
    stringNative                   shift and go to state 157
    typeOfNative                   shift and go to state 158
    pushArray                      shift and go to state 159
    popArray                       shift and go to state 160
    lengthArray                    shift and go to state 161
    assignmentArray                shift and go to state 162
    Break                          shift and go to state 163
    Continue                       shift and go to state 164
    Struct                         shift and go to state 165
    structAccess                   shift and go to state 166
    empty                          shift and go to state 167

state 71

    (212) exp -> MENOS . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 171
    array                          shift and go to state 83

state 72

    (192) exp -> ID . attributes
    (210) exp -> ID . PARENTESISA parametersCall PARENTESISC
    (211) exp -> ID . PARENTESISA PARENTESISC
    (222) exp -> ID .
    (223) exp -> ID . listArray
    (193) attributes -> . attributes PUNTO ID
    (194) attributes -> . PUNTO ID
    (227) listArray -> . listArray CORCHETEA exp CORCHETEC
    (228) listArray -> . CORCHETEA exp CORCHETEC

    PARENTESISA     shift and go to state 173
    MAS             reduce using rule 222 (exp -> ID .)
    MENOS           reduce using rule 222 (exp -> ID .)
    POR             reduce using rule 222 (exp -> ID .)
    DIVIDIDO        reduce using rule 222 (exp -> ID .)
    POTENCIA        reduce using rule 222 (exp -> ID .)
    PORCENTAJE      reduce using rule 222 (exp -> ID .)
    MAYOR           reduce using rule 222 (exp -> ID .)
    MENOR           reduce using rule 222 (exp -> ID .)
    MAYORIGUAL      reduce using rule 222 (exp -> ID .)
    MENORIGUAL      reduce using rule 222 (exp -> ID .)
    DOBLEIGUAL      reduce using rule 222 (exp -> ID .)
    NOIGUAL         reduce using rule 222 (exp -> ID .)
    OR              reduce using rule 222 (exp -> ID .)
    AND             reduce using rule 222 (exp -> ID .)
    DOSP            reduce using rule 222 (exp -> ID .)
    PRINT           reduce using rule 222 (exp -> ID .)
    PRINTLN         reduce using rule 222 (exp -> ID .)
    ID              reduce using rule 222 (exp -> ID .)
    GLOBAL          reduce using rule 222 (exp -> ID .)
    RETURN          reduce using rule 222 (exp -> ID .)
    MIENTRAS        reduce using rule 222 (exp -> ID .)
    FOR             reduce using rule 222 (exp -> ID .)
    IF              reduce using rule 222 (exp -> ID .)
    PARSE           reduce using rule 222 (exp -> ID .)
    TRUNC           reduce using rule 222 (exp -> ID .)
    FLOAT           reduce using rule 222 (exp -> ID .)
    STRINGNATIVE    reduce using rule 222 (exp -> ID .)
    TYPEOF          reduce using rule 222 (exp -> ID .)
    PUSH            reduce using rule 222 (exp -> ID .)
    POP             reduce using rule 222 (exp -> ID .)
    LENGTH          reduce using rule 222 (exp -> ID .)
    BREAK           reduce using rule 222 (exp -> ID .)
    CONTINUE        reduce using rule 222 (exp -> ID .)
    MUTABLE         reduce using rule 222 (exp -> ID .)
    STRUCT          reduce using rule 222 (exp -> ID .)
    END             reduce using rule 222 (exp -> ID .)
    ELSEIF          reduce using rule 222 (exp -> ID .)
    ELSE            reduce using rule 222 (exp -> ID .)
    PARENTESISC     reduce using rule 222 (exp -> ID .)
    COMA            reduce using rule 222 (exp -> ID .)
    PCOMA           reduce using rule 222 (exp -> ID .)
    CORCHETEC       reduce using rule 222 (exp -> ID .)
    PUNTO           shift and go to state 68
    CORCHETEA       shift and go to state 175

    attributes                     shift and go to state 172
    listArray                      shift and go to state 174

state 73

    (195) exp -> PUSH . NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> PUSH . NOT PARENTESISA ID COMA parametersCall PARENTESISC

    NOT             shift and go to state 176


state 74

    (213) exp -> NOT . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 177
    array                          shift and go to state 83

state 75

    (214) exp -> PARENTESISA . exp PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 178
    array                          shift and go to state 83

state 76

    (197) exp -> POP . NOT PARENTESISA exp PARENTESISC
    (198) exp -> POP . NOT PARENTESISA ID PARENTESISC

    NOT             shift and go to state 179


state 77

    (199) exp -> LENGTH . PARENTESISA exp PARENTESISC
    (200) exp -> LENGTH . PARENTESISA ID PARENTESISC

    PARENTESISA     shift and go to state 180


state 78

    (201) exp -> PARSE . PARENTESISA type COMA exp PARENTESISC

    PARENTESISA     shift and go to state 181


state 79

    (202) exp -> TRUNC . PARENTESISA type COMA exp PARENTESISC
    (203) exp -> TRUNC . PARENTESISA exp PARENTESISC

    PARENTESISA     shift and go to state 182


state 80

    (204) exp -> FLOAT . PARENTESISA exp PARENTESISC

    PARENTESISA     shift and go to state 183


state 81

    (205) exp -> STRINGNATIVE . PARENTESISA exp PARENTESISC

    PARENTESISA     shift and go to state 184


state 82

    (206) exp -> TYPEOF . PARENTESISA exp PARENTESISC

    PARENTESISA     shift and go to state 185


state 83

    (207) exp -> array .

    MAS             reduce using rule 207 (exp -> array .)
    MENOS           reduce using rule 207 (exp -> array .)
    POR             reduce using rule 207 (exp -> array .)
    DIVIDIDO        reduce using rule 207 (exp -> array .)
    POTENCIA        reduce using rule 207 (exp -> array .)
    PORCENTAJE      reduce using rule 207 (exp -> array .)
    MAYOR           reduce using rule 207 (exp -> array .)
    MENOR           reduce using rule 207 (exp -> array .)
    MAYORIGUAL      reduce using rule 207 (exp -> array .)
    MENORIGUAL      reduce using rule 207 (exp -> array .)
    DOBLEIGUAL      reduce using rule 207 (exp -> array .)
    NOIGUAL         reduce using rule 207 (exp -> array .)
    OR              reduce using rule 207 (exp -> array .)
    AND             reduce using rule 207 (exp -> array .)
    DOSP            reduce using rule 207 (exp -> array .)
    PRINT           reduce using rule 207 (exp -> array .)
    PRINTLN         reduce using rule 207 (exp -> array .)
    ID              reduce using rule 207 (exp -> array .)
    GLOBAL          reduce using rule 207 (exp -> array .)
    RETURN          reduce using rule 207 (exp -> array .)
    MIENTRAS        reduce using rule 207 (exp -> array .)
    FOR             reduce using rule 207 (exp -> array .)
    IF              reduce using rule 207 (exp -> array .)
    PARSE           reduce using rule 207 (exp -> array .)
    TRUNC           reduce using rule 207 (exp -> array .)
    FLOAT           reduce using rule 207 (exp -> array .)
    STRINGNATIVE    reduce using rule 207 (exp -> array .)
    TYPEOF          reduce using rule 207 (exp -> array .)
    PUSH            reduce using rule 207 (exp -> array .)
    POP             reduce using rule 207 (exp -> array .)
    LENGTH          reduce using rule 207 (exp -> array .)
    BREAK           reduce using rule 207 (exp -> array .)
    CONTINUE        reduce using rule 207 (exp -> array .)
    MUTABLE         reduce using rule 207 (exp -> array .)
    STRUCT          reduce using rule 207 (exp -> array .)
    END             reduce using rule 207 (exp -> array .)
    ELSEIF          reduce using rule 207 (exp -> array .)
    ELSE            reduce using rule 207 (exp -> array .)
    PARENTESISC     reduce using rule 207 (exp -> array .)
    COMA            reduce using rule 207 (exp -> array .)
    PCOMA           reduce using rule 207 (exp -> array .)
    CORCHETEC       reduce using rule 207 (exp -> array .)


state 84

    (215) exp -> ENTERO .

    MAS             reduce using rule 215 (exp -> ENTERO .)
    MENOS           reduce using rule 215 (exp -> ENTERO .)
    POR             reduce using rule 215 (exp -> ENTERO .)
    DIVIDIDO        reduce using rule 215 (exp -> ENTERO .)
    POTENCIA        reduce using rule 215 (exp -> ENTERO .)
    PORCENTAJE      reduce using rule 215 (exp -> ENTERO .)
    MAYOR           reduce using rule 215 (exp -> ENTERO .)
    MENOR           reduce using rule 215 (exp -> ENTERO .)
    MAYORIGUAL      reduce using rule 215 (exp -> ENTERO .)
    MENORIGUAL      reduce using rule 215 (exp -> ENTERO .)
    DOBLEIGUAL      reduce using rule 215 (exp -> ENTERO .)
    NOIGUAL         reduce using rule 215 (exp -> ENTERO .)
    OR              reduce using rule 215 (exp -> ENTERO .)
    AND             reduce using rule 215 (exp -> ENTERO .)
    DOSP            reduce using rule 215 (exp -> ENTERO .)
    PRINT           reduce using rule 215 (exp -> ENTERO .)
    PRINTLN         reduce using rule 215 (exp -> ENTERO .)
    ID              reduce using rule 215 (exp -> ENTERO .)
    GLOBAL          reduce using rule 215 (exp -> ENTERO .)
    RETURN          reduce using rule 215 (exp -> ENTERO .)
    MIENTRAS        reduce using rule 215 (exp -> ENTERO .)
    FOR             reduce using rule 215 (exp -> ENTERO .)
    IF              reduce using rule 215 (exp -> ENTERO .)
    PARSE           reduce using rule 215 (exp -> ENTERO .)
    TRUNC           reduce using rule 215 (exp -> ENTERO .)
    FLOAT           reduce using rule 215 (exp -> ENTERO .)
    STRINGNATIVE    reduce using rule 215 (exp -> ENTERO .)
    TYPEOF          reduce using rule 215 (exp -> ENTERO .)
    PUSH            reduce using rule 215 (exp -> ENTERO .)
    POP             reduce using rule 215 (exp -> ENTERO .)
    LENGTH          reduce using rule 215 (exp -> ENTERO .)
    BREAK           reduce using rule 215 (exp -> ENTERO .)
    CONTINUE        reduce using rule 215 (exp -> ENTERO .)
    MUTABLE         reduce using rule 215 (exp -> ENTERO .)
    STRUCT          reduce using rule 215 (exp -> ENTERO .)
    END             reduce using rule 215 (exp -> ENTERO .)
    ELSEIF          reduce using rule 215 (exp -> ENTERO .)
    ELSE            reduce using rule 215 (exp -> ENTERO .)
    PARENTESISC     reduce using rule 215 (exp -> ENTERO .)
    COMA            reduce using rule 215 (exp -> ENTERO .)
    PCOMA           reduce using rule 215 (exp -> ENTERO .)
    CORCHETEC       reduce using rule 215 (exp -> ENTERO .)


state 85

    (216) exp -> DECIMAL .

    MAS             reduce using rule 216 (exp -> DECIMAL .)
    MENOS           reduce using rule 216 (exp -> DECIMAL .)
    POR             reduce using rule 216 (exp -> DECIMAL .)
    DIVIDIDO        reduce using rule 216 (exp -> DECIMAL .)
    POTENCIA        reduce using rule 216 (exp -> DECIMAL .)
    PORCENTAJE      reduce using rule 216 (exp -> DECIMAL .)
    MAYOR           reduce using rule 216 (exp -> DECIMAL .)
    MENOR           reduce using rule 216 (exp -> DECIMAL .)
    MAYORIGUAL      reduce using rule 216 (exp -> DECIMAL .)
    MENORIGUAL      reduce using rule 216 (exp -> DECIMAL .)
    DOBLEIGUAL      reduce using rule 216 (exp -> DECIMAL .)
    NOIGUAL         reduce using rule 216 (exp -> DECIMAL .)
    OR              reduce using rule 216 (exp -> DECIMAL .)
    AND             reduce using rule 216 (exp -> DECIMAL .)
    DOSP            reduce using rule 216 (exp -> DECIMAL .)
    PRINT           reduce using rule 216 (exp -> DECIMAL .)
    PRINTLN         reduce using rule 216 (exp -> DECIMAL .)
    ID              reduce using rule 216 (exp -> DECIMAL .)
    GLOBAL          reduce using rule 216 (exp -> DECIMAL .)
    RETURN          reduce using rule 216 (exp -> DECIMAL .)
    MIENTRAS        reduce using rule 216 (exp -> DECIMAL .)
    FOR             reduce using rule 216 (exp -> DECIMAL .)
    IF              reduce using rule 216 (exp -> DECIMAL .)
    PARSE           reduce using rule 216 (exp -> DECIMAL .)
    TRUNC           reduce using rule 216 (exp -> DECIMAL .)
    FLOAT           reduce using rule 216 (exp -> DECIMAL .)
    STRINGNATIVE    reduce using rule 216 (exp -> DECIMAL .)
    TYPEOF          reduce using rule 216 (exp -> DECIMAL .)
    PUSH            reduce using rule 216 (exp -> DECIMAL .)
    POP             reduce using rule 216 (exp -> DECIMAL .)
    LENGTH          reduce using rule 216 (exp -> DECIMAL .)
    BREAK           reduce using rule 216 (exp -> DECIMAL .)
    CONTINUE        reduce using rule 216 (exp -> DECIMAL .)
    MUTABLE         reduce using rule 216 (exp -> DECIMAL .)
    STRUCT          reduce using rule 216 (exp -> DECIMAL .)
    END             reduce using rule 216 (exp -> DECIMAL .)
    ELSEIF          reduce using rule 216 (exp -> DECIMAL .)
    ELSE            reduce using rule 216 (exp -> DECIMAL .)
    PARENTESISC     reduce using rule 216 (exp -> DECIMAL .)
    COMA            reduce using rule 216 (exp -> DECIMAL .)
    PCOMA           reduce using rule 216 (exp -> DECIMAL .)
    CORCHETEC       reduce using rule 216 (exp -> DECIMAL .)


state 86

    (217) exp -> CADENA .

    MAS             reduce using rule 217 (exp -> CADENA .)
    MENOS           reduce using rule 217 (exp -> CADENA .)
    POR             reduce using rule 217 (exp -> CADENA .)
    DIVIDIDO        reduce using rule 217 (exp -> CADENA .)
    POTENCIA        reduce using rule 217 (exp -> CADENA .)
    PORCENTAJE      reduce using rule 217 (exp -> CADENA .)
    MAYOR           reduce using rule 217 (exp -> CADENA .)
    MENOR           reduce using rule 217 (exp -> CADENA .)
    MAYORIGUAL      reduce using rule 217 (exp -> CADENA .)
    MENORIGUAL      reduce using rule 217 (exp -> CADENA .)
    DOBLEIGUAL      reduce using rule 217 (exp -> CADENA .)
    NOIGUAL         reduce using rule 217 (exp -> CADENA .)
    OR              reduce using rule 217 (exp -> CADENA .)
    AND             reduce using rule 217 (exp -> CADENA .)
    DOSP            reduce using rule 217 (exp -> CADENA .)
    PRINT           reduce using rule 217 (exp -> CADENA .)
    PRINTLN         reduce using rule 217 (exp -> CADENA .)
    ID              reduce using rule 217 (exp -> CADENA .)
    GLOBAL          reduce using rule 217 (exp -> CADENA .)
    RETURN          reduce using rule 217 (exp -> CADENA .)
    MIENTRAS        reduce using rule 217 (exp -> CADENA .)
    FOR             reduce using rule 217 (exp -> CADENA .)
    IF              reduce using rule 217 (exp -> CADENA .)
    PARSE           reduce using rule 217 (exp -> CADENA .)
    TRUNC           reduce using rule 217 (exp -> CADENA .)
    FLOAT           reduce using rule 217 (exp -> CADENA .)
    STRINGNATIVE    reduce using rule 217 (exp -> CADENA .)
    TYPEOF          reduce using rule 217 (exp -> CADENA .)
    PUSH            reduce using rule 217 (exp -> CADENA .)
    POP             reduce using rule 217 (exp -> CADENA .)
    LENGTH          reduce using rule 217 (exp -> CADENA .)
    BREAK           reduce using rule 217 (exp -> CADENA .)
    CONTINUE        reduce using rule 217 (exp -> CADENA .)
    MUTABLE         reduce using rule 217 (exp -> CADENA .)
    STRUCT          reduce using rule 217 (exp -> CADENA .)
    END             reduce using rule 217 (exp -> CADENA .)
    ELSEIF          reduce using rule 217 (exp -> CADENA .)
    ELSE            reduce using rule 217 (exp -> CADENA .)
    PARENTESISC     reduce using rule 217 (exp -> CADENA .)
    COMA            reduce using rule 217 (exp -> CADENA .)
    PCOMA           reduce using rule 217 (exp -> CADENA .)
    CORCHETEC       reduce using rule 217 (exp -> CADENA .)


state 87

    (218) exp -> CARACTER .

    MAS             reduce using rule 218 (exp -> CARACTER .)
    MENOS           reduce using rule 218 (exp -> CARACTER .)
    POR             reduce using rule 218 (exp -> CARACTER .)
    DIVIDIDO        reduce using rule 218 (exp -> CARACTER .)
    POTENCIA        reduce using rule 218 (exp -> CARACTER .)
    PORCENTAJE      reduce using rule 218 (exp -> CARACTER .)
    MAYOR           reduce using rule 218 (exp -> CARACTER .)
    MENOR           reduce using rule 218 (exp -> CARACTER .)
    MAYORIGUAL      reduce using rule 218 (exp -> CARACTER .)
    MENORIGUAL      reduce using rule 218 (exp -> CARACTER .)
    DOBLEIGUAL      reduce using rule 218 (exp -> CARACTER .)
    NOIGUAL         reduce using rule 218 (exp -> CARACTER .)
    OR              reduce using rule 218 (exp -> CARACTER .)
    AND             reduce using rule 218 (exp -> CARACTER .)
    DOSP            reduce using rule 218 (exp -> CARACTER .)
    PRINT           reduce using rule 218 (exp -> CARACTER .)
    PRINTLN         reduce using rule 218 (exp -> CARACTER .)
    ID              reduce using rule 218 (exp -> CARACTER .)
    GLOBAL          reduce using rule 218 (exp -> CARACTER .)
    RETURN          reduce using rule 218 (exp -> CARACTER .)
    MIENTRAS        reduce using rule 218 (exp -> CARACTER .)
    FOR             reduce using rule 218 (exp -> CARACTER .)
    IF              reduce using rule 218 (exp -> CARACTER .)
    PARSE           reduce using rule 218 (exp -> CARACTER .)
    TRUNC           reduce using rule 218 (exp -> CARACTER .)
    FLOAT           reduce using rule 218 (exp -> CARACTER .)
    STRINGNATIVE    reduce using rule 218 (exp -> CARACTER .)
    TYPEOF          reduce using rule 218 (exp -> CARACTER .)
    PUSH            reduce using rule 218 (exp -> CARACTER .)
    POP             reduce using rule 218 (exp -> CARACTER .)
    LENGTH          reduce using rule 218 (exp -> CARACTER .)
    BREAK           reduce using rule 218 (exp -> CARACTER .)
    CONTINUE        reduce using rule 218 (exp -> CARACTER .)
    MUTABLE         reduce using rule 218 (exp -> CARACTER .)
    STRUCT          reduce using rule 218 (exp -> CARACTER .)
    END             reduce using rule 218 (exp -> CARACTER .)
    ELSEIF          reduce using rule 218 (exp -> CARACTER .)
    ELSE            reduce using rule 218 (exp -> CARACTER .)
    PARENTESISC     reduce using rule 218 (exp -> CARACTER .)
    COMA            reduce using rule 218 (exp -> CARACTER .)
    PCOMA           reduce using rule 218 (exp -> CARACTER .)
    CORCHETEC       reduce using rule 218 (exp -> CARACTER .)


state 88

    (219) exp -> FALSE .

    MAS             reduce using rule 219 (exp -> FALSE .)
    MENOS           reduce using rule 219 (exp -> FALSE .)
    POR             reduce using rule 219 (exp -> FALSE .)
    DIVIDIDO        reduce using rule 219 (exp -> FALSE .)
    POTENCIA        reduce using rule 219 (exp -> FALSE .)
    PORCENTAJE      reduce using rule 219 (exp -> FALSE .)
    MAYOR           reduce using rule 219 (exp -> FALSE .)
    MENOR           reduce using rule 219 (exp -> FALSE .)
    MAYORIGUAL      reduce using rule 219 (exp -> FALSE .)
    MENORIGUAL      reduce using rule 219 (exp -> FALSE .)
    DOBLEIGUAL      reduce using rule 219 (exp -> FALSE .)
    NOIGUAL         reduce using rule 219 (exp -> FALSE .)
    OR              reduce using rule 219 (exp -> FALSE .)
    AND             reduce using rule 219 (exp -> FALSE .)
    DOSP            reduce using rule 219 (exp -> FALSE .)
    PRINT           reduce using rule 219 (exp -> FALSE .)
    PRINTLN         reduce using rule 219 (exp -> FALSE .)
    ID              reduce using rule 219 (exp -> FALSE .)
    GLOBAL          reduce using rule 219 (exp -> FALSE .)
    RETURN          reduce using rule 219 (exp -> FALSE .)
    MIENTRAS        reduce using rule 219 (exp -> FALSE .)
    FOR             reduce using rule 219 (exp -> FALSE .)
    IF              reduce using rule 219 (exp -> FALSE .)
    PARSE           reduce using rule 219 (exp -> FALSE .)
    TRUNC           reduce using rule 219 (exp -> FALSE .)
    FLOAT           reduce using rule 219 (exp -> FALSE .)
    STRINGNATIVE    reduce using rule 219 (exp -> FALSE .)
    TYPEOF          reduce using rule 219 (exp -> FALSE .)
    PUSH            reduce using rule 219 (exp -> FALSE .)
    POP             reduce using rule 219 (exp -> FALSE .)
    LENGTH          reduce using rule 219 (exp -> FALSE .)
    BREAK           reduce using rule 219 (exp -> FALSE .)
    CONTINUE        reduce using rule 219 (exp -> FALSE .)
    MUTABLE         reduce using rule 219 (exp -> FALSE .)
    STRUCT          reduce using rule 219 (exp -> FALSE .)
    END             reduce using rule 219 (exp -> FALSE .)
    ELSEIF          reduce using rule 219 (exp -> FALSE .)
    ELSE            reduce using rule 219 (exp -> FALSE .)
    PARENTESISC     reduce using rule 219 (exp -> FALSE .)
    COMA            reduce using rule 219 (exp -> FALSE .)
    PCOMA           reduce using rule 219 (exp -> FALSE .)
    CORCHETEC       reduce using rule 219 (exp -> FALSE .)


state 89

    (220) exp -> TRUE .

    MAS             reduce using rule 220 (exp -> TRUE .)
    MENOS           reduce using rule 220 (exp -> TRUE .)
    POR             reduce using rule 220 (exp -> TRUE .)
    DIVIDIDO        reduce using rule 220 (exp -> TRUE .)
    POTENCIA        reduce using rule 220 (exp -> TRUE .)
    PORCENTAJE      reduce using rule 220 (exp -> TRUE .)
    MAYOR           reduce using rule 220 (exp -> TRUE .)
    MENOR           reduce using rule 220 (exp -> TRUE .)
    MAYORIGUAL      reduce using rule 220 (exp -> TRUE .)
    MENORIGUAL      reduce using rule 220 (exp -> TRUE .)
    DOBLEIGUAL      reduce using rule 220 (exp -> TRUE .)
    NOIGUAL         reduce using rule 220 (exp -> TRUE .)
    OR              reduce using rule 220 (exp -> TRUE .)
    AND             reduce using rule 220 (exp -> TRUE .)
    DOSP            reduce using rule 220 (exp -> TRUE .)
    PRINT           reduce using rule 220 (exp -> TRUE .)
    PRINTLN         reduce using rule 220 (exp -> TRUE .)
    ID              reduce using rule 220 (exp -> TRUE .)
    GLOBAL          reduce using rule 220 (exp -> TRUE .)
    RETURN          reduce using rule 220 (exp -> TRUE .)
    MIENTRAS        reduce using rule 220 (exp -> TRUE .)
    FOR             reduce using rule 220 (exp -> TRUE .)
    IF              reduce using rule 220 (exp -> TRUE .)
    PARSE           reduce using rule 220 (exp -> TRUE .)
    TRUNC           reduce using rule 220 (exp -> TRUE .)
    FLOAT           reduce using rule 220 (exp -> TRUE .)
    STRINGNATIVE    reduce using rule 220 (exp -> TRUE .)
    TYPEOF          reduce using rule 220 (exp -> TRUE .)
    PUSH            reduce using rule 220 (exp -> TRUE .)
    POP             reduce using rule 220 (exp -> TRUE .)
    LENGTH          reduce using rule 220 (exp -> TRUE .)
    BREAK           reduce using rule 220 (exp -> TRUE .)
    CONTINUE        reduce using rule 220 (exp -> TRUE .)
    MUTABLE         reduce using rule 220 (exp -> TRUE .)
    STRUCT          reduce using rule 220 (exp -> TRUE .)
    END             reduce using rule 220 (exp -> TRUE .)
    ELSEIF          reduce using rule 220 (exp -> TRUE .)
    ELSE            reduce using rule 220 (exp -> TRUE .)
    PARENTESISC     reduce using rule 220 (exp -> TRUE .)
    COMA            reduce using rule 220 (exp -> TRUE .)
    PCOMA           reduce using rule 220 (exp -> TRUE .)
    CORCHETEC       reduce using rule 220 (exp -> TRUE .)


state 90

    (221) exp -> NULO .

    MAS             reduce using rule 221 (exp -> NULO .)
    MENOS           reduce using rule 221 (exp -> NULO .)
    POR             reduce using rule 221 (exp -> NULO .)
    DIVIDIDO        reduce using rule 221 (exp -> NULO .)
    POTENCIA        reduce using rule 221 (exp -> NULO .)
    PORCENTAJE      reduce using rule 221 (exp -> NULO .)
    MAYOR           reduce using rule 221 (exp -> NULO .)
    MENOR           reduce using rule 221 (exp -> NULO .)
    MAYORIGUAL      reduce using rule 221 (exp -> NULO .)
    MENORIGUAL      reduce using rule 221 (exp -> NULO .)
    DOBLEIGUAL      reduce using rule 221 (exp -> NULO .)
    NOIGUAL         reduce using rule 221 (exp -> NULO .)
    OR              reduce using rule 221 (exp -> NULO .)
    AND             reduce using rule 221 (exp -> NULO .)
    DOSP            reduce using rule 221 (exp -> NULO .)
    PRINT           reduce using rule 221 (exp -> NULO .)
    PRINTLN         reduce using rule 221 (exp -> NULO .)
    ID              reduce using rule 221 (exp -> NULO .)
    GLOBAL          reduce using rule 221 (exp -> NULO .)
    RETURN          reduce using rule 221 (exp -> NULO .)
    MIENTRAS        reduce using rule 221 (exp -> NULO .)
    FOR             reduce using rule 221 (exp -> NULO .)
    IF              reduce using rule 221 (exp -> NULO .)
    PARSE           reduce using rule 221 (exp -> NULO .)
    TRUNC           reduce using rule 221 (exp -> NULO .)
    FLOAT           reduce using rule 221 (exp -> NULO .)
    STRINGNATIVE    reduce using rule 221 (exp -> NULO .)
    TYPEOF          reduce using rule 221 (exp -> NULO .)
    PUSH            reduce using rule 221 (exp -> NULO .)
    POP             reduce using rule 221 (exp -> NULO .)
    LENGTH          reduce using rule 221 (exp -> NULO .)
    BREAK           reduce using rule 221 (exp -> NULO .)
    CONTINUE        reduce using rule 221 (exp -> NULO .)
    MUTABLE         reduce using rule 221 (exp -> NULO .)
    STRUCT          reduce using rule 221 (exp -> NULO .)
    END             reduce using rule 221 (exp -> NULO .)
    ELSEIF          reduce using rule 221 (exp -> NULO .)
    ELSE            reduce using rule 221 (exp -> NULO .)
    PARENTESISC     reduce using rule 221 (exp -> NULO .)
    COMA            reduce using rule 221 (exp -> NULO .)
    PCOMA           reduce using rule 221 (exp -> NULO .)
    CORCHETEC       reduce using rule 221 (exp -> NULO .)


state 91

    (229) exp -> UPPERCASE . PARENTESISA exp PARENTESISC

    PARENTESISA     shift and go to state 186


state 92

    (230) exp -> LOWERCASE . PARENTESISA exp PARENTESISC

    PARENTESISA     shift and go to state 187


state 93

    (231) exp -> LOGARITMOB10 . PARENTESISA exp PARENTESISC

    PARENTESISA     shift and go to state 188


state 94

    (232) exp -> LOGARITMONOB10 . PARENTESISA exp COMA exp PARENTESISC

    PARENTESISA     shift and go to state 189


state 95

    (233) exp -> SIN . PARENTESISA exp PARENTESISC

    PARENTESISA     shift and go to state 190


state 96

    (234) exp -> COS . PARENTESISA exp PARENTESISC

    PARENTESISA     shift and go to state 191


state 97

    (235) exp -> TAN . PARENTESISA exp PARENTESISC

    PARENTESISA     shift and go to state 192


state 98

    (236) exp -> SQRT . PARENTESISA exp PARENTESISC

    PARENTESISA     shift and go to state 193


state 99

    (208) array -> CORCHETEA . parametersCall CORCHETEC
    (73) parametersCall -> . parametersCall COMA exp
    (74) parametersCall -> . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    parametersCall                 shift and go to state 194
    exp                            shift and go to state 121
    array                          shift and go to state 83

state 100

    (70) forLoop -> FOR ID . IN exp block_loops END PCOMA

    IN              shift and go to state 195


state 101

    (62) IfCondition -> IF exp . block_loops elseIfSt elseSt END PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp
    (124) block_loops -> . block_loops Print
    (125) block_loops -> . block_loops Println
    (126) block_loops -> . block_loops Asignacion
    (127) block_loops -> . block_loops retorno
    (128) block_loops -> . block_loops functionCall
    (129) block_loops -> . block_loops forLoop
    (130) block_loops -> . block_loops whileLoop
    (131) block_loops -> . block_loops IfCondition
    (132) block_loops -> . block_loops parseNative
    (133) block_loops -> . block_loops truncNative
    (134) block_loops -> . block_loops floatNative
    (135) block_loops -> . block_loops stringNative
    (136) block_loops -> . block_loops typeOfNative
    (137) block_loops -> . block_loops pushArray
    (138) block_loops -> . block_loops popArray
    (139) block_loops -> . block_loops lengthArray
    (140) block_loops -> . block_loops assignmentArray
    (141) block_loops -> . block_loops Break
    (142) block_loops -> . block_loops Continue
    (143) block_loops -> . block_loops Struct
    (144) block_loops -> . block_loops structAccess
    (145) block_loops -> . Print
    (146) block_loops -> . Println
    (147) block_loops -> . Asignacion
    (148) block_loops -> . retorno
    (149) block_loops -> . functionCall
    (150) block_loops -> . whileLoop
    (151) block_loops -> . forLoop
    (152) block_loops -> . IfCondition
    (153) block_loops -> . parseNative
    (154) block_loops -> . truncNative
    (155) block_loops -> . floatNative
    (156) block_loops -> . stringNative
    (157) block_loops -> . typeOfNative
    (158) block_loops -> . pushArray
    (159) block_loops -> . popArray
    (160) block_loops -> . lengthArray
    (161) block_loops -> . assignmentArray
    (162) block_loops -> . Break
    (163) block_loops -> . Continue
    (164) block_loops -> . Struct
    (165) block_loops -> . structAccess
    (166) block_loops -> . empty
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (167) retorno -> . RETURN exp PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (122) Break -> . BREAK PCOMA
    (123) Continue -> . CONTINUE PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA
    (68) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for GLOBAL resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARSE resolved as shift
  ! shift/reduce conflict for TRUNC resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRINGNATIVE resolved as shift
  ! shift/reduce conflict for TYPEOF resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for LENGTH resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for MUTABLE resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    RETURN          shift and go to state 168
    MIENTRAS        shift and go to state 28
    FOR             shift and go to state 29
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    BREAK           shift and go to state 169
    CONTINUE        shift and go to state 170
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40
    ELSEIF          reduce using rule 68 (empty -> .)
    ELSE            reduce using rule 68 (empty -> .)
    END             reduce using rule 68 (empty -> .)

  ! PRINT           [ reduce using rule 68 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 68 (empty -> .) ]
  ! ID              [ reduce using rule 68 (empty -> .) ]
  ! GLOBAL          [ reduce using rule 68 (empty -> .) ]
  ! RETURN          [ reduce using rule 68 (empty -> .) ]
  ! FOR             [ reduce using rule 68 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 68 (empty -> .) ]
  ! IF              [ reduce using rule 68 (empty -> .) ]
  ! PARSE           [ reduce using rule 68 (empty -> .) ]
  ! TRUNC           [ reduce using rule 68 (empty -> .) ]
  ! FLOAT           [ reduce using rule 68 (empty -> .) ]
  ! STRINGNATIVE    [ reduce using rule 68 (empty -> .) ]
  ! TYPEOF          [ reduce using rule 68 (empty -> .) ]
  ! PUSH            [ reduce using rule 68 (empty -> .) ]
  ! POP             [ reduce using rule 68 (empty -> .) ]
  ! LENGTH          [ reduce using rule 68 (empty -> .) ]
  ! BREAK           [ reduce using rule 68 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 68 (empty -> .) ]
  ! MUTABLE         [ reduce using rule 68 (empty -> .) ]
  ! STRUCT          [ reduce using rule 68 (empty -> .) ]

    block_loops                    shift and go to state 196
    Print                          shift and go to state 146
    Println                        shift and go to state 147
    Asignacion                     shift and go to state 148
    retorno                        shift and go to state 149
    functionCall                   shift and go to state 150
    forLoop                        shift and go to state 151
    whileLoop                      shift and go to state 152
    IfCondition                    shift and go to state 153
    parseNative                    shift and go to state 154
    truncNative                    shift and go to state 155
    floatNative                    shift and go to state 156
    stringNative                   shift and go to state 157
    typeOfNative                   shift and go to state 158
    pushArray                      shift and go to state 159
    popArray                       shift and go to state 160
    lengthArray                    shift and go to state 161
    assignmentArray                shift and go to state 162
    Break                          shift and go to state 163
    Continue                       shift and go to state 164
    Struct                         shift and go to state 165
    structAccess                   shift and go to state 166
    empty                          shift and go to state 167

state 102

    (56) parseNative -> PARSE PARENTESISA . type COMA exp PARENTESISC PCOMA
    (237) type -> . INT64
    (238) type -> . FLOAT64
    (239) type -> . STRING
    (240) type -> . CHAR
    (241) type -> . BOOL
    (242) type -> . NULO

    INT64           shift and go to state 198
    FLOAT64         shift and go to state 199
    STRING          shift and go to state 200
    CHAR            shift and go to state 201
    BOOL            shift and go to state 202
    NULO            shift and go to state 203

    type                           shift and go to state 197

state 103

    (57) truncNative -> TRUNC PARENTESISA . type COMA exp PARENTESISC PCOMA
    (58) truncNative -> TRUNC PARENTESISA . exp PARENTESISC PCOMA
    (237) type -> . INT64
    (238) type -> . FLOAT64
    (239) type -> . STRING
    (240) type -> . CHAR
    (241) type -> . BOOL
    (242) type -> . NULO
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    INT64           shift and go to state 198
    FLOAT64         shift and go to state 199
    STRING          shift and go to state 200
    CHAR            shift and go to state 201
    BOOL            shift and go to state 202
    NULO            shift and go to state 206
    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    type                           shift and go to state 204
    exp                            shift and go to state 205
    array                          shift and go to state 83

state 104

    (59) floatNative -> FLOAT PARENTESISA . exp PARENTESISC PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 207
    array                          shift and go to state 83

state 105

    (60) stringNative -> STRINGNATIVE PARENTESISA . exp PARENTESISC PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 208
    array                          shift and go to state 83

state 106

    (61) typeOfNative -> TYPEOF PARENTESISA . exp PARENTESISC PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 209
    array                          shift and go to state 83

state 107

    (50) pushArray -> PUSH NOT . PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> PUSH NOT . PARENTESISA ID COMA parametersCall PARENTESISC PCOMA

    PARENTESISA     shift and go to state 210


state 108

    (52) popArray -> POP NOT . PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> POP NOT . PARENTESISA ID PARENTESISC PCOMA

    PARENTESISA     shift and go to state 211


state 109

    (54) lengthArray -> LENGTH PARENTESISA . exp PARENTESISC PCOMA
    (55) lengthArray -> LENGTH PARENTESISA . ID PARENTESISC PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 213
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 212
    array                          shift and go to state 83

state 110

    (41) Struct -> MUTABLE STRUCT . ID bodyStruct END PCOMA

    ID              shift and go to state 214


state 111

    (42) Struct -> STRUCT ID . bodyStruct END PCOMA
    (43) bodyStruct -> . bodyStruct ID DOSP DOSP type PCOMA
    (44) bodyStruct -> . bodyStruct ID PCOMA
    (45) bodyStruct -> . ID DOSP DOSP type PCOMA
    (46) bodyStruct -> . ID PCOMA
    (47) bodyStruct -> . bodyStruct ID DOSP DOSP ID PCOMA
    (48) bodyStruct -> . ID DOSP DOSP ID PCOMA

    ID              shift and go to state 215

    bodyStruct                     shift and go to state 216

state 112

    (168) Print -> PRINT PARENTESISA exp . PARENTESISC PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp
    (74) parametersCall -> exp .

  ! shift/reduce conflict for PARENTESISC resolved as shift
    PARENTESISC     shift and go to state 217
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145
    COMA            reduce using rule 74 (parametersCall -> exp .)

  ! PARENTESISC     [ reduce using rule 74 (parametersCall -> exp .) ]


state 113

    (169) Print -> PRINT PARENTESISA parametersCall . PARENTESISC PCOMA
    (73) parametersCall -> parametersCall . COMA exp

    PARENTESISC     shift and go to state 218
    COMA            shift and go to state 219


state 114

    (170) Println -> PRINTLN PARENTESISA exp . PARENTESISC PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp
    (74) parametersCall -> exp .

  ! shift/reduce conflict for PARENTESISC resolved as shift
    PARENTESISC     shift and go to state 220
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145
    COMA            reduce using rule 74 (parametersCall -> exp .)

  ! PARENTESISC     [ reduce using rule 74 (parametersCall -> exp .) ]


state 115

    (171) Println -> PRINTLN PARENTESISA PARENTESISC . PCOMA

    PCOMA           shift and go to state 221


state 116

    (172) Println -> PRINTLN PARENTESISA parametersCall . PARENTESISC PCOMA
    (73) parametersCall -> parametersCall . COMA exp

    PARENTESISC     shift and go to state 222
    COMA            shift and go to state 219


state 117

    (75) create_function -> FUNCTION ID PARENTESISA . parameters PARENTESISC block_function END PCOMA
    (76) create_function -> FUNCTION ID PARENTESISA . PARENTESISC block_function END PCOMA
    (77) parameters -> . parameters COMA ID
    (78) parameters -> . parameters COMA ID DOSP DOSP type
    (79) parameters -> . parameters COMA ID DOSP DOSP ID
    (80) parameters -> . ID
    (81) parameters -> . ID DOSP DOSP type
    (82) parameters -> . ID DOSP DOSP ID

    PARENTESISC     shift and go to state 225
    ID              shift and go to state 223

    parameters                     shift and go to state 224

state 118

    (173) Asignacion -> ID IGUAL exp . PCOMA
    (174) Asignacion -> ID IGUAL exp . DOSP DOSP type PCOMA
    (175) Asignacion -> ID IGUAL exp . DOSP DOSP ID PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PCOMA           shift and go to state 226
    DOSP            shift and go to state 227
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144


state 119

    (71) functionCall -> ID PARENTESISA parametersCall . PARENTESISC PCOMA
    (73) parametersCall -> parametersCall . COMA exp

    PARENTESISC     shift and go to state 228
    COMA            shift and go to state 219


state 120

    (72) functionCall -> ID PARENTESISA PARENTESISC . PCOMA

    PCOMA           shift and go to state 229


state 121

    (74) parametersCall -> exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     reduce using rule 74 (parametersCall -> exp .)
    COMA            reduce using rule 74 (parametersCall -> exp .)
    CORCHETEC       reduce using rule 74 (parametersCall -> exp .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 122

    (224) assignmentArray -> ID listArrayRef IGUAL . exp PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 230
    array                          shift and go to state 83

state 123

    (225) listArrayRef -> listArrayRef CORCHETEA . exp CORCHETEC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 231
    array                          shift and go to state 83

state 124

    (49) structAccess -> ID attributes IGUAL . exp PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 232
    array                          shift and go to state 83

state 125

    (193) attributes -> attributes PUNTO . ID

    ID              shift and go to state 233


state 126

    (226) listArrayRef -> CORCHETEA exp . CORCHETEC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    CORCHETEC       shift and go to state 234
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 127

    (194) attributes -> PUNTO ID .

    IGUAL           reduce using rule 194 (attributes -> PUNTO ID .)
    PUNTO           reduce using rule 194 (attributes -> PUNTO ID .)
    MAS             reduce using rule 194 (attributes -> PUNTO ID .)
    MENOS           reduce using rule 194 (attributes -> PUNTO ID .)
    POR             reduce using rule 194 (attributes -> PUNTO ID .)
    DIVIDIDO        reduce using rule 194 (attributes -> PUNTO ID .)
    POTENCIA        reduce using rule 194 (attributes -> PUNTO ID .)
    PORCENTAJE      reduce using rule 194 (attributes -> PUNTO ID .)
    MAYOR           reduce using rule 194 (attributes -> PUNTO ID .)
    MENOR           reduce using rule 194 (attributes -> PUNTO ID .)
    MAYORIGUAL      reduce using rule 194 (attributes -> PUNTO ID .)
    MENORIGUAL      reduce using rule 194 (attributes -> PUNTO ID .)
    DOBLEIGUAL      reduce using rule 194 (attributes -> PUNTO ID .)
    NOIGUAL         reduce using rule 194 (attributes -> PUNTO ID .)
    OR              reduce using rule 194 (attributes -> PUNTO ID .)
    AND             reduce using rule 194 (attributes -> PUNTO ID .)
    DOSP            reduce using rule 194 (attributes -> PUNTO ID .)
    PRINT           reduce using rule 194 (attributes -> PUNTO ID .)
    PRINTLN         reduce using rule 194 (attributes -> PUNTO ID .)
    ID              reduce using rule 194 (attributes -> PUNTO ID .)
    GLOBAL          reduce using rule 194 (attributes -> PUNTO ID .)
    RETURN          reduce using rule 194 (attributes -> PUNTO ID .)
    MIENTRAS        reduce using rule 194 (attributes -> PUNTO ID .)
    FOR             reduce using rule 194 (attributes -> PUNTO ID .)
    IF              reduce using rule 194 (attributes -> PUNTO ID .)
    PARSE           reduce using rule 194 (attributes -> PUNTO ID .)
    TRUNC           reduce using rule 194 (attributes -> PUNTO ID .)
    FLOAT           reduce using rule 194 (attributes -> PUNTO ID .)
    STRINGNATIVE    reduce using rule 194 (attributes -> PUNTO ID .)
    TYPEOF          reduce using rule 194 (attributes -> PUNTO ID .)
    PUSH            reduce using rule 194 (attributes -> PUNTO ID .)
    POP             reduce using rule 194 (attributes -> PUNTO ID .)
    LENGTH          reduce using rule 194 (attributes -> PUNTO ID .)
    BREAK           reduce using rule 194 (attributes -> PUNTO ID .)
    CONTINUE        reduce using rule 194 (attributes -> PUNTO ID .)
    MUTABLE         reduce using rule 194 (attributes -> PUNTO ID .)
    STRUCT          reduce using rule 194 (attributes -> PUNTO ID .)
    END             reduce using rule 194 (attributes -> PUNTO ID .)
    ELSEIF          reduce using rule 194 (attributes -> PUNTO ID .)
    ELSE            reduce using rule 194 (attributes -> PUNTO ID .)
    PARENTESISC     reduce using rule 194 (attributes -> PUNTO ID .)
    COMA            reduce using rule 194 (attributes -> PUNTO ID .)
    PCOMA           reduce using rule 194 (attributes -> PUNTO ID .)
    CORCHETEC       reduce using rule 194 (attributes -> PUNTO ID .)


state 128

    (176) Asignacion -> GLOBAL ID IGUAL . exp PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 235
    array                          shift and go to state 83

state 129

    (177) Asignacion -> GLOBAL ID PCOMA .

    PRINT           reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    PRINTLN         reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    ID              reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    GLOBAL          reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    FUNCTION        reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    MIENTRAS        reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    FOR             reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    IF              reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    PARSE           reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    TRUNC           reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    FLOAT           reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    STRINGNATIVE    reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    TYPEOF          reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    PUSH            reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    POP             reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    LENGTH          reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    MUTABLE         reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    STRUCT          reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    $end            reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    END             reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    RETURN          reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    BREAK           reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    CONTINUE        reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    ELSEIF          reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)
    ELSE            reduce using rule 177 (Asignacion -> GLOBAL ID PCOMA .)


state 130

    (69) whileLoop -> MIENTRAS exp block_loops . END PCOMA
    (124) block_loops -> block_loops . Print
    (125) block_loops -> block_loops . Println
    (126) block_loops -> block_loops . Asignacion
    (127) block_loops -> block_loops . retorno
    (128) block_loops -> block_loops . functionCall
    (129) block_loops -> block_loops . forLoop
    (130) block_loops -> block_loops . whileLoop
    (131) block_loops -> block_loops . IfCondition
    (132) block_loops -> block_loops . parseNative
    (133) block_loops -> block_loops . truncNative
    (134) block_loops -> block_loops . floatNative
    (135) block_loops -> block_loops . stringNative
    (136) block_loops -> block_loops . typeOfNative
    (137) block_loops -> block_loops . pushArray
    (138) block_loops -> block_loops . popArray
    (139) block_loops -> block_loops . lengthArray
    (140) block_loops -> block_loops . assignmentArray
    (141) block_loops -> block_loops . Break
    (142) block_loops -> block_loops . Continue
    (143) block_loops -> block_loops . Struct
    (144) block_loops -> block_loops . structAccess
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (167) retorno -> . RETURN exp PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (122) Break -> . BREAK PCOMA
    (123) Continue -> . CONTINUE PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA

    END             shift and go to state 236
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    RETURN          shift and go to state 168
    FOR             shift and go to state 29
    MIENTRAS        shift and go to state 28
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    BREAK           shift and go to state 169
    CONTINUE        shift and go to state 170
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40

    Print                          shift and go to state 237
    Println                        shift and go to state 238
    Asignacion                     shift and go to state 239
    retorno                        shift and go to state 240
    functionCall                   shift and go to state 241
    forLoop                        shift and go to state 242
    whileLoop                      shift and go to state 243
    IfCondition                    shift and go to state 244
    parseNative                    shift and go to state 245
    truncNative                    shift and go to state 246
    floatNative                    shift and go to state 247
    stringNative                   shift and go to state 248
    typeOfNative                   shift and go to state 249
    pushArray                      shift and go to state 250
    popArray                       shift and go to state 251
    lengthArray                    shift and go to state 252
    assignmentArray                shift and go to state 253
    Break                          shift and go to state 254
    Continue                       shift and go to state 255
    Struct                         shift and go to state 256
    structAccess                   shift and go to state 257

state 131

    (178) exp -> exp MAS . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 258
    array                          shift and go to state 83

state 132

    (179) exp -> exp MENOS . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 259
    array                          shift and go to state 83

state 133

    (180) exp -> exp POR . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 260
    array                          shift and go to state 83

state 134

    (181) exp -> exp DIVIDIDO . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 261
    array                          shift and go to state 83

state 135

    (182) exp -> exp POTENCIA . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 262
    array                          shift and go to state 83

state 136

    (183) exp -> exp PORCENTAJE . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 263
    array                          shift and go to state 83

state 137

    (184) exp -> exp MAYOR . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 264
    array                          shift and go to state 83

state 138

    (185) exp -> exp MENOR . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 265
    array                          shift and go to state 83

state 139

    (186) exp -> exp MAYORIGUAL . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 266
    array                          shift and go to state 83

state 140

    (187) exp -> exp MENORIGUAL . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 267
    array                          shift and go to state 83

state 141

    (188) exp -> exp DOBLEIGUAL . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 268
    array                          shift and go to state 83

state 142

    (189) exp -> exp NOIGUAL . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 269
    array                          shift and go to state 83

state 143

    (190) exp -> exp OR . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 270
    array                          shift and go to state 83

state 144

    (191) exp -> exp AND . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 271
    array                          shift and go to state 83

state 145

    (209) exp -> exp DOSP . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 272
    array                          shift and go to state 83

state 146

    (145) block_loops -> Print .

    END             reduce using rule 145 (block_loops -> Print .)
    PRINT           reduce using rule 145 (block_loops -> Print .)
    PRINTLN         reduce using rule 145 (block_loops -> Print .)
    ID              reduce using rule 145 (block_loops -> Print .)
    GLOBAL          reduce using rule 145 (block_loops -> Print .)
    RETURN          reduce using rule 145 (block_loops -> Print .)
    FOR             reduce using rule 145 (block_loops -> Print .)
    MIENTRAS        reduce using rule 145 (block_loops -> Print .)
    IF              reduce using rule 145 (block_loops -> Print .)
    PARSE           reduce using rule 145 (block_loops -> Print .)
    TRUNC           reduce using rule 145 (block_loops -> Print .)
    FLOAT           reduce using rule 145 (block_loops -> Print .)
    STRINGNATIVE    reduce using rule 145 (block_loops -> Print .)
    TYPEOF          reduce using rule 145 (block_loops -> Print .)
    PUSH            reduce using rule 145 (block_loops -> Print .)
    POP             reduce using rule 145 (block_loops -> Print .)
    LENGTH          reduce using rule 145 (block_loops -> Print .)
    BREAK           reduce using rule 145 (block_loops -> Print .)
    CONTINUE        reduce using rule 145 (block_loops -> Print .)
    MUTABLE         reduce using rule 145 (block_loops -> Print .)
    STRUCT          reduce using rule 145 (block_loops -> Print .)
    ELSEIF          reduce using rule 145 (block_loops -> Print .)
    ELSE            reduce using rule 145 (block_loops -> Print .)


state 147

    (146) block_loops -> Println .

    END             reduce using rule 146 (block_loops -> Println .)
    PRINT           reduce using rule 146 (block_loops -> Println .)
    PRINTLN         reduce using rule 146 (block_loops -> Println .)
    ID              reduce using rule 146 (block_loops -> Println .)
    GLOBAL          reduce using rule 146 (block_loops -> Println .)
    RETURN          reduce using rule 146 (block_loops -> Println .)
    FOR             reduce using rule 146 (block_loops -> Println .)
    MIENTRAS        reduce using rule 146 (block_loops -> Println .)
    IF              reduce using rule 146 (block_loops -> Println .)
    PARSE           reduce using rule 146 (block_loops -> Println .)
    TRUNC           reduce using rule 146 (block_loops -> Println .)
    FLOAT           reduce using rule 146 (block_loops -> Println .)
    STRINGNATIVE    reduce using rule 146 (block_loops -> Println .)
    TYPEOF          reduce using rule 146 (block_loops -> Println .)
    PUSH            reduce using rule 146 (block_loops -> Println .)
    POP             reduce using rule 146 (block_loops -> Println .)
    LENGTH          reduce using rule 146 (block_loops -> Println .)
    BREAK           reduce using rule 146 (block_loops -> Println .)
    CONTINUE        reduce using rule 146 (block_loops -> Println .)
    MUTABLE         reduce using rule 146 (block_loops -> Println .)
    STRUCT          reduce using rule 146 (block_loops -> Println .)
    ELSEIF          reduce using rule 146 (block_loops -> Println .)
    ELSE            reduce using rule 146 (block_loops -> Println .)


state 148

    (147) block_loops -> Asignacion .

    END             reduce using rule 147 (block_loops -> Asignacion .)
    PRINT           reduce using rule 147 (block_loops -> Asignacion .)
    PRINTLN         reduce using rule 147 (block_loops -> Asignacion .)
    ID              reduce using rule 147 (block_loops -> Asignacion .)
    GLOBAL          reduce using rule 147 (block_loops -> Asignacion .)
    RETURN          reduce using rule 147 (block_loops -> Asignacion .)
    FOR             reduce using rule 147 (block_loops -> Asignacion .)
    MIENTRAS        reduce using rule 147 (block_loops -> Asignacion .)
    IF              reduce using rule 147 (block_loops -> Asignacion .)
    PARSE           reduce using rule 147 (block_loops -> Asignacion .)
    TRUNC           reduce using rule 147 (block_loops -> Asignacion .)
    FLOAT           reduce using rule 147 (block_loops -> Asignacion .)
    STRINGNATIVE    reduce using rule 147 (block_loops -> Asignacion .)
    TYPEOF          reduce using rule 147 (block_loops -> Asignacion .)
    PUSH            reduce using rule 147 (block_loops -> Asignacion .)
    POP             reduce using rule 147 (block_loops -> Asignacion .)
    LENGTH          reduce using rule 147 (block_loops -> Asignacion .)
    BREAK           reduce using rule 147 (block_loops -> Asignacion .)
    CONTINUE        reduce using rule 147 (block_loops -> Asignacion .)
    MUTABLE         reduce using rule 147 (block_loops -> Asignacion .)
    STRUCT          reduce using rule 147 (block_loops -> Asignacion .)
    ELSEIF          reduce using rule 147 (block_loops -> Asignacion .)
    ELSE            reduce using rule 147 (block_loops -> Asignacion .)


state 149

    (148) block_loops -> retorno .

    END             reduce using rule 148 (block_loops -> retorno .)
    PRINT           reduce using rule 148 (block_loops -> retorno .)
    PRINTLN         reduce using rule 148 (block_loops -> retorno .)
    ID              reduce using rule 148 (block_loops -> retorno .)
    GLOBAL          reduce using rule 148 (block_loops -> retorno .)
    RETURN          reduce using rule 148 (block_loops -> retorno .)
    FOR             reduce using rule 148 (block_loops -> retorno .)
    MIENTRAS        reduce using rule 148 (block_loops -> retorno .)
    IF              reduce using rule 148 (block_loops -> retorno .)
    PARSE           reduce using rule 148 (block_loops -> retorno .)
    TRUNC           reduce using rule 148 (block_loops -> retorno .)
    FLOAT           reduce using rule 148 (block_loops -> retorno .)
    STRINGNATIVE    reduce using rule 148 (block_loops -> retorno .)
    TYPEOF          reduce using rule 148 (block_loops -> retorno .)
    PUSH            reduce using rule 148 (block_loops -> retorno .)
    POP             reduce using rule 148 (block_loops -> retorno .)
    LENGTH          reduce using rule 148 (block_loops -> retorno .)
    BREAK           reduce using rule 148 (block_loops -> retorno .)
    CONTINUE        reduce using rule 148 (block_loops -> retorno .)
    MUTABLE         reduce using rule 148 (block_loops -> retorno .)
    STRUCT          reduce using rule 148 (block_loops -> retorno .)
    ELSEIF          reduce using rule 148 (block_loops -> retorno .)
    ELSE            reduce using rule 148 (block_loops -> retorno .)


state 150

    (149) block_loops -> functionCall .

    END             reduce using rule 149 (block_loops -> functionCall .)
    PRINT           reduce using rule 149 (block_loops -> functionCall .)
    PRINTLN         reduce using rule 149 (block_loops -> functionCall .)
    ID              reduce using rule 149 (block_loops -> functionCall .)
    GLOBAL          reduce using rule 149 (block_loops -> functionCall .)
    RETURN          reduce using rule 149 (block_loops -> functionCall .)
    FOR             reduce using rule 149 (block_loops -> functionCall .)
    MIENTRAS        reduce using rule 149 (block_loops -> functionCall .)
    IF              reduce using rule 149 (block_loops -> functionCall .)
    PARSE           reduce using rule 149 (block_loops -> functionCall .)
    TRUNC           reduce using rule 149 (block_loops -> functionCall .)
    FLOAT           reduce using rule 149 (block_loops -> functionCall .)
    STRINGNATIVE    reduce using rule 149 (block_loops -> functionCall .)
    TYPEOF          reduce using rule 149 (block_loops -> functionCall .)
    PUSH            reduce using rule 149 (block_loops -> functionCall .)
    POP             reduce using rule 149 (block_loops -> functionCall .)
    LENGTH          reduce using rule 149 (block_loops -> functionCall .)
    BREAK           reduce using rule 149 (block_loops -> functionCall .)
    CONTINUE        reduce using rule 149 (block_loops -> functionCall .)
    MUTABLE         reduce using rule 149 (block_loops -> functionCall .)
    STRUCT          reduce using rule 149 (block_loops -> functionCall .)
    ELSEIF          reduce using rule 149 (block_loops -> functionCall .)
    ELSE            reduce using rule 149 (block_loops -> functionCall .)


state 151

    (151) block_loops -> forLoop .

    END             reduce using rule 151 (block_loops -> forLoop .)
    PRINT           reduce using rule 151 (block_loops -> forLoop .)
    PRINTLN         reduce using rule 151 (block_loops -> forLoop .)
    ID              reduce using rule 151 (block_loops -> forLoop .)
    GLOBAL          reduce using rule 151 (block_loops -> forLoop .)
    RETURN          reduce using rule 151 (block_loops -> forLoop .)
    FOR             reduce using rule 151 (block_loops -> forLoop .)
    MIENTRAS        reduce using rule 151 (block_loops -> forLoop .)
    IF              reduce using rule 151 (block_loops -> forLoop .)
    PARSE           reduce using rule 151 (block_loops -> forLoop .)
    TRUNC           reduce using rule 151 (block_loops -> forLoop .)
    FLOAT           reduce using rule 151 (block_loops -> forLoop .)
    STRINGNATIVE    reduce using rule 151 (block_loops -> forLoop .)
    TYPEOF          reduce using rule 151 (block_loops -> forLoop .)
    PUSH            reduce using rule 151 (block_loops -> forLoop .)
    POP             reduce using rule 151 (block_loops -> forLoop .)
    LENGTH          reduce using rule 151 (block_loops -> forLoop .)
    BREAK           reduce using rule 151 (block_loops -> forLoop .)
    CONTINUE        reduce using rule 151 (block_loops -> forLoop .)
    MUTABLE         reduce using rule 151 (block_loops -> forLoop .)
    STRUCT          reduce using rule 151 (block_loops -> forLoop .)
    ELSEIF          reduce using rule 151 (block_loops -> forLoop .)
    ELSE            reduce using rule 151 (block_loops -> forLoop .)


state 152

    (150) block_loops -> whileLoop .

    END             reduce using rule 150 (block_loops -> whileLoop .)
    PRINT           reduce using rule 150 (block_loops -> whileLoop .)
    PRINTLN         reduce using rule 150 (block_loops -> whileLoop .)
    ID              reduce using rule 150 (block_loops -> whileLoop .)
    GLOBAL          reduce using rule 150 (block_loops -> whileLoop .)
    RETURN          reduce using rule 150 (block_loops -> whileLoop .)
    FOR             reduce using rule 150 (block_loops -> whileLoop .)
    MIENTRAS        reduce using rule 150 (block_loops -> whileLoop .)
    IF              reduce using rule 150 (block_loops -> whileLoop .)
    PARSE           reduce using rule 150 (block_loops -> whileLoop .)
    TRUNC           reduce using rule 150 (block_loops -> whileLoop .)
    FLOAT           reduce using rule 150 (block_loops -> whileLoop .)
    STRINGNATIVE    reduce using rule 150 (block_loops -> whileLoop .)
    TYPEOF          reduce using rule 150 (block_loops -> whileLoop .)
    PUSH            reduce using rule 150 (block_loops -> whileLoop .)
    POP             reduce using rule 150 (block_loops -> whileLoop .)
    LENGTH          reduce using rule 150 (block_loops -> whileLoop .)
    BREAK           reduce using rule 150 (block_loops -> whileLoop .)
    CONTINUE        reduce using rule 150 (block_loops -> whileLoop .)
    MUTABLE         reduce using rule 150 (block_loops -> whileLoop .)
    STRUCT          reduce using rule 150 (block_loops -> whileLoop .)
    ELSEIF          reduce using rule 150 (block_loops -> whileLoop .)
    ELSE            reduce using rule 150 (block_loops -> whileLoop .)


state 153

    (152) block_loops -> IfCondition .

    END             reduce using rule 152 (block_loops -> IfCondition .)
    PRINT           reduce using rule 152 (block_loops -> IfCondition .)
    PRINTLN         reduce using rule 152 (block_loops -> IfCondition .)
    ID              reduce using rule 152 (block_loops -> IfCondition .)
    GLOBAL          reduce using rule 152 (block_loops -> IfCondition .)
    RETURN          reduce using rule 152 (block_loops -> IfCondition .)
    FOR             reduce using rule 152 (block_loops -> IfCondition .)
    MIENTRAS        reduce using rule 152 (block_loops -> IfCondition .)
    IF              reduce using rule 152 (block_loops -> IfCondition .)
    PARSE           reduce using rule 152 (block_loops -> IfCondition .)
    TRUNC           reduce using rule 152 (block_loops -> IfCondition .)
    FLOAT           reduce using rule 152 (block_loops -> IfCondition .)
    STRINGNATIVE    reduce using rule 152 (block_loops -> IfCondition .)
    TYPEOF          reduce using rule 152 (block_loops -> IfCondition .)
    PUSH            reduce using rule 152 (block_loops -> IfCondition .)
    POP             reduce using rule 152 (block_loops -> IfCondition .)
    LENGTH          reduce using rule 152 (block_loops -> IfCondition .)
    BREAK           reduce using rule 152 (block_loops -> IfCondition .)
    CONTINUE        reduce using rule 152 (block_loops -> IfCondition .)
    MUTABLE         reduce using rule 152 (block_loops -> IfCondition .)
    STRUCT          reduce using rule 152 (block_loops -> IfCondition .)
    ELSEIF          reduce using rule 152 (block_loops -> IfCondition .)
    ELSE            reduce using rule 152 (block_loops -> IfCondition .)


state 154

    (153) block_loops -> parseNative .

    END             reduce using rule 153 (block_loops -> parseNative .)
    PRINT           reduce using rule 153 (block_loops -> parseNative .)
    PRINTLN         reduce using rule 153 (block_loops -> parseNative .)
    ID              reduce using rule 153 (block_loops -> parseNative .)
    GLOBAL          reduce using rule 153 (block_loops -> parseNative .)
    RETURN          reduce using rule 153 (block_loops -> parseNative .)
    FOR             reduce using rule 153 (block_loops -> parseNative .)
    MIENTRAS        reduce using rule 153 (block_loops -> parseNative .)
    IF              reduce using rule 153 (block_loops -> parseNative .)
    PARSE           reduce using rule 153 (block_loops -> parseNative .)
    TRUNC           reduce using rule 153 (block_loops -> parseNative .)
    FLOAT           reduce using rule 153 (block_loops -> parseNative .)
    STRINGNATIVE    reduce using rule 153 (block_loops -> parseNative .)
    TYPEOF          reduce using rule 153 (block_loops -> parseNative .)
    PUSH            reduce using rule 153 (block_loops -> parseNative .)
    POP             reduce using rule 153 (block_loops -> parseNative .)
    LENGTH          reduce using rule 153 (block_loops -> parseNative .)
    BREAK           reduce using rule 153 (block_loops -> parseNative .)
    CONTINUE        reduce using rule 153 (block_loops -> parseNative .)
    MUTABLE         reduce using rule 153 (block_loops -> parseNative .)
    STRUCT          reduce using rule 153 (block_loops -> parseNative .)
    ELSEIF          reduce using rule 153 (block_loops -> parseNative .)
    ELSE            reduce using rule 153 (block_loops -> parseNative .)


state 155

    (154) block_loops -> truncNative .

    END             reduce using rule 154 (block_loops -> truncNative .)
    PRINT           reduce using rule 154 (block_loops -> truncNative .)
    PRINTLN         reduce using rule 154 (block_loops -> truncNative .)
    ID              reduce using rule 154 (block_loops -> truncNative .)
    GLOBAL          reduce using rule 154 (block_loops -> truncNative .)
    RETURN          reduce using rule 154 (block_loops -> truncNative .)
    FOR             reduce using rule 154 (block_loops -> truncNative .)
    MIENTRAS        reduce using rule 154 (block_loops -> truncNative .)
    IF              reduce using rule 154 (block_loops -> truncNative .)
    PARSE           reduce using rule 154 (block_loops -> truncNative .)
    TRUNC           reduce using rule 154 (block_loops -> truncNative .)
    FLOAT           reduce using rule 154 (block_loops -> truncNative .)
    STRINGNATIVE    reduce using rule 154 (block_loops -> truncNative .)
    TYPEOF          reduce using rule 154 (block_loops -> truncNative .)
    PUSH            reduce using rule 154 (block_loops -> truncNative .)
    POP             reduce using rule 154 (block_loops -> truncNative .)
    LENGTH          reduce using rule 154 (block_loops -> truncNative .)
    BREAK           reduce using rule 154 (block_loops -> truncNative .)
    CONTINUE        reduce using rule 154 (block_loops -> truncNative .)
    MUTABLE         reduce using rule 154 (block_loops -> truncNative .)
    STRUCT          reduce using rule 154 (block_loops -> truncNative .)
    ELSEIF          reduce using rule 154 (block_loops -> truncNative .)
    ELSE            reduce using rule 154 (block_loops -> truncNative .)


state 156

    (155) block_loops -> floatNative .

    END             reduce using rule 155 (block_loops -> floatNative .)
    PRINT           reduce using rule 155 (block_loops -> floatNative .)
    PRINTLN         reduce using rule 155 (block_loops -> floatNative .)
    ID              reduce using rule 155 (block_loops -> floatNative .)
    GLOBAL          reduce using rule 155 (block_loops -> floatNative .)
    RETURN          reduce using rule 155 (block_loops -> floatNative .)
    FOR             reduce using rule 155 (block_loops -> floatNative .)
    MIENTRAS        reduce using rule 155 (block_loops -> floatNative .)
    IF              reduce using rule 155 (block_loops -> floatNative .)
    PARSE           reduce using rule 155 (block_loops -> floatNative .)
    TRUNC           reduce using rule 155 (block_loops -> floatNative .)
    FLOAT           reduce using rule 155 (block_loops -> floatNative .)
    STRINGNATIVE    reduce using rule 155 (block_loops -> floatNative .)
    TYPEOF          reduce using rule 155 (block_loops -> floatNative .)
    PUSH            reduce using rule 155 (block_loops -> floatNative .)
    POP             reduce using rule 155 (block_loops -> floatNative .)
    LENGTH          reduce using rule 155 (block_loops -> floatNative .)
    BREAK           reduce using rule 155 (block_loops -> floatNative .)
    CONTINUE        reduce using rule 155 (block_loops -> floatNative .)
    MUTABLE         reduce using rule 155 (block_loops -> floatNative .)
    STRUCT          reduce using rule 155 (block_loops -> floatNative .)
    ELSEIF          reduce using rule 155 (block_loops -> floatNative .)
    ELSE            reduce using rule 155 (block_loops -> floatNative .)


state 157

    (156) block_loops -> stringNative .

    END             reduce using rule 156 (block_loops -> stringNative .)
    PRINT           reduce using rule 156 (block_loops -> stringNative .)
    PRINTLN         reduce using rule 156 (block_loops -> stringNative .)
    ID              reduce using rule 156 (block_loops -> stringNative .)
    GLOBAL          reduce using rule 156 (block_loops -> stringNative .)
    RETURN          reduce using rule 156 (block_loops -> stringNative .)
    FOR             reduce using rule 156 (block_loops -> stringNative .)
    MIENTRAS        reduce using rule 156 (block_loops -> stringNative .)
    IF              reduce using rule 156 (block_loops -> stringNative .)
    PARSE           reduce using rule 156 (block_loops -> stringNative .)
    TRUNC           reduce using rule 156 (block_loops -> stringNative .)
    FLOAT           reduce using rule 156 (block_loops -> stringNative .)
    STRINGNATIVE    reduce using rule 156 (block_loops -> stringNative .)
    TYPEOF          reduce using rule 156 (block_loops -> stringNative .)
    PUSH            reduce using rule 156 (block_loops -> stringNative .)
    POP             reduce using rule 156 (block_loops -> stringNative .)
    LENGTH          reduce using rule 156 (block_loops -> stringNative .)
    BREAK           reduce using rule 156 (block_loops -> stringNative .)
    CONTINUE        reduce using rule 156 (block_loops -> stringNative .)
    MUTABLE         reduce using rule 156 (block_loops -> stringNative .)
    STRUCT          reduce using rule 156 (block_loops -> stringNative .)
    ELSEIF          reduce using rule 156 (block_loops -> stringNative .)
    ELSE            reduce using rule 156 (block_loops -> stringNative .)


state 158

    (157) block_loops -> typeOfNative .

    END             reduce using rule 157 (block_loops -> typeOfNative .)
    PRINT           reduce using rule 157 (block_loops -> typeOfNative .)
    PRINTLN         reduce using rule 157 (block_loops -> typeOfNative .)
    ID              reduce using rule 157 (block_loops -> typeOfNative .)
    GLOBAL          reduce using rule 157 (block_loops -> typeOfNative .)
    RETURN          reduce using rule 157 (block_loops -> typeOfNative .)
    FOR             reduce using rule 157 (block_loops -> typeOfNative .)
    MIENTRAS        reduce using rule 157 (block_loops -> typeOfNative .)
    IF              reduce using rule 157 (block_loops -> typeOfNative .)
    PARSE           reduce using rule 157 (block_loops -> typeOfNative .)
    TRUNC           reduce using rule 157 (block_loops -> typeOfNative .)
    FLOAT           reduce using rule 157 (block_loops -> typeOfNative .)
    STRINGNATIVE    reduce using rule 157 (block_loops -> typeOfNative .)
    TYPEOF          reduce using rule 157 (block_loops -> typeOfNative .)
    PUSH            reduce using rule 157 (block_loops -> typeOfNative .)
    POP             reduce using rule 157 (block_loops -> typeOfNative .)
    LENGTH          reduce using rule 157 (block_loops -> typeOfNative .)
    BREAK           reduce using rule 157 (block_loops -> typeOfNative .)
    CONTINUE        reduce using rule 157 (block_loops -> typeOfNative .)
    MUTABLE         reduce using rule 157 (block_loops -> typeOfNative .)
    STRUCT          reduce using rule 157 (block_loops -> typeOfNative .)
    ELSEIF          reduce using rule 157 (block_loops -> typeOfNative .)
    ELSE            reduce using rule 157 (block_loops -> typeOfNative .)


state 159

    (158) block_loops -> pushArray .

    END             reduce using rule 158 (block_loops -> pushArray .)
    PRINT           reduce using rule 158 (block_loops -> pushArray .)
    PRINTLN         reduce using rule 158 (block_loops -> pushArray .)
    ID              reduce using rule 158 (block_loops -> pushArray .)
    GLOBAL          reduce using rule 158 (block_loops -> pushArray .)
    RETURN          reduce using rule 158 (block_loops -> pushArray .)
    FOR             reduce using rule 158 (block_loops -> pushArray .)
    MIENTRAS        reduce using rule 158 (block_loops -> pushArray .)
    IF              reduce using rule 158 (block_loops -> pushArray .)
    PARSE           reduce using rule 158 (block_loops -> pushArray .)
    TRUNC           reduce using rule 158 (block_loops -> pushArray .)
    FLOAT           reduce using rule 158 (block_loops -> pushArray .)
    STRINGNATIVE    reduce using rule 158 (block_loops -> pushArray .)
    TYPEOF          reduce using rule 158 (block_loops -> pushArray .)
    PUSH            reduce using rule 158 (block_loops -> pushArray .)
    POP             reduce using rule 158 (block_loops -> pushArray .)
    LENGTH          reduce using rule 158 (block_loops -> pushArray .)
    BREAK           reduce using rule 158 (block_loops -> pushArray .)
    CONTINUE        reduce using rule 158 (block_loops -> pushArray .)
    MUTABLE         reduce using rule 158 (block_loops -> pushArray .)
    STRUCT          reduce using rule 158 (block_loops -> pushArray .)
    ELSEIF          reduce using rule 158 (block_loops -> pushArray .)
    ELSE            reduce using rule 158 (block_loops -> pushArray .)


state 160

    (159) block_loops -> popArray .

    END             reduce using rule 159 (block_loops -> popArray .)
    PRINT           reduce using rule 159 (block_loops -> popArray .)
    PRINTLN         reduce using rule 159 (block_loops -> popArray .)
    ID              reduce using rule 159 (block_loops -> popArray .)
    GLOBAL          reduce using rule 159 (block_loops -> popArray .)
    RETURN          reduce using rule 159 (block_loops -> popArray .)
    FOR             reduce using rule 159 (block_loops -> popArray .)
    MIENTRAS        reduce using rule 159 (block_loops -> popArray .)
    IF              reduce using rule 159 (block_loops -> popArray .)
    PARSE           reduce using rule 159 (block_loops -> popArray .)
    TRUNC           reduce using rule 159 (block_loops -> popArray .)
    FLOAT           reduce using rule 159 (block_loops -> popArray .)
    STRINGNATIVE    reduce using rule 159 (block_loops -> popArray .)
    TYPEOF          reduce using rule 159 (block_loops -> popArray .)
    PUSH            reduce using rule 159 (block_loops -> popArray .)
    POP             reduce using rule 159 (block_loops -> popArray .)
    LENGTH          reduce using rule 159 (block_loops -> popArray .)
    BREAK           reduce using rule 159 (block_loops -> popArray .)
    CONTINUE        reduce using rule 159 (block_loops -> popArray .)
    MUTABLE         reduce using rule 159 (block_loops -> popArray .)
    STRUCT          reduce using rule 159 (block_loops -> popArray .)
    ELSEIF          reduce using rule 159 (block_loops -> popArray .)
    ELSE            reduce using rule 159 (block_loops -> popArray .)


state 161

    (160) block_loops -> lengthArray .

    END             reduce using rule 160 (block_loops -> lengthArray .)
    PRINT           reduce using rule 160 (block_loops -> lengthArray .)
    PRINTLN         reduce using rule 160 (block_loops -> lengthArray .)
    ID              reduce using rule 160 (block_loops -> lengthArray .)
    GLOBAL          reduce using rule 160 (block_loops -> lengthArray .)
    RETURN          reduce using rule 160 (block_loops -> lengthArray .)
    FOR             reduce using rule 160 (block_loops -> lengthArray .)
    MIENTRAS        reduce using rule 160 (block_loops -> lengthArray .)
    IF              reduce using rule 160 (block_loops -> lengthArray .)
    PARSE           reduce using rule 160 (block_loops -> lengthArray .)
    TRUNC           reduce using rule 160 (block_loops -> lengthArray .)
    FLOAT           reduce using rule 160 (block_loops -> lengthArray .)
    STRINGNATIVE    reduce using rule 160 (block_loops -> lengthArray .)
    TYPEOF          reduce using rule 160 (block_loops -> lengthArray .)
    PUSH            reduce using rule 160 (block_loops -> lengthArray .)
    POP             reduce using rule 160 (block_loops -> lengthArray .)
    LENGTH          reduce using rule 160 (block_loops -> lengthArray .)
    BREAK           reduce using rule 160 (block_loops -> lengthArray .)
    CONTINUE        reduce using rule 160 (block_loops -> lengthArray .)
    MUTABLE         reduce using rule 160 (block_loops -> lengthArray .)
    STRUCT          reduce using rule 160 (block_loops -> lengthArray .)
    ELSEIF          reduce using rule 160 (block_loops -> lengthArray .)
    ELSE            reduce using rule 160 (block_loops -> lengthArray .)


state 162

    (161) block_loops -> assignmentArray .

    END             reduce using rule 161 (block_loops -> assignmentArray .)
    PRINT           reduce using rule 161 (block_loops -> assignmentArray .)
    PRINTLN         reduce using rule 161 (block_loops -> assignmentArray .)
    ID              reduce using rule 161 (block_loops -> assignmentArray .)
    GLOBAL          reduce using rule 161 (block_loops -> assignmentArray .)
    RETURN          reduce using rule 161 (block_loops -> assignmentArray .)
    FOR             reduce using rule 161 (block_loops -> assignmentArray .)
    MIENTRAS        reduce using rule 161 (block_loops -> assignmentArray .)
    IF              reduce using rule 161 (block_loops -> assignmentArray .)
    PARSE           reduce using rule 161 (block_loops -> assignmentArray .)
    TRUNC           reduce using rule 161 (block_loops -> assignmentArray .)
    FLOAT           reduce using rule 161 (block_loops -> assignmentArray .)
    STRINGNATIVE    reduce using rule 161 (block_loops -> assignmentArray .)
    TYPEOF          reduce using rule 161 (block_loops -> assignmentArray .)
    PUSH            reduce using rule 161 (block_loops -> assignmentArray .)
    POP             reduce using rule 161 (block_loops -> assignmentArray .)
    LENGTH          reduce using rule 161 (block_loops -> assignmentArray .)
    BREAK           reduce using rule 161 (block_loops -> assignmentArray .)
    CONTINUE        reduce using rule 161 (block_loops -> assignmentArray .)
    MUTABLE         reduce using rule 161 (block_loops -> assignmentArray .)
    STRUCT          reduce using rule 161 (block_loops -> assignmentArray .)
    ELSEIF          reduce using rule 161 (block_loops -> assignmentArray .)
    ELSE            reduce using rule 161 (block_loops -> assignmentArray .)


state 163

    (162) block_loops -> Break .

    END             reduce using rule 162 (block_loops -> Break .)
    PRINT           reduce using rule 162 (block_loops -> Break .)
    PRINTLN         reduce using rule 162 (block_loops -> Break .)
    ID              reduce using rule 162 (block_loops -> Break .)
    GLOBAL          reduce using rule 162 (block_loops -> Break .)
    RETURN          reduce using rule 162 (block_loops -> Break .)
    FOR             reduce using rule 162 (block_loops -> Break .)
    MIENTRAS        reduce using rule 162 (block_loops -> Break .)
    IF              reduce using rule 162 (block_loops -> Break .)
    PARSE           reduce using rule 162 (block_loops -> Break .)
    TRUNC           reduce using rule 162 (block_loops -> Break .)
    FLOAT           reduce using rule 162 (block_loops -> Break .)
    STRINGNATIVE    reduce using rule 162 (block_loops -> Break .)
    TYPEOF          reduce using rule 162 (block_loops -> Break .)
    PUSH            reduce using rule 162 (block_loops -> Break .)
    POP             reduce using rule 162 (block_loops -> Break .)
    LENGTH          reduce using rule 162 (block_loops -> Break .)
    BREAK           reduce using rule 162 (block_loops -> Break .)
    CONTINUE        reduce using rule 162 (block_loops -> Break .)
    MUTABLE         reduce using rule 162 (block_loops -> Break .)
    STRUCT          reduce using rule 162 (block_loops -> Break .)
    ELSEIF          reduce using rule 162 (block_loops -> Break .)
    ELSE            reduce using rule 162 (block_loops -> Break .)


state 164

    (163) block_loops -> Continue .

    END             reduce using rule 163 (block_loops -> Continue .)
    PRINT           reduce using rule 163 (block_loops -> Continue .)
    PRINTLN         reduce using rule 163 (block_loops -> Continue .)
    ID              reduce using rule 163 (block_loops -> Continue .)
    GLOBAL          reduce using rule 163 (block_loops -> Continue .)
    RETURN          reduce using rule 163 (block_loops -> Continue .)
    FOR             reduce using rule 163 (block_loops -> Continue .)
    MIENTRAS        reduce using rule 163 (block_loops -> Continue .)
    IF              reduce using rule 163 (block_loops -> Continue .)
    PARSE           reduce using rule 163 (block_loops -> Continue .)
    TRUNC           reduce using rule 163 (block_loops -> Continue .)
    FLOAT           reduce using rule 163 (block_loops -> Continue .)
    STRINGNATIVE    reduce using rule 163 (block_loops -> Continue .)
    TYPEOF          reduce using rule 163 (block_loops -> Continue .)
    PUSH            reduce using rule 163 (block_loops -> Continue .)
    POP             reduce using rule 163 (block_loops -> Continue .)
    LENGTH          reduce using rule 163 (block_loops -> Continue .)
    BREAK           reduce using rule 163 (block_loops -> Continue .)
    CONTINUE        reduce using rule 163 (block_loops -> Continue .)
    MUTABLE         reduce using rule 163 (block_loops -> Continue .)
    STRUCT          reduce using rule 163 (block_loops -> Continue .)
    ELSEIF          reduce using rule 163 (block_loops -> Continue .)
    ELSE            reduce using rule 163 (block_loops -> Continue .)


state 165

    (164) block_loops -> Struct .

    END             reduce using rule 164 (block_loops -> Struct .)
    PRINT           reduce using rule 164 (block_loops -> Struct .)
    PRINTLN         reduce using rule 164 (block_loops -> Struct .)
    ID              reduce using rule 164 (block_loops -> Struct .)
    GLOBAL          reduce using rule 164 (block_loops -> Struct .)
    RETURN          reduce using rule 164 (block_loops -> Struct .)
    FOR             reduce using rule 164 (block_loops -> Struct .)
    MIENTRAS        reduce using rule 164 (block_loops -> Struct .)
    IF              reduce using rule 164 (block_loops -> Struct .)
    PARSE           reduce using rule 164 (block_loops -> Struct .)
    TRUNC           reduce using rule 164 (block_loops -> Struct .)
    FLOAT           reduce using rule 164 (block_loops -> Struct .)
    STRINGNATIVE    reduce using rule 164 (block_loops -> Struct .)
    TYPEOF          reduce using rule 164 (block_loops -> Struct .)
    PUSH            reduce using rule 164 (block_loops -> Struct .)
    POP             reduce using rule 164 (block_loops -> Struct .)
    LENGTH          reduce using rule 164 (block_loops -> Struct .)
    BREAK           reduce using rule 164 (block_loops -> Struct .)
    CONTINUE        reduce using rule 164 (block_loops -> Struct .)
    MUTABLE         reduce using rule 164 (block_loops -> Struct .)
    STRUCT          reduce using rule 164 (block_loops -> Struct .)
    ELSEIF          reduce using rule 164 (block_loops -> Struct .)
    ELSE            reduce using rule 164 (block_loops -> Struct .)


state 166

    (165) block_loops -> structAccess .

    END             reduce using rule 165 (block_loops -> structAccess .)
    PRINT           reduce using rule 165 (block_loops -> structAccess .)
    PRINTLN         reduce using rule 165 (block_loops -> structAccess .)
    ID              reduce using rule 165 (block_loops -> structAccess .)
    GLOBAL          reduce using rule 165 (block_loops -> structAccess .)
    RETURN          reduce using rule 165 (block_loops -> structAccess .)
    FOR             reduce using rule 165 (block_loops -> structAccess .)
    MIENTRAS        reduce using rule 165 (block_loops -> structAccess .)
    IF              reduce using rule 165 (block_loops -> structAccess .)
    PARSE           reduce using rule 165 (block_loops -> structAccess .)
    TRUNC           reduce using rule 165 (block_loops -> structAccess .)
    FLOAT           reduce using rule 165 (block_loops -> structAccess .)
    STRINGNATIVE    reduce using rule 165 (block_loops -> structAccess .)
    TYPEOF          reduce using rule 165 (block_loops -> structAccess .)
    PUSH            reduce using rule 165 (block_loops -> structAccess .)
    POP             reduce using rule 165 (block_loops -> structAccess .)
    LENGTH          reduce using rule 165 (block_loops -> structAccess .)
    BREAK           reduce using rule 165 (block_loops -> structAccess .)
    CONTINUE        reduce using rule 165 (block_loops -> structAccess .)
    MUTABLE         reduce using rule 165 (block_loops -> structAccess .)
    STRUCT          reduce using rule 165 (block_loops -> structAccess .)
    ELSEIF          reduce using rule 165 (block_loops -> structAccess .)
    ELSE            reduce using rule 165 (block_loops -> structAccess .)


state 167

    (166) block_loops -> empty .

    END             reduce using rule 166 (block_loops -> empty .)
    PRINT           reduce using rule 166 (block_loops -> empty .)
    PRINTLN         reduce using rule 166 (block_loops -> empty .)
    ID              reduce using rule 166 (block_loops -> empty .)
    GLOBAL          reduce using rule 166 (block_loops -> empty .)
    RETURN          reduce using rule 166 (block_loops -> empty .)
    FOR             reduce using rule 166 (block_loops -> empty .)
    MIENTRAS        reduce using rule 166 (block_loops -> empty .)
    IF              reduce using rule 166 (block_loops -> empty .)
    PARSE           reduce using rule 166 (block_loops -> empty .)
    TRUNC           reduce using rule 166 (block_loops -> empty .)
    FLOAT           reduce using rule 166 (block_loops -> empty .)
    STRINGNATIVE    reduce using rule 166 (block_loops -> empty .)
    TYPEOF          reduce using rule 166 (block_loops -> empty .)
    PUSH            reduce using rule 166 (block_loops -> empty .)
    POP             reduce using rule 166 (block_loops -> empty .)
    LENGTH          reduce using rule 166 (block_loops -> empty .)
    BREAK           reduce using rule 166 (block_loops -> empty .)
    CONTINUE        reduce using rule 166 (block_loops -> empty .)
    MUTABLE         reduce using rule 166 (block_loops -> empty .)
    STRUCT          reduce using rule 166 (block_loops -> empty .)
    ELSEIF          reduce using rule 166 (block_loops -> empty .)
    ELSE            reduce using rule 166 (block_loops -> empty .)


state 168

    (167) retorno -> RETURN . exp PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 273
    array                          shift and go to state 83

state 169

    (122) Break -> BREAK . PCOMA

    PCOMA           shift and go to state 274


state 170

    (123) Continue -> CONTINUE . PCOMA

    PCOMA           shift and go to state 275


state 171

    (212) exp -> MENOS exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    MAS             reduce using rule 212 (exp -> MENOS exp .)
    MENOS           reduce using rule 212 (exp -> MENOS exp .)
    POR             reduce using rule 212 (exp -> MENOS exp .)
    DIVIDIDO        reduce using rule 212 (exp -> MENOS exp .)
    POTENCIA        reduce using rule 212 (exp -> MENOS exp .)
    PORCENTAJE      reduce using rule 212 (exp -> MENOS exp .)
    MAYOR           reduce using rule 212 (exp -> MENOS exp .)
    MENOR           reduce using rule 212 (exp -> MENOS exp .)
    MAYORIGUAL      reduce using rule 212 (exp -> MENOS exp .)
    MENORIGUAL      reduce using rule 212 (exp -> MENOS exp .)
    DOBLEIGUAL      reduce using rule 212 (exp -> MENOS exp .)
    NOIGUAL         reduce using rule 212 (exp -> MENOS exp .)
    OR              reduce using rule 212 (exp -> MENOS exp .)
    AND             reduce using rule 212 (exp -> MENOS exp .)
    DOSP            reduce using rule 212 (exp -> MENOS exp .)
    PRINT           reduce using rule 212 (exp -> MENOS exp .)
    PRINTLN         reduce using rule 212 (exp -> MENOS exp .)
    ID              reduce using rule 212 (exp -> MENOS exp .)
    GLOBAL          reduce using rule 212 (exp -> MENOS exp .)
    RETURN          reduce using rule 212 (exp -> MENOS exp .)
    MIENTRAS        reduce using rule 212 (exp -> MENOS exp .)
    FOR             reduce using rule 212 (exp -> MENOS exp .)
    IF              reduce using rule 212 (exp -> MENOS exp .)
    PARSE           reduce using rule 212 (exp -> MENOS exp .)
    TRUNC           reduce using rule 212 (exp -> MENOS exp .)
    FLOAT           reduce using rule 212 (exp -> MENOS exp .)
    STRINGNATIVE    reduce using rule 212 (exp -> MENOS exp .)
    TYPEOF          reduce using rule 212 (exp -> MENOS exp .)
    PUSH            reduce using rule 212 (exp -> MENOS exp .)
    POP             reduce using rule 212 (exp -> MENOS exp .)
    LENGTH          reduce using rule 212 (exp -> MENOS exp .)
    BREAK           reduce using rule 212 (exp -> MENOS exp .)
    CONTINUE        reduce using rule 212 (exp -> MENOS exp .)
    MUTABLE         reduce using rule 212 (exp -> MENOS exp .)
    STRUCT          reduce using rule 212 (exp -> MENOS exp .)
    END             reduce using rule 212 (exp -> MENOS exp .)
    ELSEIF          reduce using rule 212 (exp -> MENOS exp .)
    ELSE            reduce using rule 212 (exp -> MENOS exp .)
    PARENTESISC     reduce using rule 212 (exp -> MENOS exp .)
    COMA            reduce using rule 212 (exp -> MENOS exp .)
    PCOMA           reduce using rule 212 (exp -> MENOS exp .)
    CORCHETEC       reduce using rule 212 (exp -> MENOS exp .)

  ! MAS             [ shift and go to state 131 ]
  ! MENOS           [ shift and go to state 132 ]
  ! POR             [ shift and go to state 133 ]
  ! DIVIDIDO        [ shift and go to state 134 ]
  ! POTENCIA        [ shift and go to state 135 ]
  ! PORCENTAJE      [ shift and go to state 136 ]
  ! MAYOR           [ shift and go to state 137 ]
  ! MENOR           [ shift and go to state 138 ]
  ! MAYORIGUAL      [ shift and go to state 139 ]
  ! MENORIGUAL      [ shift and go to state 140 ]
  ! DOBLEIGUAL      [ shift and go to state 141 ]
  ! NOIGUAL         [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]
  ! DOSP            [ shift and go to state 145 ]


state 172

    (192) exp -> ID attributes .
    (193) attributes -> attributes . PUNTO ID

    MAS             reduce using rule 192 (exp -> ID attributes .)
    MENOS           reduce using rule 192 (exp -> ID attributes .)
    POR             reduce using rule 192 (exp -> ID attributes .)
    DIVIDIDO        reduce using rule 192 (exp -> ID attributes .)
    POTENCIA        reduce using rule 192 (exp -> ID attributes .)
    PORCENTAJE      reduce using rule 192 (exp -> ID attributes .)
    MAYOR           reduce using rule 192 (exp -> ID attributes .)
    MENOR           reduce using rule 192 (exp -> ID attributes .)
    MAYORIGUAL      reduce using rule 192 (exp -> ID attributes .)
    MENORIGUAL      reduce using rule 192 (exp -> ID attributes .)
    DOBLEIGUAL      reduce using rule 192 (exp -> ID attributes .)
    NOIGUAL         reduce using rule 192 (exp -> ID attributes .)
    OR              reduce using rule 192 (exp -> ID attributes .)
    AND             reduce using rule 192 (exp -> ID attributes .)
    DOSP            reduce using rule 192 (exp -> ID attributes .)
    PRINT           reduce using rule 192 (exp -> ID attributes .)
    PRINTLN         reduce using rule 192 (exp -> ID attributes .)
    ID              reduce using rule 192 (exp -> ID attributes .)
    GLOBAL          reduce using rule 192 (exp -> ID attributes .)
    RETURN          reduce using rule 192 (exp -> ID attributes .)
    MIENTRAS        reduce using rule 192 (exp -> ID attributes .)
    FOR             reduce using rule 192 (exp -> ID attributes .)
    IF              reduce using rule 192 (exp -> ID attributes .)
    PARSE           reduce using rule 192 (exp -> ID attributes .)
    TRUNC           reduce using rule 192 (exp -> ID attributes .)
    FLOAT           reduce using rule 192 (exp -> ID attributes .)
    STRINGNATIVE    reduce using rule 192 (exp -> ID attributes .)
    TYPEOF          reduce using rule 192 (exp -> ID attributes .)
    PUSH            reduce using rule 192 (exp -> ID attributes .)
    POP             reduce using rule 192 (exp -> ID attributes .)
    LENGTH          reduce using rule 192 (exp -> ID attributes .)
    BREAK           reduce using rule 192 (exp -> ID attributes .)
    CONTINUE        reduce using rule 192 (exp -> ID attributes .)
    MUTABLE         reduce using rule 192 (exp -> ID attributes .)
    STRUCT          reduce using rule 192 (exp -> ID attributes .)
    END             reduce using rule 192 (exp -> ID attributes .)
    ELSEIF          reduce using rule 192 (exp -> ID attributes .)
    ELSE            reduce using rule 192 (exp -> ID attributes .)
    PARENTESISC     reduce using rule 192 (exp -> ID attributes .)
    COMA            reduce using rule 192 (exp -> ID attributes .)
    PCOMA           reduce using rule 192 (exp -> ID attributes .)
    CORCHETEC       reduce using rule 192 (exp -> ID attributes .)
    PUNTO           shift and go to state 125


state 173

    (210) exp -> ID PARENTESISA . parametersCall PARENTESISC
    (211) exp -> ID PARENTESISA . PARENTESISC
    (73) parametersCall -> . parametersCall COMA exp
    (74) parametersCall -> . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    PARENTESISC     shift and go to state 277
    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    parametersCall                 shift and go to state 276
    exp                            shift and go to state 121
    array                          shift and go to state 83

state 174

    (223) exp -> ID listArray .
    (227) listArray -> listArray . CORCHETEA exp CORCHETEC

    MAS             reduce using rule 223 (exp -> ID listArray .)
    MENOS           reduce using rule 223 (exp -> ID listArray .)
    POR             reduce using rule 223 (exp -> ID listArray .)
    DIVIDIDO        reduce using rule 223 (exp -> ID listArray .)
    POTENCIA        reduce using rule 223 (exp -> ID listArray .)
    PORCENTAJE      reduce using rule 223 (exp -> ID listArray .)
    MAYOR           reduce using rule 223 (exp -> ID listArray .)
    MENOR           reduce using rule 223 (exp -> ID listArray .)
    MAYORIGUAL      reduce using rule 223 (exp -> ID listArray .)
    MENORIGUAL      reduce using rule 223 (exp -> ID listArray .)
    DOBLEIGUAL      reduce using rule 223 (exp -> ID listArray .)
    NOIGUAL         reduce using rule 223 (exp -> ID listArray .)
    OR              reduce using rule 223 (exp -> ID listArray .)
    AND             reduce using rule 223 (exp -> ID listArray .)
    DOSP            reduce using rule 223 (exp -> ID listArray .)
    PRINT           reduce using rule 223 (exp -> ID listArray .)
    PRINTLN         reduce using rule 223 (exp -> ID listArray .)
    ID              reduce using rule 223 (exp -> ID listArray .)
    GLOBAL          reduce using rule 223 (exp -> ID listArray .)
    RETURN          reduce using rule 223 (exp -> ID listArray .)
    MIENTRAS        reduce using rule 223 (exp -> ID listArray .)
    FOR             reduce using rule 223 (exp -> ID listArray .)
    IF              reduce using rule 223 (exp -> ID listArray .)
    PARSE           reduce using rule 223 (exp -> ID listArray .)
    TRUNC           reduce using rule 223 (exp -> ID listArray .)
    FLOAT           reduce using rule 223 (exp -> ID listArray .)
    STRINGNATIVE    reduce using rule 223 (exp -> ID listArray .)
    TYPEOF          reduce using rule 223 (exp -> ID listArray .)
    PUSH            reduce using rule 223 (exp -> ID listArray .)
    POP             reduce using rule 223 (exp -> ID listArray .)
    LENGTH          reduce using rule 223 (exp -> ID listArray .)
    BREAK           reduce using rule 223 (exp -> ID listArray .)
    CONTINUE        reduce using rule 223 (exp -> ID listArray .)
    MUTABLE         reduce using rule 223 (exp -> ID listArray .)
    STRUCT          reduce using rule 223 (exp -> ID listArray .)
    END             reduce using rule 223 (exp -> ID listArray .)
    ELSEIF          reduce using rule 223 (exp -> ID listArray .)
    ELSE            reduce using rule 223 (exp -> ID listArray .)
    PARENTESISC     reduce using rule 223 (exp -> ID listArray .)
    COMA            reduce using rule 223 (exp -> ID listArray .)
    PCOMA           reduce using rule 223 (exp -> ID listArray .)
    CORCHETEC       reduce using rule 223 (exp -> ID listArray .)
    CORCHETEA       shift and go to state 278


state 175

    (228) listArray -> CORCHETEA . exp CORCHETEC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 279
    array                          shift and go to state 83

state 176

    (195) exp -> PUSH NOT . PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> PUSH NOT . PARENTESISA ID COMA parametersCall PARENTESISC

    PARENTESISA     shift and go to state 280


state 177

    (213) exp -> NOT exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    DOSP            reduce using rule 213 (exp -> NOT exp .)
    PRINT           reduce using rule 213 (exp -> NOT exp .)
    PRINTLN         reduce using rule 213 (exp -> NOT exp .)
    ID              reduce using rule 213 (exp -> NOT exp .)
    GLOBAL          reduce using rule 213 (exp -> NOT exp .)
    RETURN          reduce using rule 213 (exp -> NOT exp .)
    MIENTRAS        reduce using rule 213 (exp -> NOT exp .)
    FOR             reduce using rule 213 (exp -> NOT exp .)
    IF              reduce using rule 213 (exp -> NOT exp .)
    PARSE           reduce using rule 213 (exp -> NOT exp .)
    TRUNC           reduce using rule 213 (exp -> NOT exp .)
    FLOAT           reduce using rule 213 (exp -> NOT exp .)
    STRINGNATIVE    reduce using rule 213 (exp -> NOT exp .)
    TYPEOF          reduce using rule 213 (exp -> NOT exp .)
    PUSH            reduce using rule 213 (exp -> NOT exp .)
    POP             reduce using rule 213 (exp -> NOT exp .)
    LENGTH          reduce using rule 213 (exp -> NOT exp .)
    BREAK           reduce using rule 213 (exp -> NOT exp .)
    CONTINUE        reduce using rule 213 (exp -> NOT exp .)
    MUTABLE         reduce using rule 213 (exp -> NOT exp .)
    STRUCT          reduce using rule 213 (exp -> NOT exp .)
    END             reduce using rule 213 (exp -> NOT exp .)
    ELSEIF          reduce using rule 213 (exp -> NOT exp .)
    ELSE            reduce using rule 213 (exp -> NOT exp .)
    PARENTESISC     reduce using rule 213 (exp -> NOT exp .)
    COMA            reduce using rule 213 (exp -> NOT exp .)
    PCOMA           reduce using rule 213 (exp -> NOT exp .)
    CORCHETEC       reduce using rule 213 (exp -> NOT exp .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144

  ! MAS             [ reduce using rule 213 (exp -> NOT exp .) ]
  ! MENOS           [ reduce using rule 213 (exp -> NOT exp .) ]
  ! POR             [ reduce using rule 213 (exp -> NOT exp .) ]
  ! DIVIDIDO        [ reduce using rule 213 (exp -> NOT exp .) ]
  ! POTENCIA        [ reduce using rule 213 (exp -> NOT exp .) ]
  ! PORCENTAJE      [ reduce using rule 213 (exp -> NOT exp .) ]
  ! MAYOR           [ reduce using rule 213 (exp -> NOT exp .) ]
  ! MENOR           [ reduce using rule 213 (exp -> NOT exp .) ]
  ! MAYORIGUAL      [ reduce using rule 213 (exp -> NOT exp .) ]
  ! MENORIGUAL      [ reduce using rule 213 (exp -> NOT exp .) ]
  ! DOBLEIGUAL      [ reduce using rule 213 (exp -> NOT exp .) ]
  ! NOIGUAL         [ reduce using rule 213 (exp -> NOT exp .) ]
  ! OR              [ reduce using rule 213 (exp -> NOT exp .) ]
  ! AND             [ reduce using rule 213 (exp -> NOT exp .) ]
  ! DOSP            [ shift and go to state 145 ]


state 178

    (214) exp -> PARENTESISA exp . PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 281
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 179

    (197) exp -> POP NOT . PARENTESISA exp PARENTESISC
    (198) exp -> POP NOT . PARENTESISA ID PARENTESISC

    PARENTESISA     shift and go to state 282


state 180

    (199) exp -> LENGTH PARENTESISA . exp PARENTESISC
    (200) exp -> LENGTH PARENTESISA . ID PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 284
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 283
    array                          shift and go to state 83

state 181

    (201) exp -> PARSE PARENTESISA . type COMA exp PARENTESISC
    (237) type -> . INT64
    (238) type -> . FLOAT64
    (239) type -> . STRING
    (240) type -> . CHAR
    (241) type -> . BOOL
    (242) type -> . NULO

    INT64           shift and go to state 198
    FLOAT64         shift and go to state 199
    STRING          shift and go to state 200
    CHAR            shift and go to state 201
    BOOL            shift and go to state 202
    NULO            shift and go to state 203

    type                           shift and go to state 285

state 182

    (202) exp -> TRUNC PARENTESISA . type COMA exp PARENTESISC
    (203) exp -> TRUNC PARENTESISA . exp PARENTESISC
    (237) type -> . INT64
    (238) type -> . FLOAT64
    (239) type -> . STRING
    (240) type -> . CHAR
    (241) type -> . BOOL
    (242) type -> . NULO
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    INT64           shift and go to state 198
    FLOAT64         shift and go to state 199
    STRING          shift and go to state 200
    CHAR            shift and go to state 201
    BOOL            shift and go to state 202
    NULO            shift and go to state 206
    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    type                           shift and go to state 286
    exp                            shift and go to state 287
    array                          shift and go to state 83

state 183

    (204) exp -> FLOAT PARENTESISA . exp PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 288
    array                          shift and go to state 83

state 184

    (205) exp -> STRINGNATIVE PARENTESISA . exp PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 289
    array                          shift and go to state 83

state 185

    (206) exp -> TYPEOF PARENTESISA . exp PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 290
    array                          shift and go to state 83

state 186

    (229) exp -> UPPERCASE PARENTESISA . exp PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 291
    array                          shift and go to state 83

state 187

    (230) exp -> LOWERCASE PARENTESISA . exp PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 292
    array                          shift and go to state 83

state 188

    (231) exp -> LOGARITMOB10 PARENTESISA . exp PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 293
    array                          shift and go to state 83

state 189

    (232) exp -> LOGARITMONOB10 PARENTESISA . exp COMA exp PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 294
    array                          shift and go to state 83

state 190

    (233) exp -> SIN PARENTESISA . exp PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 295
    array                          shift and go to state 83

state 191

    (234) exp -> COS PARENTESISA . exp PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 296
    array                          shift and go to state 83

state 192

    (235) exp -> TAN PARENTESISA . exp PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 297
    array                          shift and go to state 83

state 193

    (236) exp -> SQRT PARENTESISA . exp PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 298
    array                          shift and go to state 83

state 194

    (208) array -> CORCHETEA parametersCall . CORCHETEC
    (73) parametersCall -> parametersCall . COMA exp

    CORCHETEC       shift and go to state 299
    COMA            shift and go to state 219


state 195

    (70) forLoop -> FOR ID IN . exp block_loops END PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 300
    array                          shift and go to state 83

state 196

    (62) IfCondition -> IF exp block_loops . elseIfSt elseSt END PCOMA
    (124) block_loops -> block_loops . Print
    (125) block_loops -> block_loops . Println
    (126) block_loops -> block_loops . Asignacion
    (127) block_loops -> block_loops . retorno
    (128) block_loops -> block_loops . functionCall
    (129) block_loops -> block_loops . forLoop
    (130) block_loops -> block_loops . whileLoop
    (131) block_loops -> block_loops . IfCondition
    (132) block_loops -> block_loops . parseNative
    (133) block_loops -> block_loops . truncNative
    (134) block_loops -> block_loops . floatNative
    (135) block_loops -> block_loops . stringNative
    (136) block_loops -> block_loops . typeOfNative
    (137) block_loops -> block_loops . pushArray
    (138) block_loops -> block_loops . popArray
    (139) block_loops -> block_loops . lengthArray
    (140) block_loops -> block_loops . assignmentArray
    (141) block_loops -> block_loops . Break
    (142) block_loops -> block_loops . Continue
    (143) block_loops -> block_loops . Struct
    (144) block_loops -> block_loops . structAccess
    (63) elseIfSt -> . elseIfSt ELSEIF exp block_loops
    (64) elseIfSt -> . ELSEIF exp block_loops
    (65) elseIfSt -> . empty
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (167) retorno -> . RETURN exp PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (122) Break -> . BREAK PCOMA
    (123) Continue -> . CONTINUE PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA
    (68) empty -> .

  ! shift/reduce conflict for ELSEIF resolved as shift
    ELSEIF          shift and go to state 302
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    RETURN          shift and go to state 168
    FOR             shift and go to state 29
    MIENTRAS        shift and go to state 28
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    BREAK           shift and go to state 169
    CONTINUE        shift and go to state 170
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40
    ELSE            reduce using rule 68 (empty -> .)
    END             reduce using rule 68 (empty -> .)

  ! ELSEIF          [ reduce using rule 68 (empty -> .) ]

    elseIfSt                       shift and go to state 301
    Print                          shift and go to state 237
    Println                        shift and go to state 238
    Asignacion                     shift and go to state 239
    retorno                        shift and go to state 240
    functionCall                   shift and go to state 241
    forLoop                        shift and go to state 242
    whileLoop                      shift and go to state 243
    IfCondition                    shift and go to state 244
    parseNative                    shift and go to state 245
    truncNative                    shift and go to state 246
    floatNative                    shift and go to state 247
    stringNative                   shift and go to state 248
    typeOfNative                   shift and go to state 249
    pushArray                      shift and go to state 250
    popArray                       shift and go to state 251
    lengthArray                    shift and go to state 252
    assignmentArray                shift and go to state 253
    Break                          shift and go to state 254
    Continue                       shift and go to state 255
    Struct                         shift and go to state 256
    structAccess                   shift and go to state 257
    empty                          shift and go to state 303

state 197

    (56) parseNative -> PARSE PARENTESISA type . COMA exp PARENTESISC PCOMA

    COMA            shift and go to state 304


state 198

    (237) type -> INT64 .

    COMA            reduce using rule 237 (type -> INT64 .)
    PCOMA           reduce using rule 237 (type -> INT64 .)
    PARENTESISC     reduce using rule 237 (type -> INT64 .)


state 199

    (238) type -> FLOAT64 .

    COMA            reduce using rule 238 (type -> FLOAT64 .)
    PCOMA           reduce using rule 238 (type -> FLOAT64 .)
    PARENTESISC     reduce using rule 238 (type -> FLOAT64 .)


state 200

    (239) type -> STRING .

    COMA            reduce using rule 239 (type -> STRING .)
    PCOMA           reduce using rule 239 (type -> STRING .)
    PARENTESISC     reduce using rule 239 (type -> STRING .)


state 201

    (240) type -> CHAR .

    COMA            reduce using rule 240 (type -> CHAR .)
    PCOMA           reduce using rule 240 (type -> CHAR .)
    PARENTESISC     reduce using rule 240 (type -> CHAR .)


state 202

    (241) type -> BOOL .

    COMA            reduce using rule 241 (type -> BOOL .)
    PCOMA           reduce using rule 241 (type -> BOOL .)
    PARENTESISC     reduce using rule 241 (type -> BOOL .)


state 203

    (242) type -> NULO .

    COMA            reduce using rule 242 (type -> NULO .)
    PCOMA           reduce using rule 242 (type -> NULO .)
    PARENTESISC     reduce using rule 242 (type -> NULO .)


state 204

    (57) truncNative -> TRUNC PARENTESISA type . COMA exp PARENTESISC PCOMA

    COMA            shift and go to state 305


state 205

    (58) truncNative -> TRUNC PARENTESISA exp . PARENTESISC PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 306
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 206

    (242) type -> NULO .
    (221) exp -> NULO .

    COMA            reduce using rule 242 (type -> NULO .)
    PARENTESISC     reduce using rule 221 (exp -> NULO .)
    MAS             reduce using rule 221 (exp -> NULO .)
    MENOS           reduce using rule 221 (exp -> NULO .)
    POR             reduce using rule 221 (exp -> NULO .)
    DIVIDIDO        reduce using rule 221 (exp -> NULO .)
    POTENCIA        reduce using rule 221 (exp -> NULO .)
    PORCENTAJE      reduce using rule 221 (exp -> NULO .)
    MAYOR           reduce using rule 221 (exp -> NULO .)
    MENOR           reduce using rule 221 (exp -> NULO .)
    MAYORIGUAL      reduce using rule 221 (exp -> NULO .)
    MENORIGUAL      reduce using rule 221 (exp -> NULO .)
    DOBLEIGUAL      reduce using rule 221 (exp -> NULO .)
    NOIGUAL         reduce using rule 221 (exp -> NULO .)
    OR              reduce using rule 221 (exp -> NULO .)
    AND             reduce using rule 221 (exp -> NULO .)
    DOSP            reduce using rule 221 (exp -> NULO .)


state 207

    (59) floatNative -> FLOAT PARENTESISA exp . PARENTESISC PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 307
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 208

    (60) stringNative -> STRINGNATIVE PARENTESISA exp . PARENTESISC PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 308
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 209

    (61) typeOfNative -> TYPEOF PARENTESISA exp . PARENTESISC PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 309
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 210

    (50) pushArray -> PUSH NOT PARENTESISA . exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> PUSH NOT PARENTESISA . ID COMA parametersCall PARENTESISC PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 311
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 310
    array                          shift and go to state 83

state 211

    (52) popArray -> POP NOT PARENTESISA . exp PARENTESISC PCOMA
    (53) popArray -> POP NOT PARENTESISA . ID PARENTESISC PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 313
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 312
    array                          shift and go to state 83

state 212

    (54) lengthArray -> LENGTH PARENTESISA exp . PARENTESISC PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 314
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 213

    (55) lengthArray -> LENGTH PARENTESISA ID . PARENTESISC PCOMA
    (192) exp -> ID . attributes
    (210) exp -> ID . PARENTESISA parametersCall PARENTESISC
    (211) exp -> ID . PARENTESISA PARENTESISC
    (222) exp -> ID .
    (223) exp -> ID . listArray
    (193) attributes -> . attributes PUNTO ID
    (194) attributes -> . PUNTO ID
    (227) listArray -> . listArray CORCHETEA exp CORCHETEC
    (228) listArray -> . CORCHETEA exp CORCHETEC

  ! shift/reduce conflict for PARENTESISC resolved as shift
    PARENTESISC     shift and go to state 315
    PARENTESISA     shift and go to state 173
    MAS             reduce using rule 222 (exp -> ID .)
    MENOS           reduce using rule 222 (exp -> ID .)
    POR             reduce using rule 222 (exp -> ID .)
    DIVIDIDO        reduce using rule 222 (exp -> ID .)
    POTENCIA        reduce using rule 222 (exp -> ID .)
    PORCENTAJE      reduce using rule 222 (exp -> ID .)
    MAYOR           reduce using rule 222 (exp -> ID .)
    MENOR           reduce using rule 222 (exp -> ID .)
    MAYORIGUAL      reduce using rule 222 (exp -> ID .)
    MENORIGUAL      reduce using rule 222 (exp -> ID .)
    DOBLEIGUAL      reduce using rule 222 (exp -> ID .)
    NOIGUAL         reduce using rule 222 (exp -> ID .)
    OR              reduce using rule 222 (exp -> ID .)
    AND             reduce using rule 222 (exp -> ID .)
    DOSP            reduce using rule 222 (exp -> ID .)
    PUNTO           shift and go to state 68
    CORCHETEA       shift and go to state 175

  ! PARENTESISC     [ reduce using rule 222 (exp -> ID .) ]

    attributes                     shift and go to state 172
    listArray                      shift and go to state 174

state 214

    (41) Struct -> MUTABLE STRUCT ID . bodyStruct END PCOMA
    (43) bodyStruct -> . bodyStruct ID DOSP DOSP type PCOMA
    (44) bodyStruct -> . bodyStruct ID PCOMA
    (45) bodyStruct -> . ID DOSP DOSP type PCOMA
    (46) bodyStruct -> . ID PCOMA
    (47) bodyStruct -> . bodyStruct ID DOSP DOSP ID PCOMA
    (48) bodyStruct -> . ID DOSP DOSP ID PCOMA

    ID              shift and go to state 215

    bodyStruct                     shift and go to state 316

state 215

    (45) bodyStruct -> ID . DOSP DOSP type PCOMA
    (46) bodyStruct -> ID . PCOMA
    (48) bodyStruct -> ID . DOSP DOSP ID PCOMA

    DOSP            shift and go to state 317
    PCOMA           shift and go to state 318


state 216

    (42) Struct -> STRUCT ID bodyStruct . END PCOMA
    (43) bodyStruct -> bodyStruct . ID DOSP DOSP type PCOMA
    (44) bodyStruct -> bodyStruct . ID PCOMA
    (47) bodyStruct -> bodyStruct . ID DOSP DOSP ID PCOMA

    END             shift and go to state 320
    ID              shift and go to state 319


state 217

    (168) Print -> PRINT PARENTESISA exp PARENTESISC . PCOMA

    PCOMA           shift and go to state 321


state 218

    (169) Print -> PRINT PARENTESISA parametersCall PARENTESISC . PCOMA

    PCOMA           shift and go to state 322


state 219

    (73) parametersCall -> parametersCall COMA . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 323
    array                          shift and go to state 83

state 220

    (170) Println -> PRINTLN PARENTESISA exp PARENTESISC . PCOMA

    PCOMA           shift and go to state 324


state 221

    (171) Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .

    PRINT           reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    ID              reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    FOR             reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    IF              reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    PARSE           reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    TRUNC           reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    FLOAT           reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    PUSH            reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    POP             reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    LENGTH          reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    STRUCT          reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    $end            reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    END             reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    RETURN          reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    BREAK           reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)
    ELSE            reduce using rule 171 (Println -> PRINTLN PARENTESISA PARENTESISC PCOMA .)


state 222

    (172) Println -> PRINTLN PARENTESISA parametersCall PARENTESISC . PCOMA

    PCOMA           shift and go to state 325


state 223

    (80) parameters -> ID .
    (81) parameters -> ID . DOSP DOSP type
    (82) parameters -> ID . DOSP DOSP ID

    PARENTESISC     reduce using rule 80 (parameters -> ID .)
    COMA            reduce using rule 80 (parameters -> ID .)
    DOSP            shift and go to state 326


state 224

    (75) create_function -> FUNCTION ID PARENTESISA parameters . PARENTESISC block_function END PCOMA
    (77) parameters -> parameters . COMA ID
    (78) parameters -> parameters . COMA ID DOSP DOSP type
    (79) parameters -> parameters . COMA ID DOSP DOSP ID

    PARENTESISC     shift and go to state 327
    COMA            shift and go to state 328


state 225

    (76) create_function -> FUNCTION ID PARENTESISA PARENTESISC . block_function END PCOMA
    (83) block_function -> . block_function Print
    (84) block_function -> . block_function Println
    (85) block_function -> . block_function Asignacion
    (86) block_function -> . block_function retorno
    (87) block_function -> . block_function functionCall
    (88) block_function -> . block_function whileLoop
    (89) block_function -> . block_function forLoop
    (90) block_function -> . block_function IfCondition
    (91) block_function -> . block_function parseNative
    (92) block_function -> . block_function truncNative
    (93) block_function -> . block_function floatNative
    (94) block_function -> . block_function stringNative
    (95) block_function -> . block_function typeOfNative
    (96) block_function -> . block_function pushArray
    (97) block_function -> . block_function popArray
    (98) block_function -> . block_function lengthArray
    (99) block_function -> . block_function assignmentArray
    (100) block_function -> . block_function Struct
    (101) block_function -> . block_function structAccess
    (102) block_function -> . Print
    (103) block_function -> . Println
    (104) block_function -> . Asignacion
    (105) block_function -> . retorno
    (106) block_function -> . functionCall
    (107) block_function -> . whileLoop
    (108) block_function -> . forLoop
    (109) block_function -> . IfCondition
    (110) block_function -> . parseNative
    (111) block_function -> . truncNative
    (112) block_function -> . floatNative
    (113) block_function -> . stringNative
    (114) block_function -> . typeOfNative
    (115) block_function -> . pushArray
    (116) block_function -> . popArray
    (117) block_function -> . lengthArray
    (118) block_function -> . assignmentArray
    (119) block_function -> . Struct
    (120) block_function -> . structAccess
    (121) block_function -> . empty
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (167) retorno -> . RETURN exp PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA
    (68) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for GLOBAL resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARSE resolved as shift
  ! shift/reduce conflict for TRUNC resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRINGNATIVE resolved as shift
  ! shift/reduce conflict for TYPEOF resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for LENGTH resolved as shift
  ! shift/reduce conflict for MUTABLE resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    RETURN          shift and go to state 168
    MIENTRAS        shift and go to state 28
    FOR             shift and go to state 29
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40
    END             reduce using rule 68 (empty -> .)

  ! PRINT           [ reduce using rule 68 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 68 (empty -> .) ]
  ! ID              [ reduce using rule 68 (empty -> .) ]
  ! GLOBAL          [ reduce using rule 68 (empty -> .) ]
  ! RETURN          [ reduce using rule 68 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 68 (empty -> .) ]
  ! FOR             [ reduce using rule 68 (empty -> .) ]
  ! IF              [ reduce using rule 68 (empty -> .) ]
  ! PARSE           [ reduce using rule 68 (empty -> .) ]
  ! TRUNC           [ reduce using rule 68 (empty -> .) ]
  ! FLOAT           [ reduce using rule 68 (empty -> .) ]
  ! STRINGNATIVE    [ reduce using rule 68 (empty -> .) ]
  ! TYPEOF          [ reduce using rule 68 (empty -> .) ]
  ! PUSH            [ reduce using rule 68 (empty -> .) ]
  ! POP             [ reduce using rule 68 (empty -> .) ]
  ! LENGTH          [ reduce using rule 68 (empty -> .) ]
  ! MUTABLE         [ reduce using rule 68 (empty -> .) ]
  ! STRUCT          [ reduce using rule 68 (empty -> .) ]

    block_function                 shift and go to state 329
    Print                          shift and go to state 330
    Println                        shift and go to state 331
    Asignacion                     shift and go to state 332
    retorno                        shift and go to state 333
    functionCall                   shift and go to state 334
    whileLoop                      shift and go to state 335
    forLoop                        shift and go to state 336
    IfCondition                    shift and go to state 337
    parseNative                    shift and go to state 338
    truncNative                    shift and go to state 339
    floatNative                    shift and go to state 340
    stringNative                   shift and go to state 341
    typeOfNative                   shift and go to state 342
    pushArray                      shift and go to state 343
    popArray                       shift and go to state 344
    lengthArray                    shift and go to state 345
    assignmentArray                shift and go to state 346
    Struct                         shift and go to state 347
    structAccess                   shift and go to state 348
    empty                          shift and go to state 349

state 226

    (173) Asignacion -> ID IGUAL exp PCOMA .

    PRINT           reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    PRINTLN         reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    ID              reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    GLOBAL          reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    FUNCTION        reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    MIENTRAS        reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    FOR             reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    IF              reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    PARSE           reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    TRUNC           reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    FLOAT           reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    STRINGNATIVE    reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    TYPEOF          reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    PUSH            reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    POP             reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    LENGTH          reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    MUTABLE         reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    STRUCT          reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    $end            reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    END             reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    RETURN          reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    BREAK           reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    CONTINUE        reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    ELSEIF          reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)
    ELSE            reduce using rule 173 (Asignacion -> ID IGUAL exp PCOMA .)


state 227

    (174) Asignacion -> ID IGUAL exp DOSP . DOSP type PCOMA
    (175) Asignacion -> ID IGUAL exp DOSP . DOSP ID PCOMA
    (209) exp -> exp DOSP . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    DOSP            shift and go to state 350
    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 272
    array                          shift and go to state 83

state 228

    (71) functionCall -> ID PARENTESISA parametersCall PARENTESISC . PCOMA

    PCOMA           shift and go to state 351


state 229

    (72) functionCall -> ID PARENTESISA PARENTESISC PCOMA .

    PRINT           reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    ID              reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    FOR             reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    IF              reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    PARSE           reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    TRUNC           reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    FLOAT           reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    PUSH            reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    POP             reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    LENGTH          reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    STRUCT          reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    $end            reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    END             reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    RETURN          reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    BREAK           reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)
    ELSE            reduce using rule 72 (functionCall -> ID PARENTESISA PARENTESISC PCOMA .)


state 230

    (224) assignmentArray -> ID listArrayRef IGUAL exp . PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PCOMA           shift and go to state 352
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 231

    (225) listArrayRef -> listArrayRef CORCHETEA exp . CORCHETEC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    CORCHETEC       shift and go to state 353
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 232

    (49) structAccess -> ID attributes IGUAL exp . PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PCOMA           shift and go to state 354
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 233

    (193) attributes -> attributes PUNTO ID .

    IGUAL           reduce using rule 193 (attributes -> attributes PUNTO ID .)
    PUNTO           reduce using rule 193 (attributes -> attributes PUNTO ID .)
    MAS             reduce using rule 193 (attributes -> attributes PUNTO ID .)
    MENOS           reduce using rule 193 (attributes -> attributes PUNTO ID .)
    POR             reduce using rule 193 (attributes -> attributes PUNTO ID .)
    DIVIDIDO        reduce using rule 193 (attributes -> attributes PUNTO ID .)
    POTENCIA        reduce using rule 193 (attributes -> attributes PUNTO ID .)
    PORCENTAJE      reduce using rule 193 (attributes -> attributes PUNTO ID .)
    MAYOR           reduce using rule 193 (attributes -> attributes PUNTO ID .)
    MENOR           reduce using rule 193 (attributes -> attributes PUNTO ID .)
    MAYORIGUAL      reduce using rule 193 (attributes -> attributes PUNTO ID .)
    MENORIGUAL      reduce using rule 193 (attributes -> attributes PUNTO ID .)
    DOBLEIGUAL      reduce using rule 193 (attributes -> attributes PUNTO ID .)
    NOIGUAL         reduce using rule 193 (attributes -> attributes PUNTO ID .)
    OR              reduce using rule 193 (attributes -> attributes PUNTO ID .)
    AND             reduce using rule 193 (attributes -> attributes PUNTO ID .)
    DOSP            reduce using rule 193 (attributes -> attributes PUNTO ID .)
    PRINT           reduce using rule 193 (attributes -> attributes PUNTO ID .)
    PRINTLN         reduce using rule 193 (attributes -> attributes PUNTO ID .)
    ID              reduce using rule 193 (attributes -> attributes PUNTO ID .)
    GLOBAL          reduce using rule 193 (attributes -> attributes PUNTO ID .)
    RETURN          reduce using rule 193 (attributes -> attributes PUNTO ID .)
    MIENTRAS        reduce using rule 193 (attributes -> attributes PUNTO ID .)
    FOR             reduce using rule 193 (attributes -> attributes PUNTO ID .)
    IF              reduce using rule 193 (attributes -> attributes PUNTO ID .)
    PARSE           reduce using rule 193 (attributes -> attributes PUNTO ID .)
    TRUNC           reduce using rule 193 (attributes -> attributes PUNTO ID .)
    FLOAT           reduce using rule 193 (attributes -> attributes PUNTO ID .)
    STRINGNATIVE    reduce using rule 193 (attributes -> attributes PUNTO ID .)
    TYPEOF          reduce using rule 193 (attributes -> attributes PUNTO ID .)
    PUSH            reduce using rule 193 (attributes -> attributes PUNTO ID .)
    POP             reduce using rule 193 (attributes -> attributes PUNTO ID .)
    LENGTH          reduce using rule 193 (attributes -> attributes PUNTO ID .)
    BREAK           reduce using rule 193 (attributes -> attributes PUNTO ID .)
    CONTINUE        reduce using rule 193 (attributes -> attributes PUNTO ID .)
    MUTABLE         reduce using rule 193 (attributes -> attributes PUNTO ID .)
    STRUCT          reduce using rule 193 (attributes -> attributes PUNTO ID .)
    END             reduce using rule 193 (attributes -> attributes PUNTO ID .)
    ELSEIF          reduce using rule 193 (attributes -> attributes PUNTO ID .)
    ELSE            reduce using rule 193 (attributes -> attributes PUNTO ID .)
    PARENTESISC     reduce using rule 193 (attributes -> attributes PUNTO ID .)
    COMA            reduce using rule 193 (attributes -> attributes PUNTO ID .)
    PCOMA           reduce using rule 193 (attributes -> attributes PUNTO ID .)
    CORCHETEC       reduce using rule 193 (attributes -> attributes PUNTO ID .)


state 234

    (226) listArrayRef -> CORCHETEA exp CORCHETEC .

    IGUAL           reduce using rule 226 (listArrayRef -> CORCHETEA exp CORCHETEC .)
    CORCHETEA       reduce using rule 226 (listArrayRef -> CORCHETEA exp CORCHETEC .)


state 235

    (176) Asignacion -> GLOBAL ID IGUAL exp . PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PCOMA           shift and go to state 355
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 236

    (69) whileLoop -> MIENTRAS exp block_loops END . PCOMA

    PCOMA           shift and go to state 356


state 237

    (124) block_loops -> block_loops Print .

    END             reduce using rule 124 (block_loops -> block_loops Print .)
    PRINT           reduce using rule 124 (block_loops -> block_loops Print .)
    PRINTLN         reduce using rule 124 (block_loops -> block_loops Print .)
    ID              reduce using rule 124 (block_loops -> block_loops Print .)
    GLOBAL          reduce using rule 124 (block_loops -> block_loops Print .)
    RETURN          reduce using rule 124 (block_loops -> block_loops Print .)
    FOR             reduce using rule 124 (block_loops -> block_loops Print .)
    MIENTRAS        reduce using rule 124 (block_loops -> block_loops Print .)
    IF              reduce using rule 124 (block_loops -> block_loops Print .)
    PARSE           reduce using rule 124 (block_loops -> block_loops Print .)
    TRUNC           reduce using rule 124 (block_loops -> block_loops Print .)
    FLOAT           reduce using rule 124 (block_loops -> block_loops Print .)
    STRINGNATIVE    reduce using rule 124 (block_loops -> block_loops Print .)
    TYPEOF          reduce using rule 124 (block_loops -> block_loops Print .)
    PUSH            reduce using rule 124 (block_loops -> block_loops Print .)
    POP             reduce using rule 124 (block_loops -> block_loops Print .)
    LENGTH          reduce using rule 124 (block_loops -> block_loops Print .)
    BREAK           reduce using rule 124 (block_loops -> block_loops Print .)
    CONTINUE        reduce using rule 124 (block_loops -> block_loops Print .)
    MUTABLE         reduce using rule 124 (block_loops -> block_loops Print .)
    STRUCT          reduce using rule 124 (block_loops -> block_loops Print .)
    ELSEIF          reduce using rule 124 (block_loops -> block_loops Print .)
    ELSE            reduce using rule 124 (block_loops -> block_loops Print .)


state 238

    (125) block_loops -> block_loops Println .

    END             reduce using rule 125 (block_loops -> block_loops Println .)
    PRINT           reduce using rule 125 (block_loops -> block_loops Println .)
    PRINTLN         reduce using rule 125 (block_loops -> block_loops Println .)
    ID              reduce using rule 125 (block_loops -> block_loops Println .)
    GLOBAL          reduce using rule 125 (block_loops -> block_loops Println .)
    RETURN          reduce using rule 125 (block_loops -> block_loops Println .)
    FOR             reduce using rule 125 (block_loops -> block_loops Println .)
    MIENTRAS        reduce using rule 125 (block_loops -> block_loops Println .)
    IF              reduce using rule 125 (block_loops -> block_loops Println .)
    PARSE           reduce using rule 125 (block_loops -> block_loops Println .)
    TRUNC           reduce using rule 125 (block_loops -> block_loops Println .)
    FLOAT           reduce using rule 125 (block_loops -> block_loops Println .)
    STRINGNATIVE    reduce using rule 125 (block_loops -> block_loops Println .)
    TYPEOF          reduce using rule 125 (block_loops -> block_loops Println .)
    PUSH            reduce using rule 125 (block_loops -> block_loops Println .)
    POP             reduce using rule 125 (block_loops -> block_loops Println .)
    LENGTH          reduce using rule 125 (block_loops -> block_loops Println .)
    BREAK           reduce using rule 125 (block_loops -> block_loops Println .)
    CONTINUE        reduce using rule 125 (block_loops -> block_loops Println .)
    MUTABLE         reduce using rule 125 (block_loops -> block_loops Println .)
    STRUCT          reduce using rule 125 (block_loops -> block_loops Println .)
    ELSEIF          reduce using rule 125 (block_loops -> block_loops Println .)
    ELSE            reduce using rule 125 (block_loops -> block_loops Println .)


state 239

    (126) block_loops -> block_loops Asignacion .

    END             reduce using rule 126 (block_loops -> block_loops Asignacion .)
    PRINT           reduce using rule 126 (block_loops -> block_loops Asignacion .)
    PRINTLN         reduce using rule 126 (block_loops -> block_loops Asignacion .)
    ID              reduce using rule 126 (block_loops -> block_loops Asignacion .)
    GLOBAL          reduce using rule 126 (block_loops -> block_loops Asignacion .)
    RETURN          reduce using rule 126 (block_loops -> block_loops Asignacion .)
    FOR             reduce using rule 126 (block_loops -> block_loops Asignacion .)
    MIENTRAS        reduce using rule 126 (block_loops -> block_loops Asignacion .)
    IF              reduce using rule 126 (block_loops -> block_loops Asignacion .)
    PARSE           reduce using rule 126 (block_loops -> block_loops Asignacion .)
    TRUNC           reduce using rule 126 (block_loops -> block_loops Asignacion .)
    FLOAT           reduce using rule 126 (block_loops -> block_loops Asignacion .)
    STRINGNATIVE    reduce using rule 126 (block_loops -> block_loops Asignacion .)
    TYPEOF          reduce using rule 126 (block_loops -> block_loops Asignacion .)
    PUSH            reduce using rule 126 (block_loops -> block_loops Asignacion .)
    POP             reduce using rule 126 (block_loops -> block_loops Asignacion .)
    LENGTH          reduce using rule 126 (block_loops -> block_loops Asignacion .)
    BREAK           reduce using rule 126 (block_loops -> block_loops Asignacion .)
    CONTINUE        reduce using rule 126 (block_loops -> block_loops Asignacion .)
    MUTABLE         reduce using rule 126 (block_loops -> block_loops Asignacion .)
    STRUCT          reduce using rule 126 (block_loops -> block_loops Asignacion .)
    ELSEIF          reduce using rule 126 (block_loops -> block_loops Asignacion .)
    ELSE            reduce using rule 126 (block_loops -> block_loops Asignacion .)


state 240

    (127) block_loops -> block_loops retorno .

    END             reduce using rule 127 (block_loops -> block_loops retorno .)
    PRINT           reduce using rule 127 (block_loops -> block_loops retorno .)
    PRINTLN         reduce using rule 127 (block_loops -> block_loops retorno .)
    ID              reduce using rule 127 (block_loops -> block_loops retorno .)
    GLOBAL          reduce using rule 127 (block_loops -> block_loops retorno .)
    RETURN          reduce using rule 127 (block_loops -> block_loops retorno .)
    FOR             reduce using rule 127 (block_loops -> block_loops retorno .)
    MIENTRAS        reduce using rule 127 (block_loops -> block_loops retorno .)
    IF              reduce using rule 127 (block_loops -> block_loops retorno .)
    PARSE           reduce using rule 127 (block_loops -> block_loops retorno .)
    TRUNC           reduce using rule 127 (block_loops -> block_loops retorno .)
    FLOAT           reduce using rule 127 (block_loops -> block_loops retorno .)
    STRINGNATIVE    reduce using rule 127 (block_loops -> block_loops retorno .)
    TYPEOF          reduce using rule 127 (block_loops -> block_loops retorno .)
    PUSH            reduce using rule 127 (block_loops -> block_loops retorno .)
    POP             reduce using rule 127 (block_loops -> block_loops retorno .)
    LENGTH          reduce using rule 127 (block_loops -> block_loops retorno .)
    BREAK           reduce using rule 127 (block_loops -> block_loops retorno .)
    CONTINUE        reduce using rule 127 (block_loops -> block_loops retorno .)
    MUTABLE         reduce using rule 127 (block_loops -> block_loops retorno .)
    STRUCT          reduce using rule 127 (block_loops -> block_loops retorno .)
    ELSEIF          reduce using rule 127 (block_loops -> block_loops retorno .)
    ELSE            reduce using rule 127 (block_loops -> block_loops retorno .)


state 241

    (128) block_loops -> block_loops functionCall .

    END             reduce using rule 128 (block_loops -> block_loops functionCall .)
    PRINT           reduce using rule 128 (block_loops -> block_loops functionCall .)
    PRINTLN         reduce using rule 128 (block_loops -> block_loops functionCall .)
    ID              reduce using rule 128 (block_loops -> block_loops functionCall .)
    GLOBAL          reduce using rule 128 (block_loops -> block_loops functionCall .)
    RETURN          reduce using rule 128 (block_loops -> block_loops functionCall .)
    FOR             reduce using rule 128 (block_loops -> block_loops functionCall .)
    MIENTRAS        reduce using rule 128 (block_loops -> block_loops functionCall .)
    IF              reduce using rule 128 (block_loops -> block_loops functionCall .)
    PARSE           reduce using rule 128 (block_loops -> block_loops functionCall .)
    TRUNC           reduce using rule 128 (block_loops -> block_loops functionCall .)
    FLOAT           reduce using rule 128 (block_loops -> block_loops functionCall .)
    STRINGNATIVE    reduce using rule 128 (block_loops -> block_loops functionCall .)
    TYPEOF          reduce using rule 128 (block_loops -> block_loops functionCall .)
    PUSH            reduce using rule 128 (block_loops -> block_loops functionCall .)
    POP             reduce using rule 128 (block_loops -> block_loops functionCall .)
    LENGTH          reduce using rule 128 (block_loops -> block_loops functionCall .)
    BREAK           reduce using rule 128 (block_loops -> block_loops functionCall .)
    CONTINUE        reduce using rule 128 (block_loops -> block_loops functionCall .)
    MUTABLE         reduce using rule 128 (block_loops -> block_loops functionCall .)
    STRUCT          reduce using rule 128 (block_loops -> block_loops functionCall .)
    ELSEIF          reduce using rule 128 (block_loops -> block_loops functionCall .)
    ELSE            reduce using rule 128 (block_loops -> block_loops functionCall .)


state 242

    (129) block_loops -> block_loops forLoop .

    END             reduce using rule 129 (block_loops -> block_loops forLoop .)
    PRINT           reduce using rule 129 (block_loops -> block_loops forLoop .)
    PRINTLN         reduce using rule 129 (block_loops -> block_loops forLoop .)
    ID              reduce using rule 129 (block_loops -> block_loops forLoop .)
    GLOBAL          reduce using rule 129 (block_loops -> block_loops forLoop .)
    RETURN          reduce using rule 129 (block_loops -> block_loops forLoop .)
    FOR             reduce using rule 129 (block_loops -> block_loops forLoop .)
    MIENTRAS        reduce using rule 129 (block_loops -> block_loops forLoop .)
    IF              reduce using rule 129 (block_loops -> block_loops forLoop .)
    PARSE           reduce using rule 129 (block_loops -> block_loops forLoop .)
    TRUNC           reduce using rule 129 (block_loops -> block_loops forLoop .)
    FLOAT           reduce using rule 129 (block_loops -> block_loops forLoop .)
    STRINGNATIVE    reduce using rule 129 (block_loops -> block_loops forLoop .)
    TYPEOF          reduce using rule 129 (block_loops -> block_loops forLoop .)
    PUSH            reduce using rule 129 (block_loops -> block_loops forLoop .)
    POP             reduce using rule 129 (block_loops -> block_loops forLoop .)
    LENGTH          reduce using rule 129 (block_loops -> block_loops forLoop .)
    BREAK           reduce using rule 129 (block_loops -> block_loops forLoop .)
    CONTINUE        reduce using rule 129 (block_loops -> block_loops forLoop .)
    MUTABLE         reduce using rule 129 (block_loops -> block_loops forLoop .)
    STRUCT          reduce using rule 129 (block_loops -> block_loops forLoop .)
    ELSEIF          reduce using rule 129 (block_loops -> block_loops forLoop .)
    ELSE            reduce using rule 129 (block_loops -> block_loops forLoop .)


state 243

    (130) block_loops -> block_loops whileLoop .

    END             reduce using rule 130 (block_loops -> block_loops whileLoop .)
    PRINT           reduce using rule 130 (block_loops -> block_loops whileLoop .)
    PRINTLN         reduce using rule 130 (block_loops -> block_loops whileLoop .)
    ID              reduce using rule 130 (block_loops -> block_loops whileLoop .)
    GLOBAL          reduce using rule 130 (block_loops -> block_loops whileLoop .)
    RETURN          reduce using rule 130 (block_loops -> block_loops whileLoop .)
    FOR             reduce using rule 130 (block_loops -> block_loops whileLoop .)
    MIENTRAS        reduce using rule 130 (block_loops -> block_loops whileLoop .)
    IF              reduce using rule 130 (block_loops -> block_loops whileLoop .)
    PARSE           reduce using rule 130 (block_loops -> block_loops whileLoop .)
    TRUNC           reduce using rule 130 (block_loops -> block_loops whileLoop .)
    FLOAT           reduce using rule 130 (block_loops -> block_loops whileLoop .)
    STRINGNATIVE    reduce using rule 130 (block_loops -> block_loops whileLoop .)
    TYPEOF          reduce using rule 130 (block_loops -> block_loops whileLoop .)
    PUSH            reduce using rule 130 (block_loops -> block_loops whileLoop .)
    POP             reduce using rule 130 (block_loops -> block_loops whileLoop .)
    LENGTH          reduce using rule 130 (block_loops -> block_loops whileLoop .)
    BREAK           reduce using rule 130 (block_loops -> block_loops whileLoop .)
    CONTINUE        reduce using rule 130 (block_loops -> block_loops whileLoop .)
    MUTABLE         reduce using rule 130 (block_loops -> block_loops whileLoop .)
    STRUCT          reduce using rule 130 (block_loops -> block_loops whileLoop .)
    ELSEIF          reduce using rule 130 (block_loops -> block_loops whileLoop .)
    ELSE            reduce using rule 130 (block_loops -> block_loops whileLoop .)


state 244

    (131) block_loops -> block_loops IfCondition .

    END             reduce using rule 131 (block_loops -> block_loops IfCondition .)
    PRINT           reduce using rule 131 (block_loops -> block_loops IfCondition .)
    PRINTLN         reduce using rule 131 (block_loops -> block_loops IfCondition .)
    ID              reduce using rule 131 (block_loops -> block_loops IfCondition .)
    GLOBAL          reduce using rule 131 (block_loops -> block_loops IfCondition .)
    RETURN          reduce using rule 131 (block_loops -> block_loops IfCondition .)
    FOR             reduce using rule 131 (block_loops -> block_loops IfCondition .)
    MIENTRAS        reduce using rule 131 (block_loops -> block_loops IfCondition .)
    IF              reduce using rule 131 (block_loops -> block_loops IfCondition .)
    PARSE           reduce using rule 131 (block_loops -> block_loops IfCondition .)
    TRUNC           reduce using rule 131 (block_loops -> block_loops IfCondition .)
    FLOAT           reduce using rule 131 (block_loops -> block_loops IfCondition .)
    STRINGNATIVE    reduce using rule 131 (block_loops -> block_loops IfCondition .)
    TYPEOF          reduce using rule 131 (block_loops -> block_loops IfCondition .)
    PUSH            reduce using rule 131 (block_loops -> block_loops IfCondition .)
    POP             reduce using rule 131 (block_loops -> block_loops IfCondition .)
    LENGTH          reduce using rule 131 (block_loops -> block_loops IfCondition .)
    BREAK           reduce using rule 131 (block_loops -> block_loops IfCondition .)
    CONTINUE        reduce using rule 131 (block_loops -> block_loops IfCondition .)
    MUTABLE         reduce using rule 131 (block_loops -> block_loops IfCondition .)
    STRUCT          reduce using rule 131 (block_loops -> block_loops IfCondition .)
    ELSEIF          reduce using rule 131 (block_loops -> block_loops IfCondition .)
    ELSE            reduce using rule 131 (block_loops -> block_loops IfCondition .)


state 245

    (132) block_loops -> block_loops parseNative .

    END             reduce using rule 132 (block_loops -> block_loops parseNative .)
    PRINT           reduce using rule 132 (block_loops -> block_loops parseNative .)
    PRINTLN         reduce using rule 132 (block_loops -> block_loops parseNative .)
    ID              reduce using rule 132 (block_loops -> block_loops parseNative .)
    GLOBAL          reduce using rule 132 (block_loops -> block_loops parseNative .)
    RETURN          reduce using rule 132 (block_loops -> block_loops parseNative .)
    FOR             reduce using rule 132 (block_loops -> block_loops parseNative .)
    MIENTRAS        reduce using rule 132 (block_loops -> block_loops parseNative .)
    IF              reduce using rule 132 (block_loops -> block_loops parseNative .)
    PARSE           reduce using rule 132 (block_loops -> block_loops parseNative .)
    TRUNC           reduce using rule 132 (block_loops -> block_loops parseNative .)
    FLOAT           reduce using rule 132 (block_loops -> block_loops parseNative .)
    STRINGNATIVE    reduce using rule 132 (block_loops -> block_loops parseNative .)
    TYPEOF          reduce using rule 132 (block_loops -> block_loops parseNative .)
    PUSH            reduce using rule 132 (block_loops -> block_loops parseNative .)
    POP             reduce using rule 132 (block_loops -> block_loops parseNative .)
    LENGTH          reduce using rule 132 (block_loops -> block_loops parseNative .)
    BREAK           reduce using rule 132 (block_loops -> block_loops parseNative .)
    CONTINUE        reduce using rule 132 (block_loops -> block_loops parseNative .)
    MUTABLE         reduce using rule 132 (block_loops -> block_loops parseNative .)
    STRUCT          reduce using rule 132 (block_loops -> block_loops parseNative .)
    ELSEIF          reduce using rule 132 (block_loops -> block_loops parseNative .)
    ELSE            reduce using rule 132 (block_loops -> block_loops parseNative .)


state 246

    (133) block_loops -> block_loops truncNative .

    END             reduce using rule 133 (block_loops -> block_loops truncNative .)
    PRINT           reduce using rule 133 (block_loops -> block_loops truncNative .)
    PRINTLN         reduce using rule 133 (block_loops -> block_loops truncNative .)
    ID              reduce using rule 133 (block_loops -> block_loops truncNative .)
    GLOBAL          reduce using rule 133 (block_loops -> block_loops truncNative .)
    RETURN          reduce using rule 133 (block_loops -> block_loops truncNative .)
    FOR             reduce using rule 133 (block_loops -> block_loops truncNative .)
    MIENTRAS        reduce using rule 133 (block_loops -> block_loops truncNative .)
    IF              reduce using rule 133 (block_loops -> block_loops truncNative .)
    PARSE           reduce using rule 133 (block_loops -> block_loops truncNative .)
    TRUNC           reduce using rule 133 (block_loops -> block_loops truncNative .)
    FLOAT           reduce using rule 133 (block_loops -> block_loops truncNative .)
    STRINGNATIVE    reduce using rule 133 (block_loops -> block_loops truncNative .)
    TYPEOF          reduce using rule 133 (block_loops -> block_loops truncNative .)
    PUSH            reduce using rule 133 (block_loops -> block_loops truncNative .)
    POP             reduce using rule 133 (block_loops -> block_loops truncNative .)
    LENGTH          reduce using rule 133 (block_loops -> block_loops truncNative .)
    BREAK           reduce using rule 133 (block_loops -> block_loops truncNative .)
    CONTINUE        reduce using rule 133 (block_loops -> block_loops truncNative .)
    MUTABLE         reduce using rule 133 (block_loops -> block_loops truncNative .)
    STRUCT          reduce using rule 133 (block_loops -> block_loops truncNative .)
    ELSEIF          reduce using rule 133 (block_loops -> block_loops truncNative .)
    ELSE            reduce using rule 133 (block_loops -> block_loops truncNative .)


state 247

    (134) block_loops -> block_loops floatNative .

    END             reduce using rule 134 (block_loops -> block_loops floatNative .)
    PRINT           reduce using rule 134 (block_loops -> block_loops floatNative .)
    PRINTLN         reduce using rule 134 (block_loops -> block_loops floatNative .)
    ID              reduce using rule 134 (block_loops -> block_loops floatNative .)
    GLOBAL          reduce using rule 134 (block_loops -> block_loops floatNative .)
    RETURN          reduce using rule 134 (block_loops -> block_loops floatNative .)
    FOR             reduce using rule 134 (block_loops -> block_loops floatNative .)
    MIENTRAS        reduce using rule 134 (block_loops -> block_loops floatNative .)
    IF              reduce using rule 134 (block_loops -> block_loops floatNative .)
    PARSE           reduce using rule 134 (block_loops -> block_loops floatNative .)
    TRUNC           reduce using rule 134 (block_loops -> block_loops floatNative .)
    FLOAT           reduce using rule 134 (block_loops -> block_loops floatNative .)
    STRINGNATIVE    reduce using rule 134 (block_loops -> block_loops floatNative .)
    TYPEOF          reduce using rule 134 (block_loops -> block_loops floatNative .)
    PUSH            reduce using rule 134 (block_loops -> block_loops floatNative .)
    POP             reduce using rule 134 (block_loops -> block_loops floatNative .)
    LENGTH          reduce using rule 134 (block_loops -> block_loops floatNative .)
    BREAK           reduce using rule 134 (block_loops -> block_loops floatNative .)
    CONTINUE        reduce using rule 134 (block_loops -> block_loops floatNative .)
    MUTABLE         reduce using rule 134 (block_loops -> block_loops floatNative .)
    STRUCT          reduce using rule 134 (block_loops -> block_loops floatNative .)
    ELSEIF          reduce using rule 134 (block_loops -> block_loops floatNative .)
    ELSE            reduce using rule 134 (block_loops -> block_loops floatNative .)


state 248

    (135) block_loops -> block_loops stringNative .

    END             reduce using rule 135 (block_loops -> block_loops stringNative .)
    PRINT           reduce using rule 135 (block_loops -> block_loops stringNative .)
    PRINTLN         reduce using rule 135 (block_loops -> block_loops stringNative .)
    ID              reduce using rule 135 (block_loops -> block_loops stringNative .)
    GLOBAL          reduce using rule 135 (block_loops -> block_loops stringNative .)
    RETURN          reduce using rule 135 (block_loops -> block_loops stringNative .)
    FOR             reduce using rule 135 (block_loops -> block_loops stringNative .)
    MIENTRAS        reduce using rule 135 (block_loops -> block_loops stringNative .)
    IF              reduce using rule 135 (block_loops -> block_loops stringNative .)
    PARSE           reduce using rule 135 (block_loops -> block_loops stringNative .)
    TRUNC           reduce using rule 135 (block_loops -> block_loops stringNative .)
    FLOAT           reduce using rule 135 (block_loops -> block_loops stringNative .)
    STRINGNATIVE    reduce using rule 135 (block_loops -> block_loops stringNative .)
    TYPEOF          reduce using rule 135 (block_loops -> block_loops stringNative .)
    PUSH            reduce using rule 135 (block_loops -> block_loops stringNative .)
    POP             reduce using rule 135 (block_loops -> block_loops stringNative .)
    LENGTH          reduce using rule 135 (block_loops -> block_loops stringNative .)
    BREAK           reduce using rule 135 (block_loops -> block_loops stringNative .)
    CONTINUE        reduce using rule 135 (block_loops -> block_loops stringNative .)
    MUTABLE         reduce using rule 135 (block_loops -> block_loops stringNative .)
    STRUCT          reduce using rule 135 (block_loops -> block_loops stringNative .)
    ELSEIF          reduce using rule 135 (block_loops -> block_loops stringNative .)
    ELSE            reduce using rule 135 (block_loops -> block_loops stringNative .)


state 249

    (136) block_loops -> block_loops typeOfNative .

    END             reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    PRINT           reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    PRINTLN         reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    ID              reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    GLOBAL          reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    RETURN          reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    FOR             reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    MIENTRAS        reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    IF              reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    PARSE           reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    TRUNC           reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    FLOAT           reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    STRINGNATIVE    reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    TYPEOF          reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    PUSH            reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    POP             reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    LENGTH          reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    BREAK           reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    CONTINUE        reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    MUTABLE         reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    STRUCT          reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    ELSEIF          reduce using rule 136 (block_loops -> block_loops typeOfNative .)
    ELSE            reduce using rule 136 (block_loops -> block_loops typeOfNative .)


state 250

    (137) block_loops -> block_loops pushArray .

    END             reduce using rule 137 (block_loops -> block_loops pushArray .)
    PRINT           reduce using rule 137 (block_loops -> block_loops pushArray .)
    PRINTLN         reduce using rule 137 (block_loops -> block_loops pushArray .)
    ID              reduce using rule 137 (block_loops -> block_loops pushArray .)
    GLOBAL          reduce using rule 137 (block_loops -> block_loops pushArray .)
    RETURN          reduce using rule 137 (block_loops -> block_loops pushArray .)
    FOR             reduce using rule 137 (block_loops -> block_loops pushArray .)
    MIENTRAS        reduce using rule 137 (block_loops -> block_loops pushArray .)
    IF              reduce using rule 137 (block_loops -> block_loops pushArray .)
    PARSE           reduce using rule 137 (block_loops -> block_loops pushArray .)
    TRUNC           reduce using rule 137 (block_loops -> block_loops pushArray .)
    FLOAT           reduce using rule 137 (block_loops -> block_loops pushArray .)
    STRINGNATIVE    reduce using rule 137 (block_loops -> block_loops pushArray .)
    TYPEOF          reduce using rule 137 (block_loops -> block_loops pushArray .)
    PUSH            reduce using rule 137 (block_loops -> block_loops pushArray .)
    POP             reduce using rule 137 (block_loops -> block_loops pushArray .)
    LENGTH          reduce using rule 137 (block_loops -> block_loops pushArray .)
    BREAK           reduce using rule 137 (block_loops -> block_loops pushArray .)
    CONTINUE        reduce using rule 137 (block_loops -> block_loops pushArray .)
    MUTABLE         reduce using rule 137 (block_loops -> block_loops pushArray .)
    STRUCT          reduce using rule 137 (block_loops -> block_loops pushArray .)
    ELSEIF          reduce using rule 137 (block_loops -> block_loops pushArray .)
    ELSE            reduce using rule 137 (block_loops -> block_loops pushArray .)


state 251

    (138) block_loops -> block_loops popArray .

    END             reduce using rule 138 (block_loops -> block_loops popArray .)
    PRINT           reduce using rule 138 (block_loops -> block_loops popArray .)
    PRINTLN         reduce using rule 138 (block_loops -> block_loops popArray .)
    ID              reduce using rule 138 (block_loops -> block_loops popArray .)
    GLOBAL          reduce using rule 138 (block_loops -> block_loops popArray .)
    RETURN          reduce using rule 138 (block_loops -> block_loops popArray .)
    FOR             reduce using rule 138 (block_loops -> block_loops popArray .)
    MIENTRAS        reduce using rule 138 (block_loops -> block_loops popArray .)
    IF              reduce using rule 138 (block_loops -> block_loops popArray .)
    PARSE           reduce using rule 138 (block_loops -> block_loops popArray .)
    TRUNC           reduce using rule 138 (block_loops -> block_loops popArray .)
    FLOAT           reduce using rule 138 (block_loops -> block_loops popArray .)
    STRINGNATIVE    reduce using rule 138 (block_loops -> block_loops popArray .)
    TYPEOF          reduce using rule 138 (block_loops -> block_loops popArray .)
    PUSH            reduce using rule 138 (block_loops -> block_loops popArray .)
    POP             reduce using rule 138 (block_loops -> block_loops popArray .)
    LENGTH          reduce using rule 138 (block_loops -> block_loops popArray .)
    BREAK           reduce using rule 138 (block_loops -> block_loops popArray .)
    CONTINUE        reduce using rule 138 (block_loops -> block_loops popArray .)
    MUTABLE         reduce using rule 138 (block_loops -> block_loops popArray .)
    STRUCT          reduce using rule 138 (block_loops -> block_loops popArray .)
    ELSEIF          reduce using rule 138 (block_loops -> block_loops popArray .)
    ELSE            reduce using rule 138 (block_loops -> block_loops popArray .)


state 252

    (139) block_loops -> block_loops lengthArray .

    END             reduce using rule 139 (block_loops -> block_loops lengthArray .)
    PRINT           reduce using rule 139 (block_loops -> block_loops lengthArray .)
    PRINTLN         reduce using rule 139 (block_loops -> block_loops lengthArray .)
    ID              reduce using rule 139 (block_loops -> block_loops lengthArray .)
    GLOBAL          reduce using rule 139 (block_loops -> block_loops lengthArray .)
    RETURN          reduce using rule 139 (block_loops -> block_loops lengthArray .)
    FOR             reduce using rule 139 (block_loops -> block_loops lengthArray .)
    MIENTRAS        reduce using rule 139 (block_loops -> block_loops lengthArray .)
    IF              reduce using rule 139 (block_loops -> block_loops lengthArray .)
    PARSE           reduce using rule 139 (block_loops -> block_loops lengthArray .)
    TRUNC           reduce using rule 139 (block_loops -> block_loops lengthArray .)
    FLOAT           reduce using rule 139 (block_loops -> block_loops lengthArray .)
    STRINGNATIVE    reduce using rule 139 (block_loops -> block_loops lengthArray .)
    TYPEOF          reduce using rule 139 (block_loops -> block_loops lengthArray .)
    PUSH            reduce using rule 139 (block_loops -> block_loops lengthArray .)
    POP             reduce using rule 139 (block_loops -> block_loops lengthArray .)
    LENGTH          reduce using rule 139 (block_loops -> block_loops lengthArray .)
    BREAK           reduce using rule 139 (block_loops -> block_loops lengthArray .)
    CONTINUE        reduce using rule 139 (block_loops -> block_loops lengthArray .)
    MUTABLE         reduce using rule 139 (block_loops -> block_loops lengthArray .)
    STRUCT          reduce using rule 139 (block_loops -> block_loops lengthArray .)
    ELSEIF          reduce using rule 139 (block_loops -> block_loops lengthArray .)
    ELSE            reduce using rule 139 (block_loops -> block_loops lengthArray .)


state 253

    (140) block_loops -> block_loops assignmentArray .

    END             reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    PRINT           reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    PRINTLN         reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    ID              reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    GLOBAL          reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    RETURN          reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    FOR             reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    MIENTRAS        reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    IF              reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    PARSE           reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    TRUNC           reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    FLOAT           reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    STRINGNATIVE    reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    TYPEOF          reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    PUSH            reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    POP             reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    LENGTH          reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    BREAK           reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    CONTINUE        reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    MUTABLE         reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    STRUCT          reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    ELSEIF          reduce using rule 140 (block_loops -> block_loops assignmentArray .)
    ELSE            reduce using rule 140 (block_loops -> block_loops assignmentArray .)


state 254

    (141) block_loops -> block_loops Break .

    END             reduce using rule 141 (block_loops -> block_loops Break .)
    PRINT           reduce using rule 141 (block_loops -> block_loops Break .)
    PRINTLN         reduce using rule 141 (block_loops -> block_loops Break .)
    ID              reduce using rule 141 (block_loops -> block_loops Break .)
    GLOBAL          reduce using rule 141 (block_loops -> block_loops Break .)
    RETURN          reduce using rule 141 (block_loops -> block_loops Break .)
    FOR             reduce using rule 141 (block_loops -> block_loops Break .)
    MIENTRAS        reduce using rule 141 (block_loops -> block_loops Break .)
    IF              reduce using rule 141 (block_loops -> block_loops Break .)
    PARSE           reduce using rule 141 (block_loops -> block_loops Break .)
    TRUNC           reduce using rule 141 (block_loops -> block_loops Break .)
    FLOAT           reduce using rule 141 (block_loops -> block_loops Break .)
    STRINGNATIVE    reduce using rule 141 (block_loops -> block_loops Break .)
    TYPEOF          reduce using rule 141 (block_loops -> block_loops Break .)
    PUSH            reduce using rule 141 (block_loops -> block_loops Break .)
    POP             reduce using rule 141 (block_loops -> block_loops Break .)
    LENGTH          reduce using rule 141 (block_loops -> block_loops Break .)
    BREAK           reduce using rule 141 (block_loops -> block_loops Break .)
    CONTINUE        reduce using rule 141 (block_loops -> block_loops Break .)
    MUTABLE         reduce using rule 141 (block_loops -> block_loops Break .)
    STRUCT          reduce using rule 141 (block_loops -> block_loops Break .)
    ELSEIF          reduce using rule 141 (block_loops -> block_loops Break .)
    ELSE            reduce using rule 141 (block_loops -> block_loops Break .)


state 255

    (142) block_loops -> block_loops Continue .

    END             reduce using rule 142 (block_loops -> block_loops Continue .)
    PRINT           reduce using rule 142 (block_loops -> block_loops Continue .)
    PRINTLN         reduce using rule 142 (block_loops -> block_loops Continue .)
    ID              reduce using rule 142 (block_loops -> block_loops Continue .)
    GLOBAL          reduce using rule 142 (block_loops -> block_loops Continue .)
    RETURN          reduce using rule 142 (block_loops -> block_loops Continue .)
    FOR             reduce using rule 142 (block_loops -> block_loops Continue .)
    MIENTRAS        reduce using rule 142 (block_loops -> block_loops Continue .)
    IF              reduce using rule 142 (block_loops -> block_loops Continue .)
    PARSE           reduce using rule 142 (block_loops -> block_loops Continue .)
    TRUNC           reduce using rule 142 (block_loops -> block_loops Continue .)
    FLOAT           reduce using rule 142 (block_loops -> block_loops Continue .)
    STRINGNATIVE    reduce using rule 142 (block_loops -> block_loops Continue .)
    TYPEOF          reduce using rule 142 (block_loops -> block_loops Continue .)
    PUSH            reduce using rule 142 (block_loops -> block_loops Continue .)
    POP             reduce using rule 142 (block_loops -> block_loops Continue .)
    LENGTH          reduce using rule 142 (block_loops -> block_loops Continue .)
    BREAK           reduce using rule 142 (block_loops -> block_loops Continue .)
    CONTINUE        reduce using rule 142 (block_loops -> block_loops Continue .)
    MUTABLE         reduce using rule 142 (block_loops -> block_loops Continue .)
    STRUCT          reduce using rule 142 (block_loops -> block_loops Continue .)
    ELSEIF          reduce using rule 142 (block_loops -> block_loops Continue .)
    ELSE            reduce using rule 142 (block_loops -> block_loops Continue .)


state 256

    (143) block_loops -> block_loops Struct .

    END             reduce using rule 143 (block_loops -> block_loops Struct .)
    PRINT           reduce using rule 143 (block_loops -> block_loops Struct .)
    PRINTLN         reduce using rule 143 (block_loops -> block_loops Struct .)
    ID              reduce using rule 143 (block_loops -> block_loops Struct .)
    GLOBAL          reduce using rule 143 (block_loops -> block_loops Struct .)
    RETURN          reduce using rule 143 (block_loops -> block_loops Struct .)
    FOR             reduce using rule 143 (block_loops -> block_loops Struct .)
    MIENTRAS        reduce using rule 143 (block_loops -> block_loops Struct .)
    IF              reduce using rule 143 (block_loops -> block_loops Struct .)
    PARSE           reduce using rule 143 (block_loops -> block_loops Struct .)
    TRUNC           reduce using rule 143 (block_loops -> block_loops Struct .)
    FLOAT           reduce using rule 143 (block_loops -> block_loops Struct .)
    STRINGNATIVE    reduce using rule 143 (block_loops -> block_loops Struct .)
    TYPEOF          reduce using rule 143 (block_loops -> block_loops Struct .)
    PUSH            reduce using rule 143 (block_loops -> block_loops Struct .)
    POP             reduce using rule 143 (block_loops -> block_loops Struct .)
    LENGTH          reduce using rule 143 (block_loops -> block_loops Struct .)
    BREAK           reduce using rule 143 (block_loops -> block_loops Struct .)
    CONTINUE        reduce using rule 143 (block_loops -> block_loops Struct .)
    MUTABLE         reduce using rule 143 (block_loops -> block_loops Struct .)
    STRUCT          reduce using rule 143 (block_loops -> block_loops Struct .)
    ELSEIF          reduce using rule 143 (block_loops -> block_loops Struct .)
    ELSE            reduce using rule 143 (block_loops -> block_loops Struct .)


state 257

    (144) block_loops -> block_loops structAccess .

    END             reduce using rule 144 (block_loops -> block_loops structAccess .)
    PRINT           reduce using rule 144 (block_loops -> block_loops structAccess .)
    PRINTLN         reduce using rule 144 (block_loops -> block_loops structAccess .)
    ID              reduce using rule 144 (block_loops -> block_loops structAccess .)
    GLOBAL          reduce using rule 144 (block_loops -> block_loops structAccess .)
    RETURN          reduce using rule 144 (block_loops -> block_loops structAccess .)
    FOR             reduce using rule 144 (block_loops -> block_loops structAccess .)
    MIENTRAS        reduce using rule 144 (block_loops -> block_loops structAccess .)
    IF              reduce using rule 144 (block_loops -> block_loops structAccess .)
    PARSE           reduce using rule 144 (block_loops -> block_loops structAccess .)
    TRUNC           reduce using rule 144 (block_loops -> block_loops structAccess .)
    FLOAT           reduce using rule 144 (block_loops -> block_loops structAccess .)
    STRINGNATIVE    reduce using rule 144 (block_loops -> block_loops structAccess .)
    TYPEOF          reduce using rule 144 (block_loops -> block_loops structAccess .)
    PUSH            reduce using rule 144 (block_loops -> block_loops structAccess .)
    POP             reduce using rule 144 (block_loops -> block_loops structAccess .)
    LENGTH          reduce using rule 144 (block_loops -> block_loops structAccess .)
    BREAK           reduce using rule 144 (block_loops -> block_loops structAccess .)
    CONTINUE        reduce using rule 144 (block_loops -> block_loops structAccess .)
    MUTABLE         reduce using rule 144 (block_loops -> block_loops structAccess .)
    STRUCT          reduce using rule 144 (block_loops -> block_loops structAccess .)
    ELSEIF          reduce using rule 144 (block_loops -> block_loops structAccess .)
    ELSE            reduce using rule 144 (block_loops -> block_loops structAccess .)


state 258

    (178) exp -> exp MAS exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    MAS             reduce using rule 178 (exp -> exp MAS exp .)
    MENOS           reduce using rule 178 (exp -> exp MAS exp .)
    MAYOR           reduce using rule 178 (exp -> exp MAS exp .)
    MENOR           reduce using rule 178 (exp -> exp MAS exp .)
    MAYORIGUAL      reduce using rule 178 (exp -> exp MAS exp .)
    MENORIGUAL      reduce using rule 178 (exp -> exp MAS exp .)
    DOBLEIGUAL      reduce using rule 178 (exp -> exp MAS exp .)
    NOIGUAL         reduce using rule 178 (exp -> exp MAS exp .)
    OR              reduce using rule 178 (exp -> exp MAS exp .)
    AND             reduce using rule 178 (exp -> exp MAS exp .)
    DOSP            reduce using rule 178 (exp -> exp MAS exp .)
    PRINT           reduce using rule 178 (exp -> exp MAS exp .)
    PRINTLN         reduce using rule 178 (exp -> exp MAS exp .)
    ID              reduce using rule 178 (exp -> exp MAS exp .)
    GLOBAL          reduce using rule 178 (exp -> exp MAS exp .)
    RETURN          reduce using rule 178 (exp -> exp MAS exp .)
    MIENTRAS        reduce using rule 178 (exp -> exp MAS exp .)
    FOR             reduce using rule 178 (exp -> exp MAS exp .)
    IF              reduce using rule 178 (exp -> exp MAS exp .)
    PARSE           reduce using rule 178 (exp -> exp MAS exp .)
    TRUNC           reduce using rule 178 (exp -> exp MAS exp .)
    FLOAT           reduce using rule 178 (exp -> exp MAS exp .)
    STRINGNATIVE    reduce using rule 178 (exp -> exp MAS exp .)
    TYPEOF          reduce using rule 178 (exp -> exp MAS exp .)
    PUSH            reduce using rule 178 (exp -> exp MAS exp .)
    POP             reduce using rule 178 (exp -> exp MAS exp .)
    LENGTH          reduce using rule 178 (exp -> exp MAS exp .)
    BREAK           reduce using rule 178 (exp -> exp MAS exp .)
    CONTINUE        reduce using rule 178 (exp -> exp MAS exp .)
    MUTABLE         reduce using rule 178 (exp -> exp MAS exp .)
    STRUCT          reduce using rule 178 (exp -> exp MAS exp .)
    END             reduce using rule 178 (exp -> exp MAS exp .)
    ELSEIF          reduce using rule 178 (exp -> exp MAS exp .)
    ELSE            reduce using rule 178 (exp -> exp MAS exp .)
    PARENTESISC     reduce using rule 178 (exp -> exp MAS exp .)
    COMA            reduce using rule 178 (exp -> exp MAS exp .)
    PCOMA           reduce using rule 178 (exp -> exp MAS exp .)
    CORCHETEC       reduce using rule 178 (exp -> exp MAS exp .)
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136

  ! POR             [ reduce using rule 178 (exp -> exp MAS exp .) ]
  ! DIVIDIDO        [ reduce using rule 178 (exp -> exp MAS exp .) ]
  ! POTENCIA        [ reduce using rule 178 (exp -> exp MAS exp .) ]
  ! PORCENTAJE      [ reduce using rule 178 (exp -> exp MAS exp .) ]
  ! MAS             [ shift and go to state 131 ]
  ! MENOS           [ shift and go to state 132 ]
  ! MAYOR           [ shift and go to state 137 ]
  ! MENOR           [ shift and go to state 138 ]
  ! MAYORIGUAL      [ shift and go to state 139 ]
  ! MENORIGUAL      [ shift and go to state 140 ]
  ! DOBLEIGUAL      [ shift and go to state 141 ]
  ! NOIGUAL         [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]
  ! DOSP            [ shift and go to state 145 ]


state 259

    (179) exp -> exp MENOS exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    MAS             reduce using rule 179 (exp -> exp MENOS exp .)
    MENOS           reduce using rule 179 (exp -> exp MENOS exp .)
    MAYOR           reduce using rule 179 (exp -> exp MENOS exp .)
    MENOR           reduce using rule 179 (exp -> exp MENOS exp .)
    MAYORIGUAL      reduce using rule 179 (exp -> exp MENOS exp .)
    MENORIGUAL      reduce using rule 179 (exp -> exp MENOS exp .)
    DOBLEIGUAL      reduce using rule 179 (exp -> exp MENOS exp .)
    NOIGUAL         reduce using rule 179 (exp -> exp MENOS exp .)
    OR              reduce using rule 179 (exp -> exp MENOS exp .)
    AND             reduce using rule 179 (exp -> exp MENOS exp .)
    DOSP            reduce using rule 179 (exp -> exp MENOS exp .)
    PRINT           reduce using rule 179 (exp -> exp MENOS exp .)
    PRINTLN         reduce using rule 179 (exp -> exp MENOS exp .)
    ID              reduce using rule 179 (exp -> exp MENOS exp .)
    GLOBAL          reduce using rule 179 (exp -> exp MENOS exp .)
    RETURN          reduce using rule 179 (exp -> exp MENOS exp .)
    MIENTRAS        reduce using rule 179 (exp -> exp MENOS exp .)
    FOR             reduce using rule 179 (exp -> exp MENOS exp .)
    IF              reduce using rule 179 (exp -> exp MENOS exp .)
    PARSE           reduce using rule 179 (exp -> exp MENOS exp .)
    TRUNC           reduce using rule 179 (exp -> exp MENOS exp .)
    FLOAT           reduce using rule 179 (exp -> exp MENOS exp .)
    STRINGNATIVE    reduce using rule 179 (exp -> exp MENOS exp .)
    TYPEOF          reduce using rule 179 (exp -> exp MENOS exp .)
    PUSH            reduce using rule 179 (exp -> exp MENOS exp .)
    POP             reduce using rule 179 (exp -> exp MENOS exp .)
    LENGTH          reduce using rule 179 (exp -> exp MENOS exp .)
    BREAK           reduce using rule 179 (exp -> exp MENOS exp .)
    CONTINUE        reduce using rule 179 (exp -> exp MENOS exp .)
    MUTABLE         reduce using rule 179 (exp -> exp MENOS exp .)
    STRUCT          reduce using rule 179 (exp -> exp MENOS exp .)
    END             reduce using rule 179 (exp -> exp MENOS exp .)
    ELSEIF          reduce using rule 179 (exp -> exp MENOS exp .)
    ELSE            reduce using rule 179 (exp -> exp MENOS exp .)
    PARENTESISC     reduce using rule 179 (exp -> exp MENOS exp .)
    COMA            reduce using rule 179 (exp -> exp MENOS exp .)
    PCOMA           reduce using rule 179 (exp -> exp MENOS exp .)
    CORCHETEC       reduce using rule 179 (exp -> exp MENOS exp .)
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136

  ! POR             [ reduce using rule 179 (exp -> exp MENOS exp .) ]
  ! DIVIDIDO        [ reduce using rule 179 (exp -> exp MENOS exp .) ]
  ! POTENCIA        [ reduce using rule 179 (exp -> exp MENOS exp .) ]
  ! PORCENTAJE      [ reduce using rule 179 (exp -> exp MENOS exp .) ]
  ! MAS             [ shift and go to state 131 ]
  ! MENOS           [ shift and go to state 132 ]
  ! MAYOR           [ shift and go to state 137 ]
  ! MENOR           [ shift and go to state 138 ]
  ! MAYORIGUAL      [ shift and go to state 139 ]
  ! MENORIGUAL      [ shift and go to state 140 ]
  ! DOBLEIGUAL      [ shift and go to state 141 ]
  ! NOIGUAL         [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]
  ! DOSP            [ shift and go to state 145 ]


state 260

    (180) exp -> exp POR exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    MAS             reduce using rule 180 (exp -> exp POR exp .)
    MENOS           reduce using rule 180 (exp -> exp POR exp .)
    POR             reduce using rule 180 (exp -> exp POR exp .)
    DIVIDIDO        reduce using rule 180 (exp -> exp POR exp .)
    PORCENTAJE      reduce using rule 180 (exp -> exp POR exp .)
    MAYOR           reduce using rule 180 (exp -> exp POR exp .)
    MENOR           reduce using rule 180 (exp -> exp POR exp .)
    MAYORIGUAL      reduce using rule 180 (exp -> exp POR exp .)
    MENORIGUAL      reduce using rule 180 (exp -> exp POR exp .)
    DOBLEIGUAL      reduce using rule 180 (exp -> exp POR exp .)
    NOIGUAL         reduce using rule 180 (exp -> exp POR exp .)
    OR              reduce using rule 180 (exp -> exp POR exp .)
    AND             reduce using rule 180 (exp -> exp POR exp .)
    DOSP            reduce using rule 180 (exp -> exp POR exp .)
    PRINT           reduce using rule 180 (exp -> exp POR exp .)
    PRINTLN         reduce using rule 180 (exp -> exp POR exp .)
    ID              reduce using rule 180 (exp -> exp POR exp .)
    GLOBAL          reduce using rule 180 (exp -> exp POR exp .)
    RETURN          reduce using rule 180 (exp -> exp POR exp .)
    MIENTRAS        reduce using rule 180 (exp -> exp POR exp .)
    FOR             reduce using rule 180 (exp -> exp POR exp .)
    IF              reduce using rule 180 (exp -> exp POR exp .)
    PARSE           reduce using rule 180 (exp -> exp POR exp .)
    TRUNC           reduce using rule 180 (exp -> exp POR exp .)
    FLOAT           reduce using rule 180 (exp -> exp POR exp .)
    STRINGNATIVE    reduce using rule 180 (exp -> exp POR exp .)
    TYPEOF          reduce using rule 180 (exp -> exp POR exp .)
    PUSH            reduce using rule 180 (exp -> exp POR exp .)
    POP             reduce using rule 180 (exp -> exp POR exp .)
    LENGTH          reduce using rule 180 (exp -> exp POR exp .)
    BREAK           reduce using rule 180 (exp -> exp POR exp .)
    CONTINUE        reduce using rule 180 (exp -> exp POR exp .)
    MUTABLE         reduce using rule 180 (exp -> exp POR exp .)
    STRUCT          reduce using rule 180 (exp -> exp POR exp .)
    END             reduce using rule 180 (exp -> exp POR exp .)
    ELSEIF          reduce using rule 180 (exp -> exp POR exp .)
    ELSE            reduce using rule 180 (exp -> exp POR exp .)
    PARENTESISC     reduce using rule 180 (exp -> exp POR exp .)
    COMA            reduce using rule 180 (exp -> exp POR exp .)
    PCOMA           reduce using rule 180 (exp -> exp POR exp .)
    CORCHETEC       reduce using rule 180 (exp -> exp POR exp .)
    POTENCIA        shift and go to state 135

  ! POTENCIA        [ reduce using rule 180 (exp -> exp POR exp .) ]
  ! MAS             [ shift and go to state 131 ]
  ! MENOS           [ shift and go to state 132 ]
  ! POR             [ shift and go to state 133 ]
  ! DIVIDIDO        [ shift and go to state 134 ]
  ! PORCENTAJE      [ shift and go to state 136 ]
  ! MAYOR           [ shift and go to state 137 ]
  ! MENOR           [ shift and go to state 138 ]
  ! MAYORIGUAL      [ shift and go to state 139 ]
  ! MENORIGUAL      [ shift and go to state 140 ]
  ! DOBLEIGUAL      [ shift and go to state 141 ]
  ! NOIGUAL         [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]
  ! DOSP            [ shift and go to state 145 ]


state 261

    (181) exp -> exp DIVIDIDO exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    MAS             reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    MENOS           reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    POR             reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    DIVIDIDO        reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    PORCENTAJE      reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    MAYOR           reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    MENOR           reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    MAYORIGUAL      reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    MENORIGUAL      reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    DOBLEIGUAL      reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    NOIGUAL         reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    OR              reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    AND             reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    DOSP            reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    PRINT           reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    PRINTLN         reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    ID              reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    GLOBAL          reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    RETURN          reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    MIENTRAS        reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    FOR             reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    IF              reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    PARSE           reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    TRUNC           reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    FLOAT           reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    STRINGNATIVE    reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    TYPEOF          reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    PUSH            reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    POP             reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    LENGTH          reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    BREAK           reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    CONTINUE        reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    MUTABLE         reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    STRUCT          reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    END             reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    ELSEIF          reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    ELSE            reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    PARENTESISC     reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    COMA            reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    PCOMA           reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    CORCHETEC       reduce using rule 181 (exp -> exp DIVIDIDO exp .)
    POTENCIA        shift and go to state 135

  ! POTENCIA        [ reduce using rule 181 (exp -> exp DIVIDIDO exp .) ]
  ! MAS             [ shift and go to state 131 ]
  ! MENOS           [ shift and go to state 132 ]
  ! POR             [ shift and go to state 133 ]
  ! DIVIDIDO        [ shift and go to state 134 ]
  ! PORCENTAJE      [ shift and go to state 136 ]
  ! MAYOR           [ shift and go to state 137 ]
  ! MENOR           [ shift and go to state 138 ]
  ! MAYORIGUAL      [ shift and go to state 139 ]
  ! MENORIGUAL      [ shift and go to state 140 ]
  ! DOBLEIGUAL      [ shift and go to state 141 ]
  ! NOIGUAL         [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]
  ! DOSP            [ shift and go to state 145 ]


state 262

    (182) exp -> exp POTENCIA exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    MAS             reduce using rule 182 (exp -> exp POTENCIA exp .)
    MENOS           reduce using rule 182 (exp -> exp POTENCIA exp .)
    POR             reduce using rule 182 (exp -> exp POTENCIA exp .)
    DIVIDIDO        reduce using rule 182 (exp -> exp POTENCIA exp .)
    POTENCIA        reduce using rule 182 (exp -> exp POTENCIA exp .)
    PORCENTAJE      reduce using rule 182 (exp -> exp POTENCIA exp .)
    MAYOR           reduce using rule 182 (exp -> exp POTENCIA exp .)
    MENOR           reduce using rule 182 (exp -> exp POTENCIA exp .)
    MAYORIGUAL      reduce using rule 182 (exp -> exp POTENCIA exp .)
    MENORIGUAL      reduce using rule 182 (exp -> exp POTENCIA exp .)
    DOBLEIGUAL      reduce using rule 182 (exp -> exp POTENCIA exp .)
    NOIGUAL         reduce using rule 182 (exp -> exp POTENCIA exp .)
    OR              reduce using rule 182 (exp -> exp POTENCIA exp .)
    AND             reduce using rule 182 (exp -> exp POTENCIA exp .)
    DOSP            reduce using rule 182 (exp -> exp POTENCIA exp .)
    PRINT           reduce using rule 182 (exp -> exp POTENCIA exp .)
    PRINTLN         reduce using rule 182 (exp -> exp POTENCIA exp .)
    ID              reduce using rule 182 (exp -> exp POTENCIA exp .)
    GLOBAL          reduce using rule 182 (exp -> exp POTENCIA exp .)
    RETURN          reduce using rule 182 (exp -> exp POTENCIA exp .)
    MIENTRAS        reduce using rule 182 (exp -> exp POTENCIA exp .)
    FOR             reduce using rule 182 (exp -> exp POTENCIA exp .)
    IF              reduce using rule 182 (exp -> exp POTENCIA exp .)
    PARSE           reduce using rule 182 (exp -> exp POTENCIA exp .)
    TRUNC           reduce using rule 182 (exp -> exp POTENCIA exp .)
    FLOAT           reduce using rule 182 (exp -> exp POTENCIA exp .)
    STRINGNATIVE    reduce using rule 182 (exp -> exp POTENCIA exp .)
    TYPEOF          reduce using rule 182 (exp -> exp POTENCIA exp .)
    PUSH            reduce using rule 182 (exp -> exp POTENCIA exp .)
    POP             reduce using rule 182 (exp -> exp POTENCIA exp .)
    LENGTH          reduce using rule 182 (exp -> exp POTENCIA exp .)
    BREAK           reduce using rule 182 (exp -> exp POTENCIA exp .)
    CONTINUE        reduce using rule 182 (exp -> exp POTENCIA exp .)
    MUTABLE         reduce using rule 182 (exp -> exp POTENCIA exp .)
    STRUCT          reduce using rule 182 (exp -> exp POTENCIA exp .)
    END             reduce using rule 182 (exp -> exp POTENCIA exp .)
    ELSEIF          reduce using rule 182 (exp -> exp POTENCIA exp .)
    ELSE            reduce using rule 182 (exp -> exp POTENCIA exp .)
    PARENTESISC     reduce using rule 182 (exp -> exp POTENCIA exp .)
    COMA            reduce using rule 182 (exp -> exp POTENCIA exp .)
    PCOMA           reduce using rule 182 (exp -> exp POTENCIA exp .)
    CORCHETEC       reduce using rule 182 (exp -> exp POTENCIA exp .)

  ! MAS             [ shift and go to state 131 ]
  ! MENOS           [ shift and go to state 132 ]
  ! POR             [ shift and go to state 133 ]
  ! DIVIDIDO        [ shift and go to state 134 ]
  ! POTENCIA        [ shift and go to state 135 ]
  ! PORCENTAJE      [ shift and go to state 136 ]
  ! MAYOR           [ shift and go to state 137 ]
  ! MENOR           [ shift and go to state 138 ]
  ! MAYORIGUAL      [ shift and go to state 139 ]
  ! MENORIGUAL      [ shift and go to state 140 ]
  ! DOBLEIGUAL      [ shift and go to state 141 ]
  ! NOIGUAL         [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]
  ! DOSP            [ shift and go to state 145 ]


state 263

    (183) exp -> exp PORCENTAJE exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    MAS             reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    MENOS           reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    POR             reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    DIVIDIDO        reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    PORCENTAJE      reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    MAYOR           reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    MENOR           reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    MAYORIGUAL      reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    MENORIGUAL      reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    DOBLEIGUAL      reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    NOIGUAL         reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    OR              reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    AND             reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    DOSP            reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    PRINT           reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    PRINTLN         reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    ID              reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    GLOBAL          reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    RETURN          reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    MIENTRAS        reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    FOR             reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    IF              reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    PARSE           reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    TRUNC           reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    FLOAT           reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    STRINGNATIVE    reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    TYPEOF          reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    PUSH            reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    POP             reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    LENGTH          reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    BREAK           reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    CONTINUE        reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    MUTABLE         reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    STRUCT          reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    END             reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    ELSEIF          reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    ELSE            reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    PARENTESISC     reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    COMA            reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    PCOMA           reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    CORCHETEC       reduce using rule 183 (exp -> exp PORCENTAJE exp .)
    POTENCIA        shift and go to state 135

  ! POTENCIA        [ reduce using rule 183 (exp -> exp PORCENTAJE exp .) ]
  ! MAS             [ shift and go to state 131 ]
  ! MENOS           [ shift and go to state 132 ]
  ! POR             [ shift and go to state 133 ]
  ! DIVIDIDO        [ shift and go to state 134 ]
  ! PORCENTAJE      [ shift and go to state 136 ]
  ! MAYOR           [ shift and go to state 137 ]
  ! MENOR           [ shift and go to state 138 ]
  ! MAYORIGUAL      [ shift and go to state 139 ]
  ! MENORIGUAL      [ shift and go to state 140 ]
  ! DOBLEIGUAL      [ shift and go to state 141 ]
  ! NOIGUAL         [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]
  ! DOSP            [ shift and go to state 145 ]


state 264

    (184) exp -> exp MAYOR exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    MAYOR           reduce using rule 184 (exp -> exp MAYOR exp .)
    MENOR           reduce using rule 184 (exp -> exp MAYOR exp .)
    MAYORIGUAL      reduce using rule 184 (exp -> exp MAYOR exp .)
    MENORIGUAL      reduce using rule 184 (exp -> exp MAYOR exp .)
    DOBLEIGUAL      reduce using rule 184 (exp -> exp MAYOR exp .)
    NOIGUAL         reduce using rule 184 (exp -> exp MAYOR exp .)
    OR              reduce using rule 184 (exp -> exp MAYOR exp .)
    AND             reduce using rule 184 (exp -> exp MAYOR exp .)
    DOSP            reduce using rule 184 (exp -> exp MAYOR exp .)
    PRINT           reduce using rule 184 (exp -> exp MAYOR exp .)
    PRINTLN         reduce using rule 184 (exp -> exp MAYOR exp .)
    ID              reduce using rule 184 (exp -> exp MAYOR exp .)
    GLOBAL          reduce using rule 184 (exp -> exp MAYOR exp .)
    RETURN          reduce using rule 184 (exp -> exp MAYOR exp .)
    MIENTRAS        reduce using rule 184 (exp -> exp MAYOR exp .)
    FOR             reduce using rule 184 (exp -> exp MAYOR exp .)
    IF              reduce using rule 184 (exp -> exp MAYOR exp .)
    PARSE           reduce using rule 184 (exp -> exp MAYOR exp .)
    TRUNC           reduce using rule 184 (exp -> exp MAYOR exp .)
    FLOAT           reduce using rule 184 (exp -> exp MAYOR exp .)
    STRINGNATIVE    reduce using rule 184 (exp -> exp MAYOR exp .)
    TYPEOF          reduce using rule 184 (exp -> exp MAYOR exp .)
    PUSH            reduce using rule 184 (exp -> exp MAYOR exp .)
    POP             reduce using rule 184 (exp -> exp MAYOR exp .)
    LENGTH          reduce using rule 184 (exp -> exp MAYOR exp .)
    BREAK           reduce using rule 184 (exp -> exp MAYOR exp .)
    CONTINUE        reduce using rule 184 (exp -> exp MAYOR exp .)
    MUTABLE         reduce using rule 184 (exp -> exp MAYOR exp .)
    STRUCT          reduce using rule 184 (exp -> exp MAYOR exp .)
    END             reduce using rule 184 (exp -> exp MAYOR exp .)
    ELSEIF          reduce using rule 184 (exp -> exp MAYOR exp .)
    ELSE            reduce using rule 184 (exp -> exp MAYOR exp .)
    PARENTESISC     reduce using rule 184 (exp -> exp MAYOR exp .)
    COMA            reduce using rule 184 (exp -> exp MAYOR exp .)
    PCOMA           reduce using rule 184 (exp -> exp MAYOR exp .)
    CORCHETEC       reduce using rule 184 (exp -> exp MAYOR exp .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136

  ! MAS             [ reduce using rule 184 (exp -> exp MAYOR exp .) ]
  ! MENOS           [ reduce using rule 184 (exp -> exp MAYOR exp .) ]
  ! POR             [ reduce using rule 184 (exp -> exp MAYOR exp .) ]
  ! DIVIDIDO        [ reduce using rule 184 (exp -> exp MAYOR exp .) ]
  ! POTENCIA        [ reduce using rule 184 (exp -> exp MAYOR exp .) ]
  ! PORCENTAJE      [ reduce using rule 184 (exp -> exp MAYOR exp .) ]
  ! MAYOR           [ shift and go to state 137 ]
  ! MENOR           [ shift and go to state 138 ]
  ! MAYORIGUAL      [ shift and go to state 139 ]
  ! MENORIGUAL      [ shift and go to state 140 ]
  ! DOBLEIGUAL      [ shift and go to state 141 ]
  ! NOIGUAL         [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]
  ! DOSP            [ shift and go to state 145 ]


state 265

    (185) exp -> exp MENOR exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    MAYOR           reduce using rule 185 (exp -> exp MENOR exp .)
    MENOR           reduce using rule 185 (exp -> exp MENOR exp .)
    MAYORIGUAL      reduce using rule 185 (exp -> exp MENOR exp .)
    MENORIGUAL      reduce using rule 185 (exp -> exp MENOR exp .)
    DOBLEIGUAL      reduce using rule 185 (exp -> exp MENOR exp .)
    NOIGUAL         reduce using rule 185 (exp -> exp MENOR exp .)
    OR              reduce using rule 185 (exp -> exp MENOR exp .)
    AND             reduce using rule 185 (exp -> exp MENOR exp .)
    DOSP            reduce using rule 185 (exp -> exp MENOR exp .)
    PRINT           reduce using rule 185 (exp -> exp MENOR exp .)
    PRINTLN         reduce using rule 185 (exp -> exp MENOR exp .)
    ID              reduce using rule 185 (exp -> exp MENOR exp .)
    GLOBAL          reduce using rule 185 (exp -> exp MENOR exp .)
    RETURN          reduce using rule 185 (exp -> exp MENOR exp .)
    MIENTRAS        reduce using rule 185 (exp -> exp MENOR exp .)
    FOR             reduce using rule 185 (exp -> exp MENOR exp .)
    IF              reduce using rule 185 (exp -> exp MENOR exp .)
    PARSE           reduce using rule 185 (exp -> exp MENOR exp .)
    TRUNC           reduce using rule 185 (exp -> exp MENOR exp .)
    FLOAT           reduce using rule 185 (exp -> exp MENOR exp .)
    STRINGNATIVE    reduce using rule 185 (exp -> exp MENOR exp .)
    TYPEOF          reduce using rule 185 (exp -> exp MENOR exp .)
    PUSH            reduce using rule 185 (exp -> exp MENOR exp .)
    POP             reduce using rule 185 (exp -> exp MENOR exp .)
    LENGTH          reduce using rule 185 (exp -> exp MENOR exp .)
    BREAK           reduce using rule 185 (exp -> exp MENOR exp .)
    CONTINUE        reduce using rule 185 (exp -> exp MENOR exp .)
    MUTABLE         reduce using rule 185 (exp -> exp MENOR exp .)
    STRUCT          reduce using rule 185 (exp -> exp MENOR exp .)
    END             reduce using rule 185 (exp -> exp MENOR exp .)
    ELSEIF          reduce using rule 185 (exp -> exp MENOR exp .)
    ELSE            reduce using rule 185 (exp -> exp MENOR exp .)
    PARENTESISC     reduce using rule 185 (exp -> exp MENOR exp .)
    COMA            reduce using rule 185 (exp -> exp MENOR exp .)
    PCOMA           reduce using rule 185 (exp -> exp MENOR exp .)
    CORCHETEC       reduce using rule 185 (exp -> exp MENOR exp .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136

  ! MAS             [ reduce using rule 185 (exp -> exp MENOR exp .) ]
  ! MENOS           [ reduce using rule 185 (exp -> exp MENOR exp .) ]
  ! POR             [ reduce using rule 185 (exp -> exp MENOR exp .) ]
  ! DIVIDIDO        [ reduce using rule 185 (exp -> exp MENOR exp .) ]
  ! POTENCIA        [ reduce using rule 185 (exp -> exp MENOR exp .) ]
  ! PORCENTAJE      [ reduce using rule 185 (exp -> exp MENOR exp .) ]
  ! MAYOR           [ shift and go to state 137 ]
  ! MENOR           [ shift and go to state 138 ]
  ! MAYORIGUAL      [ shift and go to state 139 ]
  ! MENORIGUAL      [ shift and go to state 140 ]
  ! DOBLEIGUAL      [ shift and go to state 141 ]
  ! NOIGUAL         [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]
  ! DOSP            [ shift and go to state 145 ]


state 266

    (186) exp -> exp MAYORIGUAL exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    MAYOR           reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    MENOR           reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    MAYORIGUAL      reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    MENORIGUAL      reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    DOBLEIGUAL      reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    NOIGUAL         reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    OR              reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    AND             reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    DOSP            reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    PRINT           reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    PRINTLN         reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    ID              reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    GLOBAL          reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    RETURN          reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    MIENTRAS        reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    FOR             reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    IF              reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    PARSE           reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    TRUNC           reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    FLOAT           reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    STRINGNATIVE    reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    TYPEOF          reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    PUSH            reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    POP             reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    LENGTH          reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    BREAK           reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    CONTINUE        reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    MUTABLE         reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    STRUCT          reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    END             reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    ELSEIF          reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    ELSE            reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    PARENTESISC     reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    COMA            reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    PCOMA           reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    CORCHETEC       reduce using rule 186 (exp -> exp MAYORIGUAL exp .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136

  ! MAS             [ reduce using rule 186 (exp -> exp MAYORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 186 (exp -> exp MAYORIGUAL exp .) ]
  ! POR             [ reduce using rule 186 (exp -> exp MAYORIGUAL exp .) ]
  ! DIVIDIDO        [ reduce using rule 186 (exp -> exp MAYORIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 186 (exp -> exp MAYORIGUAL exp .) ]
  ! PORCENTAJE      [ reduce using rule 186 (exp -> exp MAYORIGUAL exp .) ]
  ! MAYOR           [ shift and go to state 137 ]
  ! MENOR           [ shift and go to state 138 ]
  ! MAYORIGUAL      [ shift and go to state 139 ]
  ! MENORIGUAL      [ shift and go to state 140 ]
  ! DOBLEIGUAL      [ shift and go to state 141 ]
  ! NOIGUAL         [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]
  ! DOSP            [ shift and go to state 145 ]


state 267

    (187) exp -> exp MENORIGUAL exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    MAYOR           reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    MENOR           reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    MAYORIGUAL      reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    MENORIGUAL      reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    DOBLEIGUAL      reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    NOIGUAL         reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    OR              reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    AND             reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    DOSP            reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    PRINT           reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    PRINTLN         reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    ID              reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    GLOBAL          reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    RETURN          reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    MIENTRAS        reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    FOR             reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    IF              reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    PARSE           reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    TRUNC           reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    FLOAT           reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    STRINGNATIVE    reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    TYPEOF          reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    PUSH            reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    POP             reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    LENGTH          reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    BREAK           reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    CONTINUE        reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    MUTABLE         reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    STRUCT          reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    END             reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    ELSEIF          reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    ELSE            reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    PARENTESISC     reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    COMA            reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    PCOMA           reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    CORCHETEC       reduce using rule 187 (exp -> exp MENORIGUAL exp .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136

  ! MAS             [ reduce using rule 187 (exp -> exp MENORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 187 (exp -> exp MENORIGUAL exp .) ]
  ! POR             [ reduce using rule 187 (exp -> exp MENORIGUAL exp .) ]
  ! DIVIDIDO        [ reduce using rule 187 (exp -> exp MENORIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 187 (exp -> exp MENORIGUAL exp .) ]
  ! PORCENTAJE      [ reduce using rule 187 (exp -> exp MENORIGUAL exp .) ]
  ! MAYOR           [ shift and go to state 137 ]
  ! MENOR           [ shift and go to state 138 ]
  ! MAYORIGUAL      [ shift and go to state 139 ]
  ! MENORIGUAL      [ shift and go to state 140 ]
  ! DOBLEIGUAL      [ shift and go to state 141 ]
  ! NOIGUAL         [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]
  ! DOSP            [ shift and go to state 145 ]


state 268

    (188) exp -> exp DOBLEIGUAL exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    MAYOR           reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    MENOR           reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    MAYORIGUAL      reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    MENORIGUAL      reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    DOBLEIGUAL      reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    NOIGUAL         reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    OR              reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    AND             reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    DOSP            reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    PRINT           reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    PRINTLN         reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    ID              reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    GLOBAL          reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    RETURN          reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    MIENTRAS        reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    FOR             reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    IF              reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    PARSE           reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    TRUNC           reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    FLOAT           reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    STRINGNATIVE    reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    TYPEOF          reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    PUSH            reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    POP             reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    LENGTH          reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    BREAK           reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    CONTINUE        reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    MUTABLE         reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    STRUCT          reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    END             reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    ELSEIF          reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    ELSE            reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    PARENTESISC     reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    COMA            reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    PCOMA           reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    CORCHETEC       reduce using rule 188 (exp -> exp DOBLEIGUAL exp .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136

  ! MAS             [ reduce using rule 188 (exp -> exp DOBLEIGUAL exp .) ]
  ! MENOS           [ reduce using rule 188 (exp -> exp DOBLEIGUAL exp .) ]
  ! POR             [ reduce using rule 188 (exp -> exp DOBLEIGUAL exp .) ]
  ! DIVIDIDO        [ reduce using rule 188 (exp -> exp DOBLEIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 188 (exp -> exp DOBLEIGUAL exp .) ]
  ! PORCENTAJE      [ reduce using rule 188 (exp -> exp DOBLEIGUAL exp .) ]
  ! MAYOR           [ shift and go to state 137 ]
  ! MENOR           [ shift and go to state 138 ]
  ! MAYORIGUAL      [ shift and go to state 139 ]
  ! MENORIGUAL      [ shift and go to state 140 ]
  ! DOBLEIGUAL      [ shift and go to state 141 ]
  ! NOIGUAL         [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]
  ! DOSP            [ shift and go to state 145 ]


state 269

    (189) exp -> exp NOIGUAL exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    MAYOR           reduce using rule 189 (exp -> exp NOIGUAL exp .)
    MENOR           reduce using rule 189 (exp -> exp NOIGUAL exp .)
    MAYORIGUAL      reduce using rule 189 (exp -> exp NOIGUAL exp .)
    MENORIGUAL      reduce using rule 189 (exp -> exp NOIGUAL exp .)
    DOBLEIGUAL      reduce using rule 189 (exp -> exp NOIGUAL exp .)
    NOIGUAL         reduce using rule 189 (exp -> exp NOIGUAL exp .)
    OR              reduce using rule 189 (exp -> exp NOIGUAL exp .)
    AND             reduce using rule 189 (exp -> exp NOIGUAL exp .)
    DOSP            reduce using rule 189 (exp -> exp NOIGUAL exp .)
    PRINT           reduce using rule 189 (exp -> exp NOIGUAL exp .)
    PRINTLN         reduce using rule 189 (exp -> exp NOIGUAL exp .)
    ID              reduce using rule 189 (exp -> exp NOIGUAL exp .)
    GLOBAL          reduce using rule 189 (exp -> exp NOIGUAL exp .)
    RETURN          reduce using rule 189 (exp -> exp NOIGUAL exp .)
    MIENTRAS        reduce using rule 189 (exp -> exp NOIGUAL exp .)
    FOR             reduce using rule 189 (exp -> exp NOIGUAL exp .)
    IF              reduce using rule 189 (exp -> exp NOIGUAL exp .)
    PARSE           reduce using rule 189 (exp -> exp NOIGUAL exp .)
    TRUNC           reduce using rule 189 (exp -> exp NOIGUAL exp .)
    FLOAT           reduce using rule 189 (exp -> exp NOIGUAL exp .)
    STRINGNATIVE    reduce using rule 189 (exp -> exp NOIGUAL exp .)
    TYPEOF          reduce using rule 189 (exp -> exp NOIGUAL exp .)
    PUSH            reduce using rule 189 (exp -> exp NOIGUAL exp .)
    POP             reduce using rule 189 (exp -> exp NOIGUAL exp .)
    LENGTH          reduce using rule 189 (exp -> exp NOIGUAL exp .)
    BREAK           reduce using rule 189 (exp -> exp NOIGUAL exp .)
    CONTINUE        reduce using rule 189 (exp -> exp NOIGUAL exp .)
    MUTABLE         reduce using rule 189 (exp -> exp NOIGUAL exp .)
    STRUCT          reduce using rule 189 (exp -> exp NOIGUAL exp .)
    END             reduce using rule 189 (exp -> exp NOIGUAL exp .)
    ELSEIF          reduce using rule 189 (exp -> exp NOIGUAL exp .)
    ELSE            reduce using rule 189 (exp -> exp NOIGUAL exp .)
    PARENTESISC     reduce using rule 189 (exp -> exp NOIGUAL exp .)
    COMA            reduce using rule 189 (exp -> exp NOIGUAL exp .)
    PCOMA           reduce using rule 189 (exp -> exp NOIGUAL exp .)
    CORCHETEC       reduce using rule 189 (exp -> exp NOIGUAL exp .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136

  ! MAS             [ reduce using rule 189 (exp -> exp NOIGUAL exp .) ]
  ! MENOS           [ reduce using rule 189 (exp -> exp NOIGUAL exp .) ]
  ! POR             [ reduce using rule 189 (exp -> exp NOIGUAL exp .) ]
  ! DIVIDIDO        [ reduce using rule 189 (exp -> exp NOIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 189 (exp -> exp NOIGUAL exp .) ]
  ! PORCENTAJE      [ reduce using rule 189 (exp -> exp NOIGUAL exp .) ]
  ! MAYOR           [ shift and go to state 137 ]
  ! MENOR           [ shift and go to state 138 ]
  ! MAYORIGUAL      [ shift and go to state 139 ]
  ! MENORIGUAL      [ shift and go to state 140 ]
  ! DOBLEIGUAL      [ shift and go to state 141 ]
  ! NOIGUAL         [ shift and go to state 142 ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]
  ! DOSP            [ shift and go to state 145 ]


state 270

    (190) exp -> exp OR exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    OR              reduce using rule 190 (exp -> exp OR exp .)
    AND             reduce using rule 190 (exp -> exp OR exp .)
    DOSP            reduce using rule 190 (exp -> exp OR exp .)
    PRINT           reduce using rule 190 (exp -> exp OR exp .)
    PRINTLN         reduce using rule 190 (exp -> exp OR exp .)
    ID              reduce using rule 190 (exp -> exp OR exp .)
    GLOBAL          reduce using rule 190 (exp -> exp OR exp .)
    RETURN          reduce using rule 190 (exp -> exp OR exp .)
    MIENTRAS        reduce using rule 190 (exp -> exp OR exp .)
    FOR             reduce using rule 190 (exp -> exp OR exp .)
    IF              reduce using rule 190 (exp -> exp OR exp .)
    PARSE           reduce using rule 190 (exp -> exp OR exp .)
    TRUNC           reduce using rule 190 (exp -> exp OR exp .)
    FLOAT           reduce using rule 190 (exp -> exp OR exp .)
    STRINGNATIVE    reduce using rule 190 (exp -> exp OR exp .)
    TYPEOF          reduce using rule 190 (exp -> exp OR exp .)
    PUSH            reduce using rule 190 (exp -> exp OR exp .)
    POP             reduce using rule 190 (exp -> exp OR exp .)
    LENGTH          reduce using rule 190 (exp -> exp OR exp .)
    BREAK           reduce using rule 190 (exp -> exp OR exp .)
    CONTINUE        reduce using rule 190 (exp -> exp OR exp .)
    MUTABLE         reduce using rule 190 (exp -> exp OR exp .)
    STRUCT          reduce using rule 190 (exp -> exp OR exp .)
    END             reduce using rule 190 (exp -> exp OR exp .)
    ELSEIF          reduce using rule 190 (exp -> exp OR exp .)
    ELSE            reduce using rule 190 (exp -> exp OR exp .)
    PARENTESISC     reduce using rule 190 (exp -> exp OR exp .)
    COMA            reduce using rule 190 (exp -> exp OR exp .)
    PCOMA           reduce using rule 190 (exp -> exp OR exp .)
    CORCHETEC       reduce using rule 190 (exp -> exp OR exp .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142

  ! MAS             [ reduce using rule 190 (exp -> exp OR exp .) ]
  ! MENOS           [ reduce using rule 190 (exp -> exp OR exp .) ]
  ! POR             [ reduce using rule 190 (exp -> exp OR exp .) ]
  ! DIVIDIDO        [ reduce using rule 190 (exp -> exp OR exp .) ]
  ! POTENCIA        [ reduce using rule 190 (exp -> exp OR exp .) ]
  ! PORCENTAJE      [ reduce using rule 190 (exp -> exp OR exp .) ]
  ! MAYOR           [ reduce using rule 190 (exp -> exp OR exp .) ]
  ! MENOR           [ reduce using rule 190 (exp -> exp OR exp .) ]
  ! MAYORIGUAL      [ reduce using rule 190 (exp -> exp OR exp .) ]
  ! MENORIGUAL      [ reduce using rule 190 (exp -> exp OR exp .) ]
  ! DOBLEIGUAL      [ reduce using rule 190 (exp -> exp OR exp .) ]
  ! NOIGUAL         [ reduce using rule 190 (exp -> exp OR exp .) ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]
  ! DOSP            [ shift and go to state 145 ]


state 271

    (191) exp -> exp AND exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    OR              reduce using rule 191 (exp -> exp AND exp .)
    AND             reduce using rule 191 (exp -> exp AND exp .)
    DOSP            reduce using rule 191 (exp -> exp AND exp .)
    PRINT           reduce using rule 191 (exp -> exp AND exp .)
    PRINTLN         reduce using rule 191 (exp -> exp AND exp .)
    ID              reduce using rule 191 (exp -> exp AND exp .)
    GLOBAL          reduce using rule 191 (exp -> exp AND exp .)
    RETURN          reduce using rule 191 (exp -> exp AND exp .)
    MIENTRAS        reduce using rule 191 (exp -> exp AND exp .)
    FOR             reduce using rule 191 (exp -> exp AND exp .)
    IF              reduce using rule 191 (exp -> exp AND exp .)
    PARSE           reduce using rule 191 (exp -> exp AND exp .)
    TRUNC           reduce using rule 191 (exp -> exp AND exp .)
    FLOAT           reduce using rule 191 (exp -> exp AND exp .)
    STRINGNATIVE    reduce using rule 191 (exp -> exp AND exp .)
    TYPEOF          reduce using rule 191 (exp -> exp AND exp .)
    PUSH            reduce using rule 191 (exp -> exp AND exp .)
    POP             reduce using rule 191 (exp -> exp AND exp .)
    LENGTH          reduce using rule 191 (exp -> exp AND exp .)
    BREAK           reduce using rule 191 (exp -> exp AND exp .)
    CONTINUE        reduce using rule 191 (exp -> exp AND exp .)
    MUTABLE         reduce using rule 191 (exp -> exp AND exp .)
    STRUCT          reduce using rule 191 (exp -> exp AND exp .)
    END             reduce using rule 191 (exp -> exp AND exp .)
    ELSEIF          reduce using rule 191 (exp -> exp AND exp .)
    ELSE            reduce using rule 191 (exp -> exp AND exp .)
    PARENTESISC     reduce using rule 191 (exp -> exp AND exp .)
    COMA            reduce using rule 191 (exp -> exp AND exp .)
    PCOMA           reduce using rule 191 (exp -> exp AND exp .)
    CORCHETEC       reduce using rule 191 (exp -> exp AND exp .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142

  ! MAS             [ reduce using rule 191 (exp -> exp AND exp .) ]
  ! MENOS           [ reduce using rule 191 (exp -> exp AND exp .) ]
  ! POR             [ reduce using rule 191 (exp -> exp AND exp .) ]
  ! DIVIDIDO        [ reduce using rule 191 (exp -> exp AND exp .) ]
  ! POTENCIA        [ reduce using rule 191 (exp -> exp AND exp .) ]
  ! PORCENTAJE      [ reduce using rule 191 (exp -> exp AND exp .) ]
  ! MAYOR           [ reduce using rule 191 (exp -> exp AND exp .) ]
  ! MENOR           [ reduce using rule 191 (exp -> exp AND exp .) ]
  ! MAYORIGUAL      [ reduce using rule 191 (exp -> exp AND exp .) ]
  ! MENORIGUAL      [ reduce using rule 191 (exp -> exp AND exp .) ]
  ! DOBLEIGUAL      [ reduce using rule 191 (exp -> exp AND exp .) ]
  ! NOIGUAL         [ reduce using rule 191 (exp -> exp AND exp .) ]
  ! OR              [ shift and go to state 143 ]
  ! AND             [ shift and go to state 144 ]
  ! DOSP            [ shift and go to state 145 ]


state 272

    (209) exp -> exp DOSP exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for PORCENTAJE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for DOSP resolved as shift
    PRINT           reduce using rule 209 (exp -> exp DOSP exp .)
    PRINTLN         reduce using rule 209 (exp -> exp DOSP exp .)
    ID              reduce using rule 209 (exp -> exp DOSP exp .)
    GLOBAL          reduce using rule 209 (exp -> exp DOSP exp .)
    RETURN          reduce using rule 209 (exp -> exp DOSP exp .)
    MIENTRAS        reduce using rule 209 (exp -> exp DOSP exp .)
    FOR             reduce using rule 209 (exp -> exp DOSP exp .)
    IF              reduce using rule 209 (exp -> exp DOSP exp .)
    PARSE           reduce using rule 209 (exp -> exp DOSP exp .)
    TRUNC           reduce using rule 209 (exp -> exp DOSP exp .)
    FLOAT           reduce using rule 209 (exp -> exp DOSP exp .)
    STRINGNATIVE    reduce using rule 209 (exp -> exp DOSP exp .)
    TYPEOF          reduce using rule 209 (exp -> exp DOSP exp .)
    PUSH            reduce using rule 209 (exp -> exp DOSP exp .)
    POP             reduce using rule 209 (exp -> exp DOSP exp .)
    LENGTH          reduce using rule 209 (exp -> exp DOSP exp .)
    BREAK           reduce using rule 209 (exp -> exp DOSP exp .)
    CONTINUE        reduce using rule 209 (exp -> exp DOSP exp .)
    MUTABLE         reduce using rule 209 (exp -> exp DOSP exp .)
    STRUCT          reduce using rule 209 (exp -> exp DOSP exp .)
    END             reduce using rule 209 (exp -> exp DOSP exp .)
    ELSEIF          reduce using rule 209 (exp -> exp DOSP exp .)
    ELSE            reduce using rule 209 (exp -> exp DOSP exp .)
    PARENTESISC     reduce using rule 209 (exp -> exp DOSP exp .)
    COMA            reduce using rule 209 (exp -> exp DOSP exp .)
    PCOMA           reduce using rule 209 (exp -> exp DOSP exp .)
    CORCHETEC       reduce using rule 209 (exp -> exp DOSP exp .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145

  ! MAS             [ reduce using rule 209 (exp -> exp DOSP exp .) ]
  ! MENOS           [ reduce using rule 209 (exp -> exp DOSP exp .) ]
  ! POR             [ reduce using rule 209 (exp -> exp DOSP exp .) ]
  ! DIVIDIDO        [ reduce using rule 209 (exp -> exp DOSP exp .) ]
  ! POTENCIA        [ reduce using rule 209 (exp -> exp DOSP exp .) ]
  ! PORCENTAJE      [ reduce using rule 209 (exp -> exp DOSP exp .) ]
  ! MAYOR           [ reduce using rule 209 (exp -> exp DOSP exp .) ]
  ! MENOR           [ reduce using rule 209 (exp -> exp DOSP exp .) ]
  ! MAYORIGUAL      [ reduce using rule 209 (exp -> exp DOSP exp .) ]
  ! MENORIGUAL      [ reduce using rule 209 (exp -> exp DOSP exp .) ]
  ! DOBLEIGUAL      [ reduce using rule 209 (exp -> exp DOSP exp .) ]
  ! NOIGUAL         [ reduce using rule 209 (exp -> exp DOSP exp .) ]
  ! OR              [ reduce using rule 209 (exp -> exp DOSP exp .) ]
  ! AND             [ reduce using rule 209 (exp -> exp DOSP exp .) ]
  ! DOSP            [ reduce using rule 209 (exp -> exp DOSP exp .) ]


state 273

    (167) retorno -> RETURN exp . PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PCOMA           shift and go to state 357
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 274

    (122) Break -> BREAK PCOMA .

    END             reduce using rule 122 (Break -> BREAK PCOMA .)
    PRINT           reduce using rule 122 (Break -> BREAK PCOMA .)
    PRINTLN         reduce using rule 122 (Break -> BREAK PCOMA .)
    ID              reduce using rule 122 (Break -> BREAK PCOMA .)
    GLOBAL          reduce using rule 122 (Break -> BREAK PCOMA .)
    RETURN          reduce using rule 122 (Break -> BREAK PCOMA .)
    FOR             reduce using rule 122 (Break -> BREAK PCOMA .)
    MIENTRAS        reduce using rule 122 (Break -> BREAK PCOMA .)
    IF              reduce using rule 122 (Break -> BREAK PCOMA .)
    PARSE           reduce using rule 122 (Break -> BREAK PCOMA .)
    TRUNC           reduce using rule 122 (Break -> BREAK PCOMA .)
    FLOAT           reduce using rule 122 (Break -> BREAK PCOMA .)
    STRINGNATIVE    reduce using rule 122 (Break -> BREAK PCOMA .)
    TYPEOF          reduce using rule 122 (Break -> BREAK PCOMA .)
    PUSH            reduce using rule 122 (Break -> BREAK PCOMA .)
    POP             reduce using rule 122 (Break -> BREAK PCOMA .)
    LENGTH          reduce using rule 122 (Break -> BREAK PCOMA .)
    BREAK           reduce using rule 122 (Break -> BREAK PCOMA .)
    CONTINUE        reduce using rule 122 (Break -> BREAK PCOMA .)
    MUTABLE         reduce using rule 122 (Break -> BREAK PCOMA .)
    STRUCT          reduce using rule 122 (Break -> BREAK PCOMA .)
    ELSEIF          reduce using rule 122 (Break -> BREAK PCOMA .)
    ELSE            reduce using rule 122 (Break -> BREAK PCOMA .)


state 275

    (123) Continue -> CONTINUE PCOMA .

    END             reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    PRINT           reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    PRINTLN         reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    ID              reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    GLOBAL          reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    RETURN          reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    FOR             reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    MIENTRAS        reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    IF              reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    PARSE           reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    TRUNC           reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    FLOAT           reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    STRINGNATIVE    reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    TYPEOF          reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    PUSH            reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    POP             reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    LENGTH          reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    BREAK           reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    CONTINUE        reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    MUTABLE         reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    STRUCT          reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    ELSEIF          reduce using rule 123 (Continue -> CONTINUE PCOMA .)
    ELSE            reduce using rule 123 (Continue -> CONTINUE PCOMA .)


state 276

    (210) exp -> ID PARENTESISA parametersCall . PARENTESISC
    (73) parametersCall -> parametersCall . COMA exp

    PARENTESISC     shift and go to state 358
    COMA            shift and go to state 219


state 277

    (211) exp -> ID PARENTESISA PARENTESISC .

    MAS             reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    MENOS           reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    POR             reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    DIVIDIDO        reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    POTENCIA        reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    PORCENTAJE      reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    MAYOR           reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    MENOR           reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    MAYORIGUAL      reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    MENORIGUAL      reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    DOBLEIGUAL      reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    NOIGUAL         reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    OR              reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    AND             reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    DOSP            reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    PRINT           reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    PRINTLN         reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    ID              reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    GLOBAL          reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    RETURN          reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    MIENTRAS        reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    FOR             reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    IF              reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    PARSE           reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    TRUNC           reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    FLOAT           reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    STRINGNATIVE    reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    TYPEOF          reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    PUSH            reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    POP             reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    LENGTH          reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    BREAK           reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    CONTINUE        reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    MUTABLE         reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    STRUCT          reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    END             reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    ELSEIF          reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    ELSE            reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    PARENTESISC     reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    COMA            reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    PCOMA           reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)
    CORCHETEC       reduce using rule 211 (exp -> ID PARENTESISA PARENTESISC .)


state 278

    (227) listArray -> listArray CORCHETEA . exp CORCHETEC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 359
    array                          shift and go to state 83

state 279

    (228) listArray -> CORCHETEA exp . CORCHETEC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    CORCHETEC       shift and go to state 360
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 280

    (195) exp -> PUSH NOT PARENTESISA . exp COMA parametersCall PARENTESISC
    (196) exp -> PUSH NOT PARENTESISA . ID COMA parametersCall PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 362
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 361
    array                          shift and go to state 83

state 281

    (214) exp -> PARENTESISA exp PARENTESISC .

    MAS             reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    MENOS           reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    POR             reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    DIVIDIDO        reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    POTENCIA        reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    PORCENTAJE      reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    MAYOR           reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    MENOR           reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    MAYORIGUAL      reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    MENORIGUAL      reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    DOBLEIGUAL      reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    NOIGUAL         reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    OR              reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    AND             reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    DOSP            reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    PRINT           reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    PRINTLN         reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    ID              reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    GLOBAL          reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    RETURN          reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    MIENTRAS        reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    FOR             reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    IF              reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    PARSE           reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    TRUNC           reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    FLOAT           reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    STRINGNATIVE    reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    TYPEOF          reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    PUSH            reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    POP             reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    LENGTH          reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    BREAK           reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    CONTINUE        reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    MUTABLE         reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    STRUCT          reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    END             reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    ELSEIF          reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    ELSE            reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    PARENTESISC     reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    COMA            reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    PCOMA           reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)
    CORCHETEC       reduce using rule 214 (exp -> PARENTESISA exp PARENTESISC .)


state 282

    (197) exp -> POP NOT PARENTESISA . exp PARENTESISC
    (198) exp -> POP NOT PARENTESISA . ID PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 364
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 363
    array                          shift and go to state 83

state 283

    (199) exp -> LENGTH PARENTESISA exp . PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 365
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 284

    (200) exp -> LENGTH PARENTESISA ID . PARENTESISC
    (192) exp -> ID . attributes
    (210) exp -> ID . PARENTESISA parametersCall PARENTESISC
    (211) exp -> ID . PARENTESISA PARENTESISC
    (222) exp -> ID .
    (223) exp -> ID . listArray
    (193) attributes -> . attributes PUNTO ID
    (194) attributes -> . PUNTO ID
    (227) listArray -> . listArray CORCHETEA exp CORCHETEC
    (228) listArray -> . CORCHETEA exp CORCHETEC

  ! shift/reduce conflict for PARENTESISC resolved as shift
    PARENTESISC     shift and go to state 366
    PARENTESISA     shift and go to state 173
    MAS             reduce using rule 222 (exp -> ID .)
    MENOS           reduce using rule 222 (exp -> ID .)
    POR             reduce using rule 222 (exp -> ID .)
    DIVIDIDO        reduce using rule 222 (exp -> ID .)
    POTENCIA        reduce using rule 222 (exp -> ID .)
    PORCENTAJE      reduce using rule 222 (exp -> ID .)
    MAYOR           reduce using rule 222 (exp -> ID .)
    MENOR           reduce using rule 222 (exp -> ID .)
    MAYORIGUAL      reduce using rule 222 (exp -> ID .)
    MENORIGUAL      reduce using rule 222 (exp -> ID .)
    DOBLEIGUAL      reduce using rule 222 (exp -> ID .)
    NOIGUAL         reduce using rule 222 (exp -> ID .)
    OR              reduce using rule 222 (exp -> ID .)
    AND             reduce using rule 222 (exp -> ID .)
    DOSP            reduce using rule 222 (exp -> ID .)
    PUNTO           shift and go to state 68
    CORCHETEA       shift and go to state 175

  ! PARENTESISC     [ reduce using rule 222 (exp -> ID .) ]

    attributes                     shift and go to state 172
    listArray                      shift and go to state 174

state 285

    (201) exp -> PARSE PARENTESISA type . COMA exp PARENTESISC

    COMA            shift and go to state 367


state 286

    (202) exp -> TRUNC PARENTESISA type . COMA exp PARENTESISC

    COMA            shift and go to state 368


state 287

    (203) exp -> TRUNC PARENTESISA exp . PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 369
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 288

    (204) exp -> FLOAT PARENTESISA exp . PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 370
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 289

    (205) exp -> STRINGNATIVE PARENTESISA exp . PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 371
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 290

    (206) exp -> TYPEOF PARENTESISA exp . PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 372
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 291

    (229) exp -> UPPERCASE PARENTESISA exp . PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 373
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 292

    (230) exp -> LOWERCASE PARENTESISA exp . PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 374
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 293

    (231) exp -> LOGARITMOB10 PARENTESISA exp . PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 375
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 294

    (232) exp -> LOGARITMONOB10 PARENTESISA exp . COMA exp PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    COMA            shift and go to state 376
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 295

    (233) exp -> SIN PARENTESISA exp . PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 377
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 296

    (234) exp -> COS PARENTESISA exp . PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 378
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 297

    (235) exp -> TAN PARENTESISA exp . PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 379
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 298

    (236) exp -> SQRT PARENTESISA exp . PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 380
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 299

    (208) array -> CORCHETEA parametersCall CORCHETEC .

    MAS             reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    MENOS           reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    POR             reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    DIVIDIDO        reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    POTENCIA        reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    PORCENTAJE      reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    MAYOR           reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    MENOR           reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    MAYORIGUAL      reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    MENORIGUAL      reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    DOBLEIGUAL      reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    NOIGUAL         reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    OR              reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    AND             reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    DOSP            reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    PRINT           reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    PRINTLN         reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    ID              reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    GLOBAL          reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    RETURN          reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    MIENTRAS        reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    FOR             reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    IF              reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    PARSE           reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    TRUNC           reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    FLOAT           reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    STRINGNATIVE    reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    TYPEOF          reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    PUSH            reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    POP             reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    LENGTH          reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    BREAK           reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    CONTINUE        reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    MUTABLE         reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    STRUCT          reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    END             reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    ELSEIF          reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    ELSE            reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    PARENTESISC     reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    COMA            reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    PCOMA           reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)
    CORCHETEC       reduce using rule 208 (array -> CORCHETEA parametersCall CORCHETEC .)


state 300

    (70) forLoop -> FOR ID IN exp . block_loops END PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp
    (124) block_loops -> . block_loops Print
    (125) block_loops -> . block_loops Println
    (126) block_loops -> . block_loops Asignacion
    (127) block_loops -> . block_loops retorno
    (128) block_loops -> . block_loops functionCall
    (129) block_loops -> . block_loops forLoop
    (130) block_loops -> . block_loops whileLoop
    (131) block_loops -> . block_loops IfCondition
    (132) block_loops -> . block_loops parseNative
    (133) block_loops -> . block_loops truncNative
    (134) block_loops -> . block_loops floatNative
    (135) block_loops -> . block_loops stringNative
    (136) block_loops -> . block_loops typeOfNative
    (137) block_loops -> . block_loops pushArray
    (138) block_loops -> . block_loops popArray
    (139) block_loops -> . block_loops lengthArray
    (140) block_loops -> . block_loops assignmentArray
    (141) block_loops -> . block_loops Break
    (142) block_loops -> . block_loops Continue
    (143) block_loops -> . block_loops Struct
    (144) block_loops -> . block_loops structAccess
    (145) block_loops -> . Print
    (146) block_loops -> . Println
    (147) block_loops -> . Asignacion
    (148) block_loops -> . retorno
    (149) block_loops -> . functionCall
    (150) block_loops -> . whileLoop
    (151) block_loops -> . forLoop
    (152) block_loops -> . IfCondition
    (153) block_loops -> . parseNative
    (154) block_loops -> . truncNative
    (155) block_loops -> . floatNative
    (156) block_loops -> . stringNative
    (157) block_loops -> . typeOfNative
    (158) block_loops -> . pushArray
    (159) block_loops -> . popArray
    (160) block_loops -> . lengthArray
    (161) block_loops -> . assignmentArray
    (162) block_loops -> . Break
    (163) block_loops -> . Continue
    (164) block_loops -> . Struct
    (165) block_loops -> . structAccess
    (166) block_loops -> . empty
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (167) retorno -> . RETURN exp PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (122) Break -> . BREAK PCOMA
    (123) Continue -> . CONTINUE PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA
    (68) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for GLOBAL resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARSE resolved as shift
  ! shift/reduce conflict for TRUNC resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRINGNATIVE resolved as shift
  ! shift/reduce conflict for TYPEOF resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for LENGTH resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for MUTABLE resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    RETURN          shift and go to state 168
    MIENTRAS        shift and go to state 28
    FOR             shift and go to state 29
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    BREAK           shift and go to state 169
    CONTINUE        shift and go to state 170
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40
    END             reduce using rule 68 (empty -> .)

  ! PRINT           [ reduce using rule 68 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 68 (empty -> .) ]
  ! ID              [ reduce using rule 68 (empty -> .) ]
  ! GLOBAL          [ reduce using rule 68 (empty -> .) ]
  ! RETURN          [ reduce using rule 68 (empty -> .) ]
  ! FOR             [ reduce using rule 68 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 68 (empty -> .) ]
  ! IF              [ reduce using rule 68 (empty -> .) ]
  ! PARSE           [ reduce using rule 68 (empty -> .) ]
  ! TRUNC           [ reduce using rule 68 (empty -> .) ]
  ! FLOAT           [ reduce using rule 68 (empty -> .) ]
  ! STRINGNATIVE    [ reduce using rule 68 (empty -> .) ]
  ! TYPEOF          [ reduce using rule 68 (empty -> .) ]
  ! PUSH            [ reduce using rule 68 (empty -> .) ]
  ! POP             [ reduce using rule 68 (empty -> .) ]
  ! LENGTH          [ reduce using rule 68 (empty -> .) ]
  ! BREAK           [ reduce using rule 68 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 68 (empty -> .) ]
  ! MUTABLE         [ reduce using rule 68 (empty -> .) ]
  ! STRUCT          [ reduce using rule 68 (empty -> .) ]

    block_loops                    shift and go to state 381
    Print                          shift and go to state 146
    Println                        shift and go to state 147
    Asignacion                     shift and go to state 148
    retorno                        shift and go to state 149
    functionCall                   shift and go to state 150
    forLoop                        shift and go to state 151
    whileLoop                      shift and go to state 152
    IfCondition                    shift and go to state 153
    parseNative                    shift and go to state 154
    truncNative                    shift and go to state 155
    floatNative                    shift and go to state 156
    stringNative                   shift and go to state 157
    typeOfNative                   shift and go to state 158
    pushArray                      shift and go to state 159
    popArray                       shift and go to state 160
    lengthArray                    shift and go to state 161
    assignmentArray                shift and go to state 162
    Break                          shift and go to state 163
    Continue                       shift and go to state 164
    Struct                         shift and go to state 165
    structAccess                   shift and go to state 166
    empty                          shift and go to state 167

state 301

    (62) IfCondition -> IF exp block_loops elseIfSt . elseSt END PCOMA
    (63) elseIfSt -> elseIfSt . ELSEIF exp block_loops
    (66) elseSt -> . ELSE block_loops
    (67) elseSt -> . empty
    (68) empty -> .

    ELSEIF          shift and go to state 383
    ELSE            shift and go to state 384
    END             reduce using rule 68 (empty -> .)

    elseSt                         shift and go to state 382
    empty                          shift and go to state 385

state 302

    (64) elseIfSt -> ELSEIF . exp block_loops
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 386
    array                          shift and go to state 83

state 303

    (65) elseIfSt -> empty .

    ELSEIF          reduce using rule 65 (elseIfSt -> empty .)
    ELSE            reduce using rule 65 (elseIfSt -> empty .)
    END             reduce using rule 65 (elseIfSt -> empty .)


state 304

    (56) parseNative -> PARSE PARENTESISA type COMA . exp PARENTESISC PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 387
    array                          shift and go to state 83

state 305

    (57) truncNative -> TRUNC PARENTESISA type COMA . exp PARENTESISC PCOMA
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 388
    array                          shift and go to state 83

state 306

    (58) truncNative -> TRUNC PARENTESISA exp PARENTESISC . PCOMA

    PCOMA           shift and go to state 389


state 307

    (59) floatNative -> FLOAT PARENTESISA exp PARENTESISC . PCOMA

    PCOMA           shift and go to state 390


state 308

    (60) stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC . PCOMA

    PCOMA           shift and go to state 391


state 309

    (61) typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC . PCOMA

    PCOMA           shift and go to state 392


state 310

    (50) pushArray -> PUSH NOT PARENTESISA exp . COMA parametersCall PARENTESISC PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    COMA            shift and go to state 393
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 311

    (51) pushArray -> PUSH NOT PARENTESISA ID . COMA parametersCall PARENTESISC PCOMA
    (192) exp -> ID . attributes
    (210) exp -> ID . PARENTESISA parametersCall PARENTESISC
    (211) exp -> ID . PARENTESISA PARENTESISC
    (222) exp -> ID .
    (223) exp -> ID . listArray
    (193) attributes -> . attributes PUNTO ID
    (194) attributes -> . PUNTO ID
    (227) listArray -> . listArray CORCHETEA exp CORCHETEC
    (228) listArray -> . CORCHETEA exp CORCHETEC

  ! shift/reduce conflict for COMA resolved as shift
    COMA            shift and go to state 394
    PARENTESISA     shift and go to state 173
    MAS             reduce using rule 222 (exp -> ID .)
    MENOS           reduce using rule 222 (exp -> ID .)
    POR             reduce using rule 222 (exp -> ID .)
    DIVIDIDO        reduce using rule 222 (exp -> ID .)
    POTENCIA        reduce using rule 222 (exp -> ID .)
    PORCENTAJE      reduce using rule 222 (exp -> ID .)
    MAYOR           reduce using rule 222 (exp -> ID .)
    MENOR           reduce using rule 222 (exp -> ID .)
    MAYORIGUAL      reduce using rule 222 (exp -> ID .)
    MENORIGUAL      reduce using rule 222 (exp -> ID .)
    DOBLEIGUAL      reduce using rule 222 (exp -> ID .)
    NOIGUAL         reduce using rule 222 (exp -> ID .)
    OR              reduce using rule 222 (exp -> ID .)
    AND             reduce using rule 222 (exp -> ID .)
    DOSP            reduce using rule 222 (exp -> ID .)
    PUNTO           shift and go to state 68
    CORCHETEA       shift and go to state 175

  ! COMA            [ reduce using rule 222 (exp -> ID .) ]

    attributes                     shift and go to state 172
    listArray                      shift and go to state 174

state 312

    (52) popArray -> POP NOT PARENTESISA exp . PARENTESISC PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 395
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 313

    (53) popArray -> POP NOT PARENTESISA ID . PARENTESISC PCOMA
    (192) exp -> ID . attributes
    (210) exp -> ID . PARENTESISA parametersCall PARENTESISC
    (211) exp -> ID . PARENTESISA PARENTESISC
    (222) exp -> ID .
    (223) exp -> ID . listArray
    (193) attributes -> . attributes PUNTO ID
    (194) attributes -> . PUNTO ID
    (227) listArray -> . listArray CORCHETEA exp CORCHETEC
    (228) listArray -> . CORCHETEA exp CORCHETEC

  ! shift/reduce conflict for PARENTESISC resolved as shift
    PARENTESISC     shift and go to state 396
    PARENTESISA     shift and go to state 173
    MAS             reduce using rule 222 (exp -> ID .)
    MENOS           reduce using rule 222 (exp -> ID .)
    POR             reduce using rule 222 (exp -> ID .)
    DIVIDIDO        reduce using rule 222 (exp -> ID .)
    POTENCIA        reduce using rule 222 (exp -> ID .)
    PORCENTAJE      reduce using rule 222 (exp -> ID .)
    MAYOR           reduce using rule 222 (exp -> ID .)
    MENOR           reduce using rule 222 (exp -> ID .)
    MAYORIGUAL      reduce using rule 222 (exp -> ID .)
    MENORIGUAL      reduce using rule 222 (exp -> ID .)
    DOBLEIGUAL      reduce using rule 222 (exp -> ID .)
    NOIGUAL         reduce using rule 222 (exp -> ID .)
    OR              reduce using rule 222 (exp -> ID .)
    AND             reduce using rule 222 (exp -> ID .)
    DOSP            reduce using rule 222 (exp -> ID .)
    PUNTO           shift and go to state 68
    CORCHETEA       shift and go to state 175

  ! PARENTESISC     [ reduce using rule 222 (exp -> ID .) ]

    attributes                     shift and go to state 172
    listArray                      shift and go to state 174

state 314

    (54) lengthArray -> LENGTH PARENTESISA exp PARENTESISC . PCOMA

    PCOMA           shift and go to state 397


state 315

    (55) lengthArray -> LENGTH PARENTESISA ID PARENTESISC . PCOMA

    PCOMA           shift and go to state 398


state 316

    (41) Struct -> MUTABLE STRUCT ID bodyStruct . END PCOMA
    (43) bodyStruct -> bodyStruct . ID DOSP DOSP type PCOMA
    (44) bodyStruct -> bodyStruct . ID PCOMA
    (47) bodyStruct -> bodyStruct . ID DOSP DOSP ID PCOMA

    END             shift and go to state 399
    ID              shift and go to state 319


state 317

    (45) bodyStruct -> ID DOSP . DOSP type PCOMA
    (48) bodyStruct -> ID DOSP . DOSP ID PCOMA

    DOSP            shift and go to state 400


state 318

    (46) bodyStruct -> ID PCOMA .

    END             reduce using rule 46 (bodyStruct -> ID PCOMA .)
    ID              reduce using rule 46 (bodyStruct -> ID PCOMA .)


state 319

    (43) bodyStruct -> bodyStruct ID . DOSP DOSP type PCOMA
    (44) bodyStruct -> bodyStruct ID . PCOMA
    (47) bodyStruct -> bodyStruct ID . DOSP DOSP ID PCOMA

    DOSP            shift and go to state 401
    PCOMA           shift and go to state 402


state 320

    (42) Struct -> STRUCT ID bodyStruct END . PCOMA

    PCOMA           shift and go to state 403


state 321

    (168) Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .

    PRINT           reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    ID              reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    FOR             reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    IF              reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    PARSE           reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    TRUNC           reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    FLOAT           reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    PUSH            reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    POP             reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    LENGTH          reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    STRUCT          reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    $end            reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    END             reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    RETURN          reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    BREAK           reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)
    ELSE            reduce using rule 168 (Print -> PRINT PARENTESISA exp PARENTESISC PCOMA .)


state 322

    (169) Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .

    PRINT           reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    ID              reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    FOR             reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    IF              reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    PARSE           reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    TRUNC           reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    FLOAT           reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    PUSH            reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    POP             reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    LENGTH          reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    STRUCT          reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    $end            reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    END             reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    RETURN          reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    BREAK           reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)
    ELSE            reduce using rule 169 (Print -> PRINT PARENTESISA parametersCall PARENTESISC PCOMA .)


state 323

    (73) parametersCall -> parametersCall COMA exp .
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     reduce using rule 73 (parametersCall -> parametersCall COMA exp .)
    COMA            reduce using rule 73 (parametersCall -> parametersCall COMA exp .)
    CORCHETEC       reduce using rule 73 (parametersCall -> parametersCall COMA exp .)
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 324

    (170) Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .

    PRINT           reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    ID              reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    FOR             reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    IF              reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    PARSE           reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    TRUNC           reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    FLOAT           reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    PUSH            reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    POP             reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    LENGTH          reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    STRUCT          reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    $end            reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    END             reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    RETURN          reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    BREAK           reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)
    ELSE            reduce using rule 170 (Println -> PRINTLN PARENTESISA exp PARENTESISC PCOMA .)


state 325

    (172) Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .

    PRINT           reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    ID              reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    FOR             reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    IF              reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    PARSE           reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    TRUNC           reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    FLOAT           reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    PUSH            reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    POP             reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    LENGTH          reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    STRUCT          reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    $end            reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    END             reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    RETURN          reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    BREAK           reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)
    ELSE            reduce using rule 172 (Println -> PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA .)


state 326

    (81) parameters -> ID DOSP . DOSP type
    (82) parameters -> ID DOSP . DOSP ID

    DOSP            shift and go to state 404


state 327

    (75) create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC . block_function END PCOMA
    (83) block_function -> . block_function Print
    (84) block_function -> . block_function Println
    (85) block_function -> . block_function Asignacion
    (86) block_function -> . block_function retorno
    (87) block_function -> . block_function functionCall
    (88) block_function -> . block_function whileLoop
    (89) block_function -> . block_function forLoop
    (90) block_function -> . block_function IfCondition
    (91) block_function -> . block_function parseNative
    (92) block_function -> . block_function truncNative
    (93) block_function -> . block_function floatNative
    (94) block_function -> . block_function stringNative
    (95) block_function -> . block_function typeOfNative
    (96) block_function -> . block_function pushArray
    (97) block_function -> . block_function popArray
    (98) block_function -> . block_function lengthArray
    (99) block_function -> . block_function assignmentArray
    (100) block_function -> . block_function Struct
    (101) block_function -> . block_function structAccess
    (102) block_function -> . Print
    (103) block_function -> . Println
    (104) block_function -> . Asignacion
    (105) block_function -> . retorno
    (106) block_function -> . functionCall
    (107) block_function -> . whileLoop
    (108) block_function -> . forLoop
    (109) block_function -> . IfCondition
    (110) block_function -> . parseNative
    (111) block_function -> . truncNative
    (112) block_function -> . floatNative
    (113) block_function -> . stringNative
    (114) block_function -> . typeOfNative
    (115) block_function -> . pushArray
    (116) block_function -> . popArray
    (117) block_function -> . lengthArray
    (118) block_function -> . assignmentArray
    (119) block_function -> . Struct
    (120) block_function -> . structAccess
    (121) block_function -> . empty
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (167) retorno -> . RETURN exp PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA
    (68) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for GLOBAL resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARSE resolved as shift
  ! shift/reduce conflict for TRUNC resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRINGNATIVE resolved as shift
  ! shift/reduce conflict for TYPEOF resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for LENGTH resolved as shift
  ! shift/reduce conflict for MUTABLE resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    RETURN          shift and go to state 168
    MIENTRAS        shift and go to state 28
    FOR             shift and go to state 29
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40
    END             reduce using rule 68 (empty -> .)

  ! PRINT           [ reduce using rule 68 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 68 (empty -> .) ]
  ! ID              [ reduce using rule 68 (empty -> .) ]
  ! GLOBAL          [ reduce using rule 68 (empty -> .) ]
  ! RETURN          [ reduce using rule 68 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 68 (empty -> .) ]
  ! FOR             [ reduce using rule 68 (empty -> .) ]
  ! IF              [ reduce using rule 68 (empty -> .) ]
  ! PARSE           [ reduce using rule 68 (empty -> .) ]
  ! TRUNC           [ reduce using rule 68 (empty -> .) ]
  ! FLOAT           [ reduce using rule 68 (empty -> .) ]
  ! STRINGNATIVE    [ reduce using rule 68 (empty -> .) ]
  ! TYPEOF          [ reduce using rule 68 (empty -> .) ]
  ! PUSH            [ reduce using rule 68 (empty -> .) ]
  ! POP             [ reduce using rule 68 (empty -> .) ]
  ! LENGTH          [ reduce using rule 68 (empty -> .) ]
  ! MUTABLE         [ reduce using rule 68 (empty -> .) ]
  ! STRUCT          [ reduce using rule 68 (empty -> .) ]

    block_function                 shift and go to state 405
    Print                          shift and go to state 330
    Println                        shift and go to state 331
    Asignacion                     shift and go to state 332
    retorno                        shift and go to state 333
    functionCall                   shift and go to state 334
    whileLoop                      shift and go to state 335
    forLoop                        shift and go to state 336
    IfCondition                    shift and go to state 337
    parseNative                    shift and go to state 338
    truncNative                    shift and go to state 339
    floatNative                    shift and go to state 340
    stringNative                   shift and go to state 341
    typeOfNative                   shift and go to state 342
    pushArray                      shift and go to state 343
    popArray                       shift and go to state 344
    lengthArray                    shift and go to state 345
    assignmentArray                shift and go to state 346
    Struct                         shift and go to state 347
    structAccess                   shift and go to state 348
    empty                          shift and go to state 349

state 328

    (77) parameters -> parameters COMA . ID
    (78) parameters -> parameters COMA . ID DOSP DOSP type
    (79) parameters -> parameters COMA . ID DOSP DOSP ID

    ID              shift and go to state 406


state 329

    (76) create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function . END PCOMA
    (83) block_function -> block_function . Print
    (84) block_function -> block_function . Println
    (85) block_function -> block_function . Asignacion
    (86) block_function -> block_function . retorno
    (87) block_function -> block_function . functionCall
    (88) block_function -> block_function . whileLoop
    (89) block_function -> block_function . forLoop
    (90) block_function -> block_function . IfCondition
    (91) block_function -> block_function . parseNative
    (92) block_function -> block_function . truncNative
    (93) block_function -> block_function . floatNative
    (94) block_function -> block_function . stringNative
    (95) block_function -> block_function . typeOfNative
    (96) block_function -> block_function . pushArray
    (97) block_function -> block_function . popArray
    (98) block_function -> block_function . lengthArray
    (99) block_function -> block_function . assignmentArray
    (100) block_function -> block_function . Struct
    (101) block_function -> block_function . structAccess
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (167) retorno -> . RETURN exp PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA

    END             shift and go to state 407
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    RETURN          shift and go to state 168
    MIENTRAS        shift and go to state 28
    FOR             shift and go to state 29
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40

    Print                          shift and go to state 408
    Println                        shift and go to state 409
    Asignacion                     shift and go to state 410
    retorno                        shift and go to state 411
    functionCall                   shift and go to state 412
    whileLoop                      shift and go to state 413
    forLoop                        shift and go to state 414
    IfCondition                    shift and go to state 415
    parseNative                    shift and go to state 416
    truncNative                    shift and go to state 417
    floatNative                    shift and go to state 418
    stringNative                   shift and go to state 419
    typeOfNative                   shift and go to state 420
    pushArray                      shift and go to state 421
    popArray                       shift and go to state 422
    lengthArray                    shift and go to state 423
    assignmentArray                shift and go to state 424
    Struct                         shift and go to state 425
    structAccess                   shift and go to state 426

state 330

    (102) block_function -> Print .

    END             reduce using rule 102 (block_function -> Print .)
    PRINT           reduce using rule 102 (block_function -> Print .)
    PRINTLN         reduce using rule 102 (block_function -> Print .)
    ID              reduce using rule 102 (block_function -> Print .)
    GLOBAL          reduce using rule 102 (block_function -> Print .)
    RETURN          reduce using rule 102 (block_function -> Print .)
    MIENTRAS        reduce using rule 102 (block_function -> Print .)
    FOR             reduce using rule 102 (block_function -> Print .)
    IF              reduce using rule 102 (block_function -> Print .)
    PARSE           reduce using rule 102 (block_function -> Print .)
    TRUNC           reduce using rule 102 (block_function -> Print .)
    FLOAT           reduce using rule 102 (block_function -> Print .)
    STRINGNATIVE    reduce using rule 102 (block_function -> Print .)
    TYPEOF          reduce using rule 102 (block_function -> Print .)
    PUSH            reduce using rule 102 (block_function -> Print .)
    POP             reduce using rule 102 (block_function -> Print .)
    LENGTH          reduce using rule 102 (block_function -> Print .)
    MUTABLE         reduce using rule 102 (block_function -> Print .)
    STRUCT          reduce using rule 102 (block_function -> Print .)


state 331

    (103) block_function -> Println .

    END             reduce using rule 103 (block_function -> Println .)
    PRINT           reduce using rule 103 (block_function -> Println .)
    PRINTLN         reduce using rule 103 (block_function -> Println .)
    ID              reduce using rule 103 (block_function -> Println .)
    GLOBAL          reduce using rule 103 (block_function -> Println .)
    RETURN          reduce using rule 103 (block_function -> Println .)
    MIENTRAS        reduce using rule 103 (block_function -> Println .)
    FOR             reduce using rule 103 (block_function -> Println .)
    IF              reduce using rule 103 (block_function -> Println .)
    PARSE           reduce using rule 103 (block_function -> Println .)
    TRUNC           reduce using rule 103 (block_function -> Println .)
    FLOAT           reduce using rule 103 (block_function -> Println .)
    STRINGNATIVE    reduce using rule 103 (block_function -> Println .)
    TYPEOF          reduce using rule 103 (block_function -> Println .)
    PUSH            reduce using rule 103 (block_function -> Println .)
    POP             reduce using rule 103 (block_function -> Println .)
    LENGTH          reduce using rule 103 (block_function -> Println .)
    MUTABLE         reduce using rule 103 (block_function -> Println .)
    STRUCT          reduce using rule 103 (block_function -> Println .)


state 332

    (104) block_function -> Asignacion .

    END             reduce using rule 104 (block_function -> Asignacion .)
    PRINT           reduce using rule 104 (block_function -> Asignacion .)
    PRINTLN         reduce using rule 104 (block_function -> Asignacion .)
    ID              reduce using rule 104 (block_function -> Asignacion .)
    GLOBAL          reduce using rule 104 (block_function -> Asignacion .)
    RETURN          reduce using rule 104 (block_function -> Asignacion .)
    MIENTRAS        reduce using rule 104 (block_function -> Asignacion .)
    FOR             reduce using rule 104 (block_function -> Asignacion .)
    IF              reduce using rule 104 (block_function -> Asignacion .)
    PARSE           reduce using rule 104 (block_function -> Asignacion .)
    TRUNC           reduce using rule 104 (block_function -> Asignacion .)
    FLOAT           reduce using rule 104 (block_function -> Asignacion .)
    STRINGNATIVE    reduce using rule 104 (block_function -> Asignacion .)
    TYPEOF          reduce using rule 104 (block_function -> Asignacion .)
    PUSH            reduce using rule 104 (block_function -> Asignacion .)
    POP             reduce using rule 104 (block_function -> Asignacion .)
    LENGTH          reduce using rule 104 (block_function -> Asignacion .)
    MUTABLE         reduce using rule 104 (block_function -> Asignacion .)
    STRUCT          reduce using rule 104 (block_function -> Asignacion .)


state 333

    (105) block_function -> retorno .

    END             reduce using rule 105 (block_function -> retorno .)
    PRINT           reduce using rule 105 (block_function -> retorno .)
    PRINTLN         reduce using rule 105 (block_function -> retorno .)
    ID              reduce using rule 105 (block_function -> retorno .)
    GLOBAL          reduce using rule 105 (block_function -> retorno .)
    RETURN          reduce using rule 105 (block_function -> retorno .)
    MIENTRAS        reduce using rule 105 (block_function -> retorno .)
    FOR             reduce using rule 105 (block_function -> retorno .)
    IF              reduce using rule 105 (block_function -> retorno .)
    PARSE           reduce using rule 105 (block_function -> retorno .)
    TRUNC           reduce using rule 105 (block_function -> retorno .)
    FLOAT           reduce using rule 105 (block_function -> retorno .)
    STRINGNATIVE    reduce using rule 105 (block_function -> retorno .)
    TYPEOF          reduce using rule 105 (block_function -> retorno .)
    PUSH            reduce using rule 105 (block_function -> retorno .)
    POP             reduce using rule 105 (block_function -> retorno .)
    LENGTH          reduce using rule 105 (block_function -> retorno .)
    MUTABLE         reduce using rule 105 (block_function -> retorno .)
    STRUCT          reduce using rule 105 (block_function -> retorno .)


state 334

    (106) block_function -> functionCall .

    END             reduce using rule 106 (block_function -> functionCall .)
    PRINT           reduce using rule 106 (block_function -> functionCall .)
    PRINTLN         reduce using rule 106 (block_function -> functionCall .)
    ID              reduce using rule 106 (block_function -> functionCall .)
    GLOBAL          reduce using rule 106 (block_function -> functionCall .)
    RETURN          reduce using rule 106 (block_function -> functionCall .)
    MIENTRAS        reduce using rule 106 (block_function -> functionCall .)
    FOR             reduce using rule 106 (block_function -> functionCall .)
    IF              reduce using rule 106 (block_function -> functionCall .)
    PARSE           reduce using rule 106 (block_function -> functionCall .)
    TRUNC           reduce using rule 106 (block_function -> functionCall .)
    FLOAT           reduce using rule 106 (block_function -> functionCall .)
    STRINGNATIVE    reduce using rule 106 (block_function -> functionCall .)
    TYPEOF          reduce using rule 106 (block_function -> functionCall .)
    PUSH            reduce using rule 106 (block_function -> functionCall .)
    POP             reduce using rule 106 (block_function -> functionCall .)
    LENGTH          reduce using rule 106 (block_function -> functionCall .)
    MUTABLE         reduce using rule 106 (block_function -> functionCall .)
    STRUCT          reduce using rule 106 (block_function -> functionCall .)


state 335

    (107) block_function -> whileLoop .

    END             reduce using rule 107 (block_function -> whileLoop .)
    PRINT           reduce using rule 107 (block_function -> whileLoop .)
    PRINTLN         reduce using rule 107 (block_function -> whileLoop .)
    ID              reduce using rule 107 (block_function -> whileLoop .)
    GLOBAL          reduce using rule 107 (block_function -> whileLoop .)
    RETURN          reduce using rule 107 (block_function -> whileLoop .)
    MIENTRAS        reduce using rule 107 (block_function -> whileLoop .)
    FOR             reduce using rule 107 (block_function -> whileLoop .)
    IF              reduce using rule 107 (block_function -> whileLoop .)
    PARSE           reduce using rule 107 (block_function -> whileLoop .)
    TRUNC           reduce using rule 107 (block_function -> whileLoop .)
    FLOAT           reduce using rule 107 (block_function -> whileLoop .)
    STRINGNATIVE    reduce using rule 107 (block_function -> whileLoop .)
    TYPEOF          reduce using rule 107 (block_function -> whileLoop .)
    PUSH            reduce using rule 107 (block_function -> whileLoop .)
    POP             reduce using rule 107 (block_function -> whileLoop .)
    LENGTH          reduce using rule 107 (block_function -> whileLoop .)
    MUTABLE         reduce using rule 107 (block_function -> whileLoop .)
    STRUCT          reduce using rule 107 (block_function -> whileLoop .)


state 336

    (108) block_function -> forLoop .

    END             reduce using rule 108 (block_function -> forLoop .)
    PRINT           reduce using rule 108 (block_function -> forLoop .)
    PRINTLN         reduce using rule 108 (block_function -> forLoop .)
    ID              reduce using rule 108 (block_function -> forLoop .)
    GLOBAL          reduce using rule 108 (block_function -> forLoop .)
    RETURN          reduce using rule 108 (block_function -> forLoop .)
    MIENTRAS        reduce using rule 108 (block_function -> forLoop .)
    FOR             reduce using rule 108 (block_function -> forLoop .)
    IF              reduce using rule 108 (block_function -> forLoop .)
    PARSE           reduce using rule 108 (block_function -> forLoop .)
    TRUNC           reduce using rule 108 (block_function -> forLoop .)
    FLOAT           reduce using rule 108 (block_function -> forLoop .)
    STRINGNATIVE    reduce using rule 108 (block_function -> forLoop .)
    TYPEOF          reduce using rule 108 (block_function -> forLoop .)
    PUSH            reduce using rule 108 (block_function -> forLoop .)
    POP             reduce using rule 108 (block_function -> forLoop .)
    LENGTH          reduce using rule 108 (block_function -> forLoop .)
    MUTABLE         reduce using rule 108 (block_function -> forLoop .)
    STRUCT          reduce using rule 108 (block_function -> forLoop .)


state 337

    (109) block_function -> IfCondition .

    END             reduce using rule 109 (block_function -> IfCondition .)
    PRINT           reduce using rule 109 (block_function -> IfCondition .)
    PRINTLN         reduce using rule 109 (block_function -> IfCondition .)
    ID              reduce using rule 109 (block_function -> IfCondition .)
    GLOBAL          reduce using rule 109 (block_function -> IfCondition .)
    RETURN          reduce using rule 109 (block_function -> IfCondition .)
    MIENTRAS        reduce using rule 109 (block_function -> IfCondition .)
    FOR             reduce using rule 109 (block_function -> IfCondition .)
    IF              reduce using rule 109 (block_function -> IfCondition .)
    PARSE           reduce using rule 109 (block_function -> IfCondition .)
    TRUNC           reduce using rule 109 (block_function -> IfCondition .)
    FLOAT           reduce using rule 109 (block_function -> IfCondition .)
    STRINGNATIVE    reduce using rule 109 (block_function -> IfCondition .)
    TYPEOF          reduce using rule 109 (block_function -> IfCondition .)
    PUSH            reduce using rule 109 (block_function -> IfCondition .)
    POP             reduce using rule 109 (block_function -> IfCondition .)
    LENGTH          reduce using rule 109 (block_function -> IfCondition .)
    MUTABLE         reduce using rule 109 (block_function -> IfCondition .)
    STRUCT          reduce using rule 109 (block_function -> IfCondition .)


state 338

    (110) block_function -> parseNative .

    END             reduce using rule 110 (block_function -> parseNative .)
    PRINT           reduce using rule 110 (block_function -> parseNative .)
    PRINTLN         reduce using rule 110 (block_function -> parseNative .)
    ID              reduce using rule 110 (block_function -> parseNative .)
    GLOBAL          reduce using rule 110 (block_function -> parseNative .)
    RETURN          reduce using rule 110 (block_function -> parseNative .)
    MIENTRAS        reduce using rule 110 (block_function -> parseNative .)
    FOR             reduce using rule 110 (block_function -> parseNative .)
    IF              reduce using rule 110 (block_function -> parseNative .)
    PARSE           reduce using rule 110 (block_function -> parseNative .)
    TRUNC           reduce using rule 110 (block_function -> parseNative .)
    FLOAT           reduce using rule 110 (block_function -> parseNative .)
    STRINGNATIVE    reduce using rule 110 (block_function -> parseNative .)
    TYPEOF          reduce using rule 110 (block_function -> parseNative .)
    PUSH            reduce using rule 110 (block_function -> parseNative .)
    POP             reduce using rule 110 (block_function -> parseNative .)
    LENGTH          reduce using rule 110 (block_function -> parseNative .)
    MUTABLE         reduce using rule 110 (block_function -> parseNative .)
    STRUCT          reduce using rule 110 (block_function -> parseNative .)


state 339

    (111) block_function -> truncNative .

    END             reduce using rule 111 (block_function -> truncNative .)
    PRINT           reduce using rule 111 (block_function -> truncNative .)
    PRINTLN         reduce using rule 111 (block_function -> truncNative .)
    ID              reduce using rule 111 (block_function -> truncNative .)
    GLOBAL          reduce using rule 111 (block_function -> truncNative .)
    RETURN          reduce using rule 111 (block_function -> truncNative .)
    MIENTRAS        reduce using rule 111 (block_function -> truncNative .)
    FOR             reduce using rule 111 (block_function -> truncNative .)
    IF              reduce using rule 111 (block_function -> truncNative .)
    PARSE           reduce using rule 111 (block_function -> truncNative .)
    TRUNC           reduce using rule 111 (block_function -> truncNative .)
    FLOAT           reduce using rule 111 (block_function -> truncNative .)
    STRINGNATIVE    reduce using rule 111 (block_function -> truncNative .)
    TYPEOF          reduce using rule 111 (block_function -> truncNative .)
    PUSH            reduce using rule 111 (block_function -> truncNative .)
    POP             reduce using rule 111 (block_function -> truncNative .)
    LENGTH          reduce using rule 111 (block_function -> truncNative .)
    MUTABLE         reduce using rule 111 (block_function -> truncNative .)
    STRUCT          reduce using rule 111 (block_function -> truncNative .)


state 340

    (112) block_function -> floatNative .

    END             reduce using rule 112 (block_function -> floatNative .)
    PRINT           reduce using rule 112 (block_function -> floatNative .)
    PRINTLN         reduce using rule 112 (block_function -> floatNative .)
    ID              reduce using rule 112 (block_function -> floatNative .)
    GLOBAL          reduce using rule 112 (block_function -> floatNative .)
    RETURN          reduce using rule 112 (block_function -> floatNative .)
    MIENTRAS        reduce using rule 112 (block_function -> floatNative .)
    FOR             reduce using rule 112 (block_function -> floatNative .)
    IF              reduce using rule 112 (block_function -> floatNative .)
    PARSE           reduce using rule 112 (block_function -> floatNative .)
    TRUNC           reduce using rule 112 (block_function -> floatNative .)
    FLOAT           reduce using rule 112 (block_function -> floatNative .)
    STRINGNATIVE    reduce using rule 112 (block_function -> floatNative .)
    TYPEOF          reduce using rule 112 (block_function -> floatNative .)
    PUSH            reduce using rule 112 (block_function -> floatNative .)
    POP             reduce using rule 112 (block_function -> floatNative .)
    LENGTH          reduce using rule 112 (block_function -> floatNative .)
    MUTABLE         reduce using rule 112 (block_function -> floatNative .)
    STRUCT          reduce using rule 112 (block_function -> floatNative .)


state 341

    (113) block_function -> stringNative .

    END             reduce using rule 113 (block_function -> stringNative .)
    PRINT           reduce using rule 113 (block_function -> stringNative .)
    PRINTLN         reduce using rule 113 (block_function -> stringNative .)
    ID              reduce using rule 113 (block_function -> stringNative .)
    GLOBAL          reduce using rule 113 (block_function -> stringNative .)
    RETURN          reduce using rule 113 (block_function -> stringNative .)
    MIENTRAS        reduce using rule 113 (block_function -> stringNative .)
    FOR             reduce using rule 113 (block_function -> stringNative .)
    IF              reduce using rule 113 (block_function -> stringNative .)
    PARSE           reduce using rule 113 (block_function -> stringNative .)
    TRUNC           reduce using rule 113 (block_function -> stringNative .)
    FLOAT           reduce using rule 113 (block_function -> stringNative .)
    STRINGNATIVE    reduce using rule 113 (block_function -> stringNative .)
    TYPEOF          reduce using rule 113 (block_function -> stringNative .)
    PUSH            reduce using rule 113 (block_function -> stringNative .)
    POP             reduce using rule 113 (block_function -> stringNative .)
    LENGTH          reduce using rule 113 (block_function -> stringNative .)
    MUTABLE         reduce using rule 113 (block_function -> stringNative .)
    STRUCT          reduce using rule 113 (block_function -> stringNative .)


state 342

    (114) block_function -> typeOfNative .

    END             reduce using rule 114 (block_function -> typeOfNative .)
    PRINT           reduce using rule 114 (block_function -> typeOfNative .)
    PRINTLN         reduce using rule 114 (block_function -> typeOfNative .)
    ID              reduce using rule 114 (block_function -> typeOfNative .)
    GLOBAL          reduce using rule 114 (block_function -> typeOfNative .)
    RETURN          reduce using rule 114 (block_function -> typeOfNative .)
    MIENTRAS        reduce using rule 114 (block_function -> typeOfNative .)
    FOR             reduce using rule 114 (block_function -> typeOfNative .)
    IF              reduce using rule 114 (block_function -> typeOfNative .)
    PARSE           reduce using rule 114 (block_function -> typeOfNative .)
    TRUNC           reduce using rule 114 (block_function -> typeOfNative .)
    FLOAT           reduce using rule 114 (block_function -> typeOfNative .)
    STRINGNATIVE    reduce using rule 114 (block_function -> typeOfNative .)
    TYPEOF          reduce using rule 114 (block_function -> typeOfNative .)
    PUSH            reduce using rule 114 (block_function -> typeOfNative .)
    POP             reduce using rule 114 (block_function -> typeOfNative .)
    LENGTH          reduce using rule 114 (block_function -> typeOfNative .)
    MUTABLE         reduce using rule 114 (block_function -> typeOfNative .)
    STRUCT          reduce using rule 114 (block_function -> typeOfNative .)


state 343

    (115) block_function -> pushArray .

    END             reduce using rule 115 (block_function -> pushArray .)
    PRINT           reduce using rule 115 (block_function -> pushArray .)
    PRINTLN         reduce using rule 115 (block_function -> pushArray .)
    ID              reduce using rule 115 (block_function -> pushArray .)
    GLOBAL          reduce using rule 115 (block_function -> pushArray .)
    RETURN          reduce using rule 115 (block_function -> pushArray .)
    MIENTRAS        reduce using rule 115 (block_function -> pushArray .)
    FOR             reduce using rule 115 (block_function -> pushArray .)
    IF              reduce using rule 115 (block_function -> pushArray .)
    PARSE           reduce using rule 115 (block_function -> pushArray .)
    TRUNC           reduce using rule 115 (block_function -> pushArray .)
    FLOAT           reduce using rule 115 (block_function -> pushArray .)
    STRINGNATIVE    reduce using rule 115 (block_function -> pushArray .)
    TYPEOF          reduce using rule 115 (block_function -> pushArray .)
    PUSH            reduce using rule 115 (block_function -> pushArray .)
    POP             reduce using rule 115 (block_function -> pushArray .)
    LENGTH          reduce using rule 115 (block_function -> pushArray .)
    MUTABLE         reduce using rule 115 (block_function -> pushArray .)
    STRUCT          reduce using rule 115 (block_function -> pushArray .)


state 344

    (116) block_function -> popArray .

    END             reduce using rule 116 (block_function -> popArray .)
    PRINT           reduce using rule 116 (block_function -> popArray .)
    PRINTLN         reduce using rule 116 (block_function -> popArray .)
    ID              reduce using rule 116 (block_function -> popArray .)
    GLOBAL          reduce using rule 116 (block_function -> popArray .)
    RETURN          reduce using rule 116 (block_function -> popArray .)
    MIENTRAS        reduce using rule 116 (block_function -> popArray .)
    FOR             reduce using rule 116 (block_function -> popArray .)
    IF              reduce using rule 116 (block_function -> popArray .)
    PARSE           reduce using rule 116 (block_function -> popArray .)
    TRUNC           reduce using rule 116 (block_function -> popArray .)
    FLOAT           reduce using rule 116 (block_function -> popArray .)
    STRINGNATIVE    reduce using rule 116 (block_function -> popArray .)
    TYPEOF          reduce using rule 116 (block_function -> popArray .)
    PUSH            reduce using rule 116 (block_function -> popArray .)
    POP             reduce using rule 116 (block_function -> popArray .)
    LENGTH          reduce using rule 116 (block_function -> popArray .)
    MUTABLE         reduce using rule 116 (block_function -> popArray .)
    STRUCT          reduce using rule 116 (block_function -> popArray .)


state 345

    (117) block_function -> lengthArray .

    END             reduce using rule 117 (block_function -> lengthArray .)
    PRINT           reduce using rule 117 (block_function -> lengthArray .)
    PRINTLN         reduce using rule 117 (block_function -> lengthArray .)
    ID              reduce using rule 117 (block_function -> lengthArray .)
    GLOBAL          reduce using rule 117 (block_function -> lengthArray .)
    RETURN          reduce using rule 117 (block_function -> lengthArray .)
    MIENTRAS        reduce using rule 117 (block_function -> lengthArray .)
    FOR             reduce using rule 117 (block_function -> lengthArray .)
    IF              reduce using rule 117 (block_function -> lengthArray .)
    PARSE           reduce using rule 117 (block_function -> lengthArray .)
    TRUNC           reduce using rule 117 (block_function -> lengthArray .)
    FLOAT           reduce using rule 117 (block_function -> lengthArray .)
    STRINGNATIVE    reduce using rule 117 (block_function -> lengthArray .)
    TYPEOF          reduce using rule 117 (block_function -> lengthArray .)
    PUSH            reduce using rule 117 (block_function -> lengthArray .)
    POP             reduce using rule 117 (block_function -> lengthArray .)
    LENGTH          reduce using rule 117 (block_function -> lengthArray .)
    MUTABLE         reduce using rule 117 (block_function -> lengthArray .)
    STRUCT          reduce using rule 117 (block_function -> lengthArray .)


state 346

    (118) block_function -> assignmentArray .

    END             reduce using rule 118 (block_function -> assignmentArray .)
    PRINT           reduce using rule 118 (block_function -> assignmentArray .)
    PRINTLN         reduce using rule 118 (block_function -> assignmentArray .)
    ID              reduce using rule 118 (block_function -> assignmentArray .)
    GLOBAL          reduce using rule 118 (block_function -> assignmentArray .)
    RETURN          reduce using rule 118 (block_function -> assignmentArray .)
    MIENTRAS        reduce using rule 118 (block_function -> assignmentArray .)
    FOR             reduce using rule 118 (block_function -> assignmentArray .)
    IF              reduce using rule 118 (block_function -> assignmentArray .)
    PARSE           reduce using rule 118 (block_function -> assignmentArray .)
    TRUNC           reduce using rule 118 (block_function -> assignmentArray .)
    FLOAT           reduce using rule 118 (block_function -> assignmentArray .)
    STRINGNATIVE    reduce using rule 118 (block_function -> assignmentArray .)
    TYPEOF          reduce using rule 118 (block_function -> assignmentArray .)
    PUSH            reduce using rule 118 (block_function -> assignmentArray .)
    POP             reduce using rule 118 (block_function -> assignmentArray .)
    LENGTH          reduce using rule 118 (block_function -> assignmentArray .)
    MUTABLE         reduce using rule 118 (block_function -> assignmentArray .)
    STRUCT          reduce using rule 118 (block_function -> assignmentArray .)


state 347

    (119) block_function -> Struct .

    END             reduce using rule 119 (block_function -> Struct .)
    PRINT           reduce using rule 119 (block_function -> Struct .)
    PRINTLN         reduce using rule 119 (block_function -> Struct .)
    ID              reduce using rule 119 (block_function -> Struct .)
    GLOBAL          reduce using rule 119 (block_function -> Struct .)
    RETURN          reduce using rule 119 (block_function -> Struct .)
    MIENTRAS        reduce using rule 119 (block_function -> Struct .)
    FOR             reduce using rule 119 (block_function -> Struct .)
    IF              reduce using rule 119 (block_function -> Struct .)
    PARSE           reduce using rule 119 (block_function -> Struct .)
    TRUNC           reduce using rule 119 (block_function -> Struct .)
    FLOAT           reduce using rule 119 (block_function -> Struct .)
    STRINGNATIVE    reduce using rule 119 (block_function -> Struct .)
    TYPEOF          reduce using rule 119 (block_function -> Struct .)
    PUSH            reduce using rule 119 (block_function -> Struct .)
    POP             reduce using rule 119 (block_function -> Struct .)
    LENGTH          reduce using rule 119 (block_function -> Struct .)
    MUTABLE         reduce using rule 119 (block_function -> Struct .)
    STRUCT          reduce using rule 119 (block_function -> Struct .)


state 348

    (120) block_function -> structAccess .

    END             reduce using rule 120 (block_function -> structAccess .)
    PRINT           reduce using rule 120 (block_function -> structAccess .)
    PRINTLN         reduce using rule 120 (block_function -> structAccess .)
    ID              reduce using rule 120 (block_function -> structAccess .)
    GLOBAL          reduce using rule 120 (block_function -> structAccess .)
    RETURN          reduce using rule 120 (block_function -> structAccess .)
    MIENTRAS        reduce using rule 120 (block_function -> structAccess .)
    FOR             reduce using rule 120 (block_function -> structAccess .)
    IF              reduce using rule 120 (block_function -> structAccess .)
    PARSE           reduce using rule 120 (block_function -> structAccess .)
    TRUNC           reduce using rule 120 (block_function -> structAccess .)
    FLOAT           reduce using rule 120 (block_function -> structAccess .)
    STRINGNATIVE    reduce using rule 120 (block_function -> structAccess .)
    TYPEOF          reduce using rule 120 (block_function -> structAccess .)
    PUSH            reduce using rule 120 (block_function -> structAccess .)
    POP             reduce using rule 120 (block_function -> structAccess .)
    LENGTH          reduce using rule 120 (block_function -> structAccess .)
    MUTABLE         reduce using rule 120 (block_function -> structAccess .)
    STRUCT          reduce using rule 120 (block_function -> structAccess .)


state 349

    (121) block_function -> empty .

    END             reduce using rule 121 (block_function -> empty .)
    PRINT           reduce using rule 121 (block_function -> empty .)
    PRINTLN         reduce using rule 121 (block_function -> empty .)
    ID              reduce using rule 121 (block_function -> empty .)
    GLOBAL          reduce using rule 121 (block_function -> empty .)
    RETURN          reduce using rule 121 (block_function -> empty .)
    MIENTRAS        reduce using rule 121 (block_function -> empty .)
    FOR             reduce using rule 121 (block_function -> empty .)
    IF              reduce using rule 121 (block_function -> empty .)
    PARSE           reduce using rule 121 (block_function -> empty .)
    TRUNC           reduce using rule 121 (block_function -> empty .)
    FLOAT           reduce using rule 121 (block_function -> empty .)
    STRINGNATIVE    reduce using rule 121 (block_function -> empty .)
    TYPEOF          reduce using rule 121 (block_function -> empty .)
    PUSH            reduce using rule 121 (block_function -> empty .)
    POP             reduce using rule 121 (block_function -> empty .)
    LENGTH          reduce using rule 121 (block_function -> empty .)
    MUTABLE         reduce using rule 121 (block_function -> empty .)
    STRUCT          reduce using rule 121 (block_function -> empty .)


state 350

    (174) Asignacion -> ID IGUAL exp DOSP DOSP . type PCOMA
    (175) Asignacion -> ID IGUAL exp DOSP DOSP . ID PCOMA
    (237) type -> . INT64
    (238) type -> . FLOAT64
    (239) type -> . STRING
    (240) type -> . CHAR
    (241) type -> . BOOL
    (242) type -> . NULO

    ID              shift and go to state 427
    INT64           shift and go to state 198
    FLOAT64         shift and go to state 199
    STRING          shift and go to state 200
    CHAR            shift and go to state 201
    BOOL            shift and go to state 202
    NULO            shift and go to state 203

    type                           shift and go to state 428

state 351

    (71) functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .

    PRINT           reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    ID              reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    FOR             reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    IF              reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    PARSE           reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    TRUNC           reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    FLOAT           reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    PUSH            reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    POP             reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    LENGTH          reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    STRUCT          reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    $end            reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    END             reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    RETURN          reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    BREAK           reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)
    ELSE            reduce using rule 71 (functionCall -> ID PARENTESISA parametersCall PARENTESISC PCOMA .)


state 352

    (224) assignmentArray -> ID listArrayRef IGUAL exp PCOMA .

    PRINT           reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    PRINTLN         reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    ID              reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    GLOBAL          reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    FUNCTION        reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    MIENTRAS        reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    FOR             reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    IF              reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    PARSE           reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    TRUNC           reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    FLOAT           reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    STRINGNATIVE    reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    TYPEOF          reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    PUSH            reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    POP             reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    LENGTH          reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    MUTABLE         reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    STRUCT          reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    $end            reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    END             reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    RETURN          reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    BREAK           reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    CONTINUE        reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    ELSEIF          reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)
    ELSE            reduce using rule 224 (assignmentArray -> ID listArrayRef IGUAL exp PCOMA .)


state 353

    (225) listArrayRef -> listArrayRef CORCHETEA exp CORCHETEC .

    IGUAL           reduce using rule 225 (listArrayRef -> listArrayRef CORCHETEA exp CORCHETEC .)
    CORCHETEA       reduce using rule 225 (listArrayRef -> listArrayRef CORCHETEA exp CORCHETEC .)


state 354

    (49) structAccess -> ID attributes IGUAL exp PCOMA .

    PRINT           reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    PRINTLN         reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    ID              reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    GLOBAL          reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    FUNCTION        reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    MIENTRAS        reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    FOR             reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    IF              reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    PARSE           reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    TRUNC           reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    FLOAT           reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    STRINGNATIVE    reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    TYPEOF          reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    PUSH            reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    POP             reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    LENGTH          reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    MUTABLE         reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    STRUCT          reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    $end            reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    END             reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    RETURN          reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    BREAK           reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    CONTINUE        reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    ELSEIF          reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)
    ELSE            reduce using rule 49 (structAccess -> ID attributes IGUAL exp PCOMA .)


state 355

    (176) Asignacion -> GLOBAL ID IGUAL exp PCOMA .

    PRINT           reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    PRINTLN         reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    ID              reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    GLOBAL          reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    FUNCTION        reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    MIENTRAS        reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    FOR             reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    IF              reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    PARSE           reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    TRUNC           reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    FLOAT           reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    STRINGNATIVE    reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    TYPEOF          reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    PUSH            reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    POP             reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    LENGTH          reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    MUTABLE         reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    STRUCT          reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    $end            reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    END             reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    RETURN          reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    BREAK           reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    CONTINUE        reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    ELSEIF          reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)
    ELSE            reduce using rule 176 (Asignacion -> GLOBAL ID IGUAL exp PCOMA .)


state 356

    (69) whileLoop -> MIENTRAS exp block_loops END PCOMA .

    PRINT           reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    PRINTLN         reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    ID              reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    GLOBAL          reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    FUNCTION        reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    MIENTRAS        reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    FOR             reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    IF              reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    PARSE           reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    TRUNC           reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    FLOAT           reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    STRINGNATIVE    reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    TYPEOF          reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    PUSH            reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    POP             reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    LENGTH          reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    MUTABLE         reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    STRUCT          reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    $end            reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    END             reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    RETURN          reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    BREAK           reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    CONTINUE        reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    ELSEIF          reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)
    ELSE            reduce using rule 69 (whileLoop -> MIENTRAS exp block_loops END PCOMA .)


state 357

    (167) retorno -> RETURN exp PCOMA .

    END             reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    PRINT           reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    PRINTLN         reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    ID              reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    GLOBAL          reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    RETURN          reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    FOR             reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    MIENTRAS        reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    IF              reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    PARSE           reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    TRUNC           reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    FLOAT           reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    STRINGNATIVE    reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    TYPEOF          reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    PUSH            reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    POP             reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    LENGTH          reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    BREAK           reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    CONTINUE        reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    MUTABLE         reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    STRUCT          reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    ELSEIF          reduce using rule 167 (retorno -> RETURN exp PCOMA .)
    ELSE            reduce using rule 167 (retorno -> RETURN exp PCOMA .)


state 358

    (210) exp -> ID PARENTESISA parametersCall PARENTESISC .

    MAS             reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    MENOS           reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    POR             reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    DIVIDIDO        reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    POTENCIA        reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    PORCENTAJE      reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    MAYOR           reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    MENOR           reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    MAYORIGUAL      reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    MENORIGUAL      reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    DOBLEIGUAL      reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    NOIGUAL         reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    OR              reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    AND             reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    DOSP            reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    PRINT           reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    PRINTLN         reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    ID              reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    GLOBAL          reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    RETURN          reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    MIENTRAS        reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    FOR             reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    IF              reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    PARSE           reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    TRUNC           reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    FLOAT           reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    STRINGNATIVE    reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    TYPEOF          reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    PUSH            reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    POP             reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    LENGTH          reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    BREAK           reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    CONTINUE        reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    MUTABLE         reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    STRUCT          reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    END             reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    ELSEIF          reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    ELSE            reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    PARENTESISC     reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    COMA            reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    PCOMA           reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)
    CORCHETEC       reduce using rule 210 (exp -> ID PARENTESISA parametersCall PARENTESISC .)


state 359

    (227) listArray -> listArray CORCHETEA exp . CORCHETEC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    CORCHETEC       shift and go to state 429
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 360

    (228) listArray -> CORCHETEA exp CORCHETEC .

    CORCHETEA       reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    MAS             reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    MENOS           reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    POR             reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    DIVIDIDO        reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    POTENCIA        reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    PORCENTAJE      reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    MAYOR           reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    MENOR           reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    MAYORIGUAL      reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    MENORIGUAL      reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    DOBLEIGUAL      reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    NOIGUAL         reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    OR              reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    AND             reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    DOSP            reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    PRINT           reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    PRINTLN         reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    ID              reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    GLOBAL          reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    RETURN          reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    MIENTRAS        reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    FOR             reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    IF              reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    PARSE           reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    TRUNC           reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    FLOAT           reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    STRINGNATIVE    reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    TYPEOF          reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    PUSH            reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    POP             reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    LENGTH          reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    BREAK           reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    CONTINUE        reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    MUTABLE         reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    STRUCT          reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    END             reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    ELSEIF          reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    ELSE            reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    PARENTESISC     reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    COMA            reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    PCOMA           reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)
    CORCHETEC       reduce using rule 228 (listArray -> CORCHETEA exp CORCHETEC .)


state 361

    (195) exp -> PUSH NOT PARENTESISA exp . COMA parametersCall PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    COMA            shift and go to state 430
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 362

    (196) exp -> PUSH NOT PARENTESISA ID . COMA parametersCall PARENTESISC
    (192) exp -> ID . attributes
    (210) exp -> ID . PARENTESISA parametersCall PARENTESISC
    (211) exp -> ID . PARENTESISA PARENTESISC
    (222) exp -> ID .
    (223) exp -> ID . listArray
    (193) attributes -> . attributes PUNTO ID
    (194) attributes -> . PUNTO ID
    (227) listArray -> . listArray CORCHETEA exp CORCHETEC
    (228) listArray -> . CORCHETEA exp CORCHETEC

  ! shift/reduce conflict for COMA resolved as shift
    COMA            shift and go to state 431
    PARENTESISA     shift and go to state 173
    MAS             reduce using rule 222 (exp -> ID .)
    MENOS           reduce using rule 222 (exp -> ID .)
    POR             reduce using rule 222 (exp -> ID .)
    DIVIDIDO        reduce using rule 222 (exp -> ID .)
    POTENCIA        reduce using rule 222 (exp -> ID .)
    PORCENTAJE      reduce using rule 222 (exp -> ID .)
    MAYOR           reduce using rule 222 (exp -> ID .)
    MENOR           reduce using rule 222 (exp -> ID .)
    MAYORIGUAL      reduce using rule 222 (exp -> ID .)
    MENORIGUAL      reduce using rule 222 (exp -> ID .)
    DOBLEIGUAL      reduce using rule 222 (exp -> ID .)
    NOIGUAL         reduce using rule 222 (exp -> ID .)
    OR              reduce using rule 222 (exp -> ID .)
    AND             reduce using rule 222 (exp -> ID .)
    DOSP            reduce using rule 222 (exp -> ID .)
    PUNTO           shift and go to state 68
    CORCHETEA       shift and go to state 175

  ! COMA            [ reduce using rule 222 (exp -> ID .) ]

    attributes                     shift and go to state 172
    listArray                      shift and go to state 174

state 363

    (197) exp -> POP NOT PARENTESISA exp . PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 432
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 364

    (198) exp -> POP NOT PARENTESISA ID . PARENTESISC
    (192) exp -> ID . attributes
    (210) exp -> ID . PARENTESISA parametersCall PARENTESISC
    (211) exp -> ID . PARENTESISA PARENTESISC
    (222) exp -> ID .
    (223) exp -> ID . listArray
    (193) attributes -> . attributes PUNTO ID
    (194) attributes -> . PUNTO ID
    (227) listArray -> . listArray CORCHETEA exp CORCHETEC
    (228) listArray -> . CORCHETEA exp CORCHETEC

  ! shift/reduce conflict for PARENTESISC resolved as shift
    PARENTESISC     shift and go to state 433
    PARENTESISA     shift and go to state 173
    MAS             reduce using rule 222 (exp -> ID .)
    MENOS           reduce using rule 222 (exp -> ID .)
    POR             reduce using rule 222 (exp -> ID .)
    DIVIDIDO        reduce using rule 222 (exp -> ID .)
    POTENCIA        reduce using rule 222 (exp -> ID .)
    PORCENTAJE      reduce using rule 222 (exp -> ID .)
    MAYOR           reduce using rule 222 (exp -> ID .)
    MENOR           reduce using rule 222 (exp -> ID .)
    MAYORIGUAL      reduce using rule 222 (exp -> ID .)
    MENORIGUAL      reduce using rule 222 (exp -> ID .)
    DOBLEIGUAL      reduce using rule 222 (exp -> ID .)
    NOIGUAL         reduce using rule 222 (exp -> ID .)
    OR              reduce using rule 222 (exp -> ID .)
    AND             reduce using rule 222 (exp -> ID .)
    DOSP            reduce using rule 222 (exp -> ID .)
    PUNTO           shift and go to state 68
    CORCHETEA       shift and go to state 175

  ! PARENTESISC     [ reduce using rule 222 (exp -> ID .) ]

    attributes                     shift and go to state 172
    listArray                      shift and go to state 174

state 365

    (199) exp -> LENGTH PARENTESISA exp PARENTESISC .

    MAS             reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    MENOS           reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    POR             reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    DIVIDIDO        reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    POTENCIA        reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    PORCENTAJE      reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    MAYOR           reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    MENOR           reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    MAYORIGUAL      reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    MENORIGUAL      reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    DOBLEIGUAL      reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    NOIGUAL         reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    OR              reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    AND             reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    DOSP            reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    PRINT           reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    PRINTLN         reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    ID              reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    GLOBAL          reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    RETURN          reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    MIENTRAS        reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    FOR             reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    IF              reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    PARSE           reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    TRUNC           reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    FLOAT           reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    STRINGNATIVE    reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    TYPEOF          reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    PUSH            reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    POP             reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    LENGTH          reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    BREAK           reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    CONTINUE        reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    MUTABLE         reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    STRUCT          reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    END             reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    ELSEIF          reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    ELSE            reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    PARENTESISC     reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    COMA            reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    PCOMA           reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)
    CORCHETEC       reduce using rule 199 (exp -> LENGTH PARENTESISA exp PARENTESISC .)


state 366

    (200) exp -> LENGTH PARENTESISA ID PARENTESISC .

    MAS             reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    MENOS           reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    POR             reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    DIVIDIDO        reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    POTENCIA        reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    PORCENTAJE      reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    MAYOR           reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    MENOR           reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    MAYORIGUAL      reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    MENORIGUAL      reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    DOBLEIGUAL      reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    NOIGUAL         reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    OR              reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    AND             reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    DOSP            reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    PRINT           reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    PRINTLN         reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    ID              reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    GLOBAL          reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    RETURN          reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    MIENTRAS        reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    FOR             reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    IF              reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    PARSE           reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    TRUNC           reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    FLOAT           reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    STRINGNATIVE    reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    TYPEOF          reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    PUSH            reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    POP             reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    LENGTH          reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    BREAK           reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    CONTINUE        reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    MUTABLE         reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    STRUCT          reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    END             reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    ELSEIF          reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    ELSE            reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    PARENTESISC     reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    COMA            reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    PCOMA           reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)
    CORCHETEC       reduce using rule 200 (exp -> LENGTH PARENTESISA ID PARENTESISC .)


state 367

    (201) exp -> PARSE PARENTESISA type COMA . exp PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 434
    array                          shift and go to state 83

state 368

    (202) exp -> TRUNC PARENTESISA type COMA . exp PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 435
    array                          shift and go to state 83

state 369

    (203) exp -> TRUNC PARENTESISA exp PARENTESISC .

    MAS             reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    MENOS           reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    POR             reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    DIVIDIDO        reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    POTENCIA        reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    PORCENTAJE      reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    MAYOR           reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    MENOR           reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    MAYORIGUAL      reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    MENORIGUAL      reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    DOBLEIGUAL      reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    NOIGUAL         reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    OR              reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    AND             reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    DOSP            reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    PRINT           reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    PRINTLN         reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    ID              reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    GLOBAL          reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    RETURN          reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    MIENTRAS        reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    FOR             reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    IF              reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    PARSE           reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    TRUNC           reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    FLOAT           reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    STRINGNATIVE    reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    TYPEOF          reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    PUSH            reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    POP             reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    LENGTH          reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    BREAK           reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    CONTINUE        reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    MUTABLE         reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    STRUCT          reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    END             reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    ELSEIF          reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    ELSE            reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    PARENTESISC     reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    COMA            reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    PCOMA           reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)
    CORCHETEC       reduce using rule 203 (exp -> TRUNC PARENTESISA exp PARENTESISC .)


state 370

    (204) exp -> FLOAT PARENTESISA exp PARENTESISC .

    MAS             reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    MENOS           reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    POR             reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    DIVIDIDO        reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    POTENCIA        reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    PORCENTAJE      reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    MAYOR           reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    MENOR           reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    MAYORIGUAL      reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    MENORIGUAL      reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    DOBLEIGUAL      reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    NOIGUAL         reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    OR              reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    AND             reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    DOSP            reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    PRINT           reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    PRINTLN         reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    ID              reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    GLOBAL          reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    RETURN          reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    MIENTRAS        reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    FOR             reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    IF              reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    PARSE           reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    TRUNC           reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    FLOAT           reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    STRINGNATIVE    reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    TYPEOF          reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    PUSH            reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    POP             reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    LENGTH          reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    BREAK           reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    CONTINUE        reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    MUTABLE         reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    STRUCT          reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    END             reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    ELSEIF          reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    ELSE            reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    PARENTESISC     reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    COMA            reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    PCOMA           reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)
    CORCHETEC       reduce using rule 204 (exp -> FLOAT PARENTESISA exp PARENTESISC .)


state 371

    (205) exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .

    MAS             reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    MENOS           reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    POR             reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    DIVIDIDO        reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    POTENCIA        reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    PORCENTAJE      reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    MAYOR           reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    MENOR           reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    MAYORIGUAL      reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    MENORIGUAL      reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    DOBLEIGUAL      reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    NOIGUAL         reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    OR              reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    AND             reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    DOSP            reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    PRINT           reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    PRINTLN         reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    ID              reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    GLOBAL          reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    RETURN          reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    MIENTRAS        reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    FOR             reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    IF              reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    PARSE           reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    TRUNC           reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    FLOAT           reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    STRINGNATIVE    reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    TYPEOF          reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    PUSH            reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    POP             reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    LENGTH          reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    BREAK           reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    CONTINUE        reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    MUTABLE         reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    STRUCT          reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    END             reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    ELSEIF          reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    ELSE            reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    PARENTESISC     reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    COMA            reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    PCOMA           reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)
    CORCHETEC       reduce using rule 205 (exp -> STRINGNATIVE PARENTESISA exp PARENTESISC .)


state 372

    (206) exp -> TYPEOF PARENTESISA exp PARENTESISC .

    MAS             reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    MENOS           reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    POR             reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    DIVIDIDO        reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    POTENCIA        reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    PORCENTAJE      reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    MAYOR           reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    MENOR           reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    MAYORIGUAL      reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    MENORIGUAL      reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    DOBLEIGUAL      reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    NOIGUAL         reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    OR              reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    AND             reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    DOSP            reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    PRINT           reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    PRINTLN         reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    ID              reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    GLOBAL          reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    RETURN          reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    MIENTRAS        reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    FOR             reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    IF              reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    PARSE           reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    TRUNC           reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    FLOAT           reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    STRINGNATIVE    reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    TYPEOF          reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    PUSH            reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    POP             reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    LENGTH          reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    BREAK           reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    CONTINUE        reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    MUTABLE         reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    STRUCT          reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    END             reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    ELSEIF          reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    ELSE            reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    PARENTESISC     reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    COMA            reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    PCOMA           reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)
    CORCHETEC       reduce using rule 206 (exp -> TYPEOF PARENTESISA exp PARENTESISC .)


state 373

    (229) exp -> UPPERCASE PARENTESISA exp PARENTESISC .

    MAS             reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    MENOS           reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    POR             reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    DIVIDIDO        reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    POTENCIA        reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    PORCENTAJE      reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    MAYOR           reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    MENOR           reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    MAYORIGUAL      reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    MENORIGUAL      reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    DOBLEIGUAL      reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    NOIGUAL         reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    OR              reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    AND             reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    DOSP            reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    PRINT           reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    PRINTLN         reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    ID              reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    GLOBAL          reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    RETURN          reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    MIENTRAS        reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    FOR             reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    IF              reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    PARSE           reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    TRUNC           reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    FLOAT           reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    STRINGNATIVE    reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    TYPEOF          reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    PUSH            reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    POP             reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    LENGTH          reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    BREAK           reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    CONTINUE        reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    MUTABLE         reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    STRUCT          reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    END             reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    ELSEIF          reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    ELSE            reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    PARENTESISC     reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    COMA            reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    PCOMA           reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)
    CORCHETEC       reduce using rule 229 (exp -> UPPERCASE PARENTESISA exp PARENTESISC .)


state 374

    (230) exp -> LOWERCASE PARENTESISA exp PARENTESISC .

    MAS             reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    MENOS           reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    POR             reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    DIVIDIDO        reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    POTENCIA        reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    PORCENTAJE      reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    MAYOR           reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    MENOR           reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    MAYORIGUAL      reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    MENORIGUAL      reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    DOBLEIGUAL      reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    NOIGUAL         reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    OR              reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    AND             reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    DOSP            reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    PRINT           reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    PRINTLN         reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    ID              reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    GLOBAL          reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    RETURN          reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    MIENTRAS        reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    FOR             reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    IF              reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    PARSE           reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    TRUNC           reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    FLOAT           reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    STRINGNATIVE    reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    TYPEOF          reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    PUSH            reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    POP             reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    LENGTH          reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    BREAK           reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    CONTINUE        reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    MUTABLE         reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    STRUCT          reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    END             reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    ELSEIF          reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    ELSE            reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    PARENTESISC     reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    COMA            reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    PCOMA           reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)
    CORCHETEC       reduce using rule 230 (exp -> LOWERCASE PARENTESISA exp PARENTESISC .)


state 375

    (231) exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .

    MAS             reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    MENOS           reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    POR             reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    DIVIDIDO        reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    POTENCIA        reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    PORCENTAJE      reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    MAYOR           reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    MENOR           reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    MAYORIGUAL      reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    MENORIGUAL      reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    DOBLEIGUAL      reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    NOIGUAL         reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    OR              reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    AND             reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    DOSP            reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    PRINT           reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    PRINTLN         reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    ID              reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    GLOBAL          reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    RETURN          reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    MIENTRAS        reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    FOR             reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    IF              reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    PARSE           reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    TRUNC           reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    FLOAT           reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    STRINGNATIVE    reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    TYPEOF          reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    PUSH            reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    POP             reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    LENGTH          reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    BREAK           reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    CONTINUE        reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    MUTABLE         reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    STRUCT          reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    END             reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    ELSEIF          reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    ELSE            reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    PARENTESISC     reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    COMA            reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    PCOMA           reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)
    CORCHETEC       reduce using rule 231 (exp -> LOGARITMOB10 PARENTESISA exp PARENTESISC .)


state 376

    (232) exp -> LOGARITMONOB10 PARENTESISA exp COMA . exp PARENTESISC
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 436
    array                          shift and go to state 83

state 377

    (233) exp -> SIN PARENTESISA exp PARENTESISC .

    MAS             reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    MENOS           reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    POR             reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    DIVIDIDO        reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    POTENCIA        reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    PORCENTAJE      reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    MAYOR           reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    MENOR           reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    MAYORIGUAL      reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    MENORIGUAL      reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    DOBLEIGUAL      reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    NOIGUAL         reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    OR              reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    AND             reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    DOSP            reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    PRINT           reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    PRINTLN         reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    ID              reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    GLOBAL          reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    RETURN          reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    MIENTRAS        reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    FOR             reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    IF              reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    PARSE           reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    TRUNC           reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    FLOAT           reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    STRINGNATIVE    reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    TYPEOF          reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    PUSH            reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    POP             reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    LENGTH          reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    BREAK           reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    CONTINUE        reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    MUTABLE         reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    STRUCT          reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    END             reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    ELSEIF          reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    ELSE            reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    PARENTESISC     reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    COMA            reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    PCOMA           reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)
    CORCHETEC       reduce using rule 233 (exp -> SIN PARENTESISA exp PARENTESISC .)


state 378

    (234) exp -> COS PARENTESISA exp PARENTESISC .

    MAS             reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    MENOS           reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    POR             reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    DIVIDIDO        reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    POTENCIA        reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    PORCENTAJE      reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    MAYOR           reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    MENOR           reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    MAYORIGUAL      reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    MENORIGUAL      reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    DOBLEIGUAL      reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    NOIGUAL         reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    OR              reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    AND             reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    DOSP            reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    PRINT           reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    PRINTLN         reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    ID              reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    GLOBAL          reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    RETURN          reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    MIENTRAS        reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    FOR             reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    IF              reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    PARSE           reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    TRUNC           reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    FLOAT           reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    STRINGNATIVE    reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    TYPEOF          reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    PUSH            reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    POP             reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    LENGTH          reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    BREAK           reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    CONTINUE        reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    MUTABLE         reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    STRUCT          reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    END             reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    ELSEIF          reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    ELSE            reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    PARENTESISC     reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    COMA            reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    PCOMA           reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)
    CORCHETEC       reduce using rule 234 (exp -> COS PARENTESISA exp PARENTESISC .)


state 379

    (235) exp -> TAN PARENTESISA exp PARENTESISC .

    MAS             reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    MENOS           reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    POR             reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    DIVIDIDO        reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    POTENCIA        reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    PORCENTAJE      reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    MAYOR           reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    MENOR           reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    MAYORIGUAL      reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    MENORIGUAL      reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    DOBLEIGUAL      reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    NOIGUAL         reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    OR              reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    AND             reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    DOSP            reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    PRINT           reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    PRINTLN         reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    ID              reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    GLOBAL          reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    RETURN          reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    MIENTRAS        reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    FOR             reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    IF              reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    PARSE           reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    TRUNC           reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    FLOAT           reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    STRINGNATIVE    reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    TYPEOF          reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    PUSH            reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    POP             reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    LENGTH          reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    BREAK           reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    CONTINUE        reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    MUTABLE         reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    STRUCT          reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    END             reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    ELSEIF          reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    ELSE            reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    PARENTESISC     reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    COMA            reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    PCOMA           reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)
    CORCHETEC       reduce using rule 235 (exp -> TAN PARENTESISA exp PARENTESISC .)


state 380

    (236) exp -> SQRT PARENTESISA exp PARENTESISC .

    MAS             reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    MENOS           reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    POR             reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    DIVIDIDO        reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    POTENCIA        reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    PORCENTAJE      reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    MAYOR           reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    MENOR           reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    MAYORIGUAL      reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    MENORIGUAL      reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    DOBLEIGUAL      reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    NOIGUAL         reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    OR              reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    AND             reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    DOSP            reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    PRINT           reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    PRINTLN         reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    ID              reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    GLOBAL          reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    RETURN          reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    MIENTRAS        reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    FOR             reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    IF              reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    PARSE           reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    TRUNC           reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    FLOAT           reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    STRINGNATIVE    reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    TYPEOF          reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    PUSH            reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    POP             reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    LENGTH          reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    BREAK           reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    CONTINUE        reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    MUTABLE         reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    STRUCT          reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    END             reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    ELSEIF          reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    ELSE            reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    PARENTESISC     reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    COMA            reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    PCOMA           reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)
    CORCHETEC       reduce using rule 236 (exp -> SQRT PARENTESISA exp PARENTESISC .)


state 381

    (70) forLoop -> FOR ID IN exp block_loops . END PCOMA
    (124) block_loops -> block_loops . Print
    (125) block_loops -> block_loops . Println
    (126) block_loops -> block_loops . Asignacion
    (127) block_loops -> block_loops . retorno
    (128) block_loops -> block_loops . functionCall
    (129) block_loops -> block_loops . forLoop
    (130) block_loops -> block_loops . whileLoop
    (131) block_loops -> block_loops . IfCondition
    (132) block_loops -> block_loops . parseNative
    (133) block_loops -> block_loops . truncNative
    (134) block_loops -> block_loops . floatNative
    (135) block_loops -> block_loops . stringNative
    (136) block_loops -> block_loops . typeOfNative
    (137) block_loops -> block_loops . pushArray
    (138) block_loops -> block_loops . popArray
    (139) block_loops -> block_loops . lengthArray
    (140) block_loops -> block_loops . assignmentArray
    (141) block_loops -> block_loops . Break
    (142) block_loops -> block_loops . Continue
    (143) block_loops -> block_loops . Struct
    (144) block_loops -> block_loops . structAccess
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (167) retorno -> . RETURN exp PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (122) Break -> . BREAK PCOMA
    (123) Continue -> . CONTINUE PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA

    END             shift and go to state 437
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    RETURN          shift and go to state 168
    FOR             shift and go to state 29
    MIENTRAS        shift and go to state 28
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    BREAK           shift and go to state 169
    CONTINUE        shift and go to state 170
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40

    Print                          shift and go to state 237
    Println                        shift and go to state 238
    Asignacion                     shift and go to state 239
    retorno                        shift and go to state 240
    functionCall                   shift and go to state 241
    forLoop                        shift and go to state 242
    whileLoop                      shift and go to state 243
    IfCondition                    shift and go to state 244
    parseNative                    shift and go to state 245
    truncNative                    shift and go to state 246
    floatNative                    shift and go to state 247
    stringNative                   shift and go to state 248
    typeOfNative                   shift and go to state 249
    pushArray                      shift and go to state 250
    popArray                       shift and go to state 251
    lengthArray                    shift and go to state 252
    assignmentArray                shift and go to state 253
    Break                          shift and go to state 254
    Continue                       shift and go to state 255
    Struct                         shift and go to state 256
    structAccess                   shift and go to state 257

state 382

    (62) IfCondition -> IF exp block_loops elseIfSt elseSt . END PCOMA

    END             shift and go to state 438


state 383

    (63) elseIfSt -> elseIfSt ELSEIF . exp block_loops
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 439
    array                          shift and go to state 83

state 384

    (66) elseSt -> ELSE . block_loops
    (124) block_loops -> . block_loops Print
    (125) block_loops -> . block_loops Println
    (126) block_loops -> . block_loops Asignacion
    (127) block_loops -> . block_loops retorno
    (128) block_loops -> . block_loops functionCall
    (129) block_loops -> . block_loops forLoop
    (130) block_loops -> . block_loops whileLoop
    (131) block_loops -> . block_loops IfCondition
    (132) block_loops -> . block_loops parseNative
    (133) block_loops -> . block_loops truncNative
    (134) block_loops -> . block_loops floatNative
    (135) block_loops -> . block_loops stringNative
    (136) block_loops -> . block_loops typeOfNative
    (137) block_loops -> . block_loops pushArray
    (138) block_loops -> . block_loops popArray
    (139) block_loops -> . block_loops lengthArray
    (140) block_loops -> . block_loops assignmentArray
    (141) block_loops -> . block_loops Break
    (142) block_loops -> . block_loops Continue
    (143) block_loops -> . block_loops Struct
    (144) block_loops -> . block_loops structAccess
    (145) block_loops -> . Print
    (146) block_loops -> . Println
    (147) block_loops -> . Asignacion
    (148) block_loops -> . retorno
    (149) block_loops -> . functionCall
    (150) block_loops -> . whileLoop
    (151) block_loops -> . forLoop
    (152) block_loops -> . IfCondition
    (153) block_loops -> . parseNative
    (154) block_loops -> . truncNative
    (155) block_loops -> . floatNative
    (156) block_loops -> . stringNative
    (157) block_loops -> . typeOfNative
    (158) block_loops -> . pushArray
    (159) block_loops -> . popArray
    (160) block_loops -> . lengthArray
    (161) block_loops -> . assignmentArray
    (162) block_loops -> . Break
    (163) block_loops -> . Continue
    (164) block_loops -> . Struct
    (165) block_loops -> . structAccess
    (166) block_loops -> . empty
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (167) retorno -> . RETURN exp PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (122) Break -> . BREAK PCOMA
    (123) Continue -> . CONTINUE PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA
    (68) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for GLOBAL resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARSE resolved as shift
  ! shift/reduce conflict for TRUNC resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRINGNATIVE resolved as shift
  ! shift/reduce conflict for TYPEOF resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for LENGTH resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for MUTABLE resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    RETURN          shift and go to state 168
    MIENTRAS        shift and go to state 28
    FOR             shift and go to state 29
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    BREAK           shift and go to state 169
    CONTINUE        shift and go to state 170
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40
    END             reduce using rule 68 (empty -> .)

  ! PRINT           [ reduce using rule 68 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 68 (empty -> .) ]
  ! ID              [ reduce using rule 68 (empty -> .) ]
  ! GLOBAL          [ reduce using rule 68 (empty -> .) ]
  ! RETURN          [ reduce using rule 68 (empty -> .) ]
  ! FOR             [ reduce using rule 68 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 68 (empty -> .) ]
  ! IF              [ reduce using rule 68 (empty -> .) ]
  ! PARSE           [ reduce using rule 68 (empty -> .) ]
  ! TRUNC           [ reduce using rule 68 (empty -> .) ]
  ! FLOAT           [ reduce using rule 68 (empty -> .) ]
  ! STRINGNATIVE    [ reduce using rule 68 (empty -> .) ]
  ! TYPEOF          [ reduce using rule 68 (empty -> .) ]
  ! PUSH            [ reduce using rule 68 (empty -> .) ]
  ! POP             [ reduce using rule 68 (empty -> .) ]
  ! LENGTH          [ reduce using rule 68 (empty -> .) ]
  ! BREAK           [ reduce using rule 68 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 68 (empty -> .) ]
  ! MUTABLE         [ reduce using rule 68 (empty -> .) ]
  ! STRUCT          [ reduce using rule 68 (empty -> .) ]

    block_loops                    shift and go to state 440
    Print                          shift and go to state 146
    Println                        shift and go to state 147
    Asignacion                     shift and go to state 148
    retorno                        shift and go to state 149
    functionCall                   shift and go to state 150
    forLoop                        shift and go to state 151
    whileLoop                      shift and go to state 152
    IfCondition                    shift and go to state 153
    parseNative                    shift and go to state 154
    truncNative                    shift and go to state 155
    floatNative                    shift and go to state 156
    stringNative                   shift and go to state 157
    typeOfNative                   shift and go to state 158
    pushArray                      shift and go to state 159
    popArray                       shift and go to state 160
    lengthArray                    shift and go to state 161
    assignmentArray                shift and go to state 162
    Break                          shift and go to state 163
    Continue                       shift and go to state 164
    Struct                         shift and go to state 165
    structAccess                   shift and go to state 166
    empty                          shift and go to state 167

state 385

    (67) elseSt -> empty .

    END             reduce using rule 67 (elseSt -> empty .)


state 386

    (64) elseIfSt -> ELSEIF exp . block_loops
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp
    (124) block_loops -> . block_loops Print
    (125) block_loops -> . block_loops Println
    (126) block_loops -> . block_loops Asignacion
    (127) block_loops -> . block_loops retorno
    (128) block_loops -> . block_loops functionCall
    (129) block_loops -> . block_loops forLoop
    (130) block_loops -> . block_loops whileLoop
    (131) block_loops -> . block_loops IfCondition
    (132) block_loops -> . block_loops parseNative
    (133) block_loops -> . block_loops truncNative
    (134) block_loops -> . block_loops floatNative
    (135) block_loops -> . block_loops stringNative
    (136) block_loops -> . block_loops typeOfNative
    (137) block_loops -> . block_loops pushArray
    (138) block_loops -> . block_loops popArray
    (139) block_loops -> . block_loops lengthArray
    (140) block_loops -> . block_loops assignmentArray
    (141) block_loops -> . block_loops Break
    (142) block_loops -> . block_loops Continue
    (143) block_loops -> . block_loops Struct
    (144) block_loops -> . block_loops structAccess
    (145) block_loops -> . Print
    (146) block_loops -> . Println
    (147) block_loops -> . Asignacion
    (148) block_loops -> . retorno
    (149) block_loops -> . functionCall
    (150) block_loops -> . whileLoop
    (151) block_loops -> . forLoop
    (152) block_loops -> . IfCondition
    (153) block_loops -> . parseNative
    (154) block_loops -> . truncNative
    (155) block_loops -> . floatNative
    (156) block_loops -> . stringNative
    (157) block_loops -> . typeOfNative
    (158) block_loops -> . pushArray
    (159) block_loops -> . popArray
    (160) block_loops -> . lengthArray
    (161) block_loops -> . assignmentArray
    (162) block_loops -> . Break
    (163) block_loops -> . Continue
    (164) block_loops -> . Struct
    (165) block_loops -> . structAccess
    (166) block_loops -> . empty
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (167) retorno -> . RETURN exp PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (122) Break -> . BREAK PCOMA
    (123) Continue -> . CONTINUE PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA
    (68) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for GLOBAL resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARSE resolved as shift
  ! shift/reduce conflict for TRUNC resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRINGNATIVE resolved as shift
  ! shift/reduce conflict for TYPEOF resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for LENGTH resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for MUTABLE resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    RETURN          shift and go to state 168
    MIENTRAS        shift and go to state 28
    FOR             shift and go to state 29
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    BREAK           shift and go to state 169
    CONTINUE        shift and go to state 170
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40
    ELSEIF          reduce using rule 68 (empty -> .)
    ELSE            reduce using rule 68 (empty -> .)
    END             reduce using rule 68 (empty -> .)

  ! PRINT           [ reduce using rule 68 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 68 (empty -> .) ]
  ! ID              [ reduce using rule 68 (empty -> .) ]
  ! GLOBAL          [ reduce using rule 68 (empty -> .) ]
  ! RETURN          [ reduce using rule 68 (empty -> .) ]
  ! FOR             [ reduce using rule 68 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 68 (empty -> .) ]
  ! IF              [ reduce using rule 68 (empty -> .) ]
  ! PARSE           [ reduce using rule 68 (empty -> .) ]
  ! TRUNC           [ reduce using rule 68 (empty -> .) ]
  ! FLOAT           [ reduce using rule 68 (empty -> .) ]
  ! STRINGNATIVE    [ reduce using rule 68 (empty -> .) ]
  ! TYPEOF          [ reduce using rule 68 (empty -> .) ]
  ! PUSH            [ reduce using rule 68 (empty -> .) ]
  ! POP             [ reduce using rule 68 (empty -> .) ]
  ! LENGTH          [ reduce using rule 68 (empty -> .) ]
  ! BREAK           [ reduce using rule 68 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 68 (empty -> .) ]
  ! MUTABLE         [ reduce using rule 68 (empty -> .) ]
  ! STRUCT          [ reduce using rule 68 (empty -> .) ]

    block_loops                    shift and go to state 441
    Print                          shift and go to state 146
    Println                        shift and go to state 147
    Asignacion                     shift and go to state 148
    retorno                        shift and go to state 149
    functionCall                   shift and go to state 150
    forLoop                        shift and go to state 151
    whileLoop                      shift and go to state 152
    IfCondition                    shift and go to state 153
    parseNative                    shift and go to state 154
    truncNative                    shift and go to state 155
    floatNative                    shift and go to state 156
    stringNative                   shift and go to state 157
    typeOfNative                   shift and go to state 158
    pushArray                      shift and go to state 159
    popArray                       shift and go to state 160
    lengthArray                    shift and go to state 161
    assignmentArray                shift and go to state 162
    Break                          shift and go to state 163
    Continue                       shift and go to state 164
    Struct                         shift and go to state 165
    structAccess                   shift and go to state 166
    empty                          shift and go to state 167

state 387

    (56) parseNative -> PARSE PARENTESISA type COMA exp . PARENTESISC PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 442
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 388

    (57) truncNative -> TRUNC PARENTESISA type COMA exp . PARENTESISC PCOMA
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 443
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 389

    (58) truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .

    PRINT           reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    ID              reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    FOR             reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    IF              reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    PARSE           reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    TRUNC           reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    FLOAT           reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    PUSH            reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    POP             reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    LENGTH          reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    STRUCT          reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    $end            reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    END             reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    RETURN          reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    BREAK           reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)
    ELSE            reduce using rule 58 (truncNative -> TRUNC PARENTESISA exp PARENTESISC PCOMA .)


state 390

    (59) floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .

    PRINT           reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    ID              reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    FOR             reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    IF              reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    PARSE           reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    TRUNC           reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    FLOAT           reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    PUSH            reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    POP             reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    LENGTH          reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    STRUCT          reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    $end            reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    END             reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    RETURN          reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    BREAK           reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)
    ELSE            reduce using rule 59 (floatNative -> FLOAT PARENTESISA exp PARENTESISC PCOMA .)


state 391

    (60) stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .

    PRINT           reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    ID              reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    FOR             reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    IF              reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    PARSE           reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    TRUNC           reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    FLOAT           reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    PUSH            reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    POP             reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    LENGTH          reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    STRUCT          reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    $end            reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    END             reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    RETURN          reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    BREAK           reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)
    ELSE            reduce using rule 60 (stringNative -> STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA .)


state 392

    (61) typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .

    PRINT           reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    ID              reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    FOR             reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    IF              reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    PARSE           reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    TRUNC           reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    FLOAT           reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    PUSH            reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    POP             reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    LENGTH          reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    STRUCT          reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    $end            reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    END             reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    RETURN          reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    BREAK           reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)
    ELSE            reduce using rule 61 (typeOfNative -> TYPEOF PARENTESISA exp PARENTESISC PCOMA .)


state 393

    (50) pushArray -> PUSH NOT PARENTESISA exp COMA . parametersCall PARENTESISC PCOMA
    (73) parametersCall -> . parametersCall COMA exp
    (74) parametersCall -> . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 121
    parametersCall                 shift and go to state 444
    array                          shift and go to state 83

state 394

    (51) pushArray -> PUSH NOT PARENTESISA ID COMA . parametersCall PARENTESISC PCOMA
    (73) parametersCall -> . parametersCall COMA exp
    (74) parametersCall -> . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    parametersCall                 shift and go to state 445
    exp                            shift and go to state 121
    array                          shift and go to state 83

state 395

    (52) popArray -> POP NOT PARENTESISA exp PARENTESISC . PCOMA

    PCOMA           shift and go to state 446


state 396

    (53) popArray -> POP NOT PARENTESISA ID PARENTESISC . PCOMA

    PCOMA           shift and go to state 447


state 397

    (54) lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .

    PRINT           reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    ID              reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    FOR             reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    IF              reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    PARSE           reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    TRUNC           reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    FLOAT           reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    PUSH            reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    POP             reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    LENGTH          reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    STRUCT          reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    $end            reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    END             reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    RETURN          reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    BREAK           reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)
    ELSE            reduce using rule 54 (lengthArray -> LENGTH PARENTESISA exp PARENTESISC PCOMA .)


state 398

    (55) lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .

    PRINT           reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    ID              reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    FOR             reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    IF              reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    PARSE           reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    TRUNC           reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    FLOAT           reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    PUSH            reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    POP             reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    LENGTH          reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    STRUCT          reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    $end            reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    END             reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    RETURN          reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    BREAK           reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)
    ELSE            reduce using rule 55 (lengthArray -> LENGTH PARENTESISA ID PARENTESISC PCOMA .)


state 399

    (41) Struct -> MUTABLE STRUCT ID bodyStruct END . PCOMA

    PCOMA           shift and go to state 448


state 400

    (45) bodyStruct -> ID DOSP DOSP . type PCOMA
    (48) bodyStruct -> ID DOSP DOSP . ID PCOMA
    (237) type -> . INT64
    (238) type -> . FLOAT64
    (239) type -> . STRING
    (240) type -> . CHAR
    (241) type -> . BOOL
    (242) type -> . NULO

    ID              shift and go to state 449
    INT64           shift and go to state 198
    FLOAT64         shift and go to state 199
    STRING          shift and go to state 200
    CHAR            shift and go to state 201
    BOOL            shift and go to state 202
    NULO            shift and go to state 203

    type                           shift and go to state 450

state 401

    (43) bodyStruct -> bodyStruct ID DOSP . DOSP type PCOMA
    (47) bodyStruct -> bodyStruct ID DOSP . DOSP ID PCOMA

    DOSP            shift and go to state 451


state 402

    (44) bodyStruct -> bodyStruct ID PCOMA .

    END             reduce using rule 44 (bodyStruct -> bodyStruct ID PCOMA .)
    ID              reduce using rule 44 (bodyStruct -> bodyStruct ID PCOMA .)


state 403

    (42) Struct -> STRUCT ID bodyStruct END PCOMA .

    PRINT           reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    PRINTLN         reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    ID              reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    GLOBAL          reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    FUNCTION        reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    MIENTRAS        reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    FOR             reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    IF              reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    PARSE           reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    TRUNC           reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    FLOAT           reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    STRINGNATIVE    reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    TYPEOF          reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    PUSH            reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    POP             reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    LENGTH          reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    MUTABLE         reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    STRUCT          reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    $end            reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    END             reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    RETURN          reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    BREAK           reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    CONTINUE        reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    ELSEIF          reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)
    ELSE            reduce using rule 42 (Struct -> STRUCT ID bodyStruct END PCOMA .)


state 404

    (81) parameters -> ID DOSP DOSP . type
    (82) parameters -> ID DOSP DOSP . ID
    (237) type -> . INT64
    (238) type -> . FLOAT64
    (239) type -> . STRING
    (240) type -> . CHAR
    (241) type -> . BOOL
    (242) type -> . NULO

    ID              shift and go to state 452
    INT64           shift and go to state 198
    FLOAT64         shift and go to state 199
    STRING          shift and go to state 200
    CHAR            shift and go to state 201
    BOOL            shift and go to state 202
    NULO            shift and go to state 203

    type                           shift and go to state 453

state 405

    (75) create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function . END PCOMA
    (83) block_function -> block_function . Print
    (84) block_function -> block_function . Println
    (85) block_function -> block_function . Asignacion
    (86) block_function -> block_function . retorno
    (87) block_function -> block_function . functionCall
    (88) block_function -> block_function . whileLoop
    (89) block_function -> block_function . forLoop
    (90) block_function -> block_function . IfCondition
    (91) block_function -> block_function . parseNative
    (92) block_function -> block_function . truncNative
    (93) block_function -> block_function . floatNative
    (94) block_function -> block_function . stringNative
    (95) block_function -> block_function . typeOfNative
    (96) block_function -> block_function . pushArray
    (97) block_function -> block_function . popArray
    (98) block_function -> block_function . lengthArray
    (99) block_function -> block_function . assignmentArray
    (100) block_function -> block_function . Struct
    (101) block_function -> block_function . structAccess
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (167) retorno -> . RETURN exp PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA

    END             shift and go to state 454
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    RETURN          shift and go to state 168
    MIENTRAS        shift and go to state 28
    FOR             shift and go to state 29
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40

    Print                          shift and go to state 408
    Println                        shift and go to state 409
    Asignacion                     shift and go to state 410
    retorno                        shift and go to state 411
    functionCall                   shift and go to state 412
    whileLoop                      shift and go to state 413
    forLoop                        shift and go to state 414
    IfCondition                    shift and go to state 415
    parseNative                    shift and go to state 416
    truncNative                    shift and go to state 417
    floatNative                    shift and go to state 418
    stringNative                   shift and go to state 419
    typeOfNative                   shift and go to state 420
    pushArray                      shift and go to state 421
    popArray                       shift and go to state 422
    lengthArray                    shift and go to state 423
    assignmentArray                shift and go to state 424
    Struct                         shift and go to state 425
    structAccess                   shift and go to state 426

state 406

    (77) parameters -> parameters COMA ID .
    (78) parameters -> parameters COMA ID . DOSP DOSP type
    (79) parameters -> parameters COMA ID . DOSP DOSP ID

    PARENTESISC     reduce using rule 77 (parameters -> parameters COMA ID .)
    COMA            reduce using rule 77 (parameters -> parameters COMA ID .)
    DOSP            shift and go to state 455


state 407

    (76) create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END . PCOMA

    PCOMA           shift and go to state 456


state 408

    (83) block_function -> block_function Print .

    END             reduce using rule 83 (block_function -> block_function Print .)
    PRINT           reduce using rule 83 (block_function -> block_function Print .)
    PRINTLN         reduce using rule 83 (block_function -> block_function Print .)
    ID              reduce using rule 83 (block_function -> block_function Print .)
    GLOBAL          reduce using rule 83 (block_function -> block_function Print .)
    RETURN          reduce using rule 83 (block_function -> block_function Print .)
    MIENTRAS        reduce using rule 83 (block_function -> block_function Print .)
    FOR             reduce using rule 83 (block_function -> block_function Print .)
    IF              reduce using rule 83 (block_function -> block_function Print .)
    PARSE           reduce using rule 83 (block_function -> block_function Print .)
    TRUNC           reduce using rule 83 (block_function -> block_function Print .)
    FLOAT           reduce using rule 83 (block_function -> block_function Print .)
    STRINGNATIVE    reduce using rule 83 (block_function -> block_function Print .)
    TYPEOF          reduce using rule 83 (block_function -> block_function Print .)
    PUSH            reduce using rule 83 (block_function -> block_function Print .)
    POP             reduce using rule 83 (block_function -> block_function Print .)
    LENGTH          reduce using rule 83 (block_function -> block_function Print .)
    MUTABLE         reduce using rule 83 (block_function -> block_function Print .)
    STRUCT          reduce using rule 83 (block_function -> block_function Print .)


state 409

    (84) block_function -> block_function Println .

    END             reduce using rule 84 (block_function -> block_function Println .)
    PRINT           reduce using rule 84 (block_function -> block_function Println .)
    PRINTLN         reduce using rule 84 (block_function -> block_function Println .)
    ID              reduce using rule 84 (block_function -> block_function Println .)
    GLOBAL          reduce using rule 84 (block_function -> block_function Println .)
    RETURN          reduce using rule 84 (block_function -> block_function Println .)
    MIENTRAS        reduce using rule 84 (block_function -> block_function Println .)
    FOR             reduce using rule 84 (block_function -> block_function Println .)
    IF              reduce using rule 84 (block_function -> block_function Println .)
    PARSE           reduce using rule 84 (block_function -> block_function Println .)
    TRUNC           reduce using rule 84 (block_function -> block_function Println .)
    FLOAT           reduce using rule 84 (block_function -> block_function Println .)
    STRINGNATIVE    reduce using rule 84 (block_function -> block_function Println .)
    TYPEOF          reduce using rule 84 (block_function -> block_function Println .)
    PUSH            reduce using rule 84 (block_function -> block_function Println .)
    POP             reduce using rule 84 (block_function -> block_function Println .)
    LENGTH          reduce using rule 84 (block_function -> block_function Println .)
    MUTABLE         reduce using rule 84 (block_function -> block_function Println .)
    STRUCT          reduce using rule 84 (block_function -> block_function Println .)


state 410

    (85) block_function -> block_function Asignacion .

    END             reduce using rule 85 (block_function -> block_function Asignacion .)
    PRINT           reduce using rule 85 (block_function -> block_function Asignacion .)
    PRINTLN         reduce using rule 85 (block_function -> block_function Asignacion .)
    ID              reduce using rule 85 (block_function -> block_function Asignacion .)
    GLOBAL          reduce using rule 85 (block_function -> block_function Asignacion .)
    RETURN          reduce using rule 85 (block_function -> block_function Asignacion .)
    MIENTRAS        reduce using rule 85 (block_function -> block_function Asignacion .)
    FOR             reduce using rule 85 (block_function -> block_function Asignacion .)
    IF              reduce using rule 85 (block_function -> block_function Asignacion .)
    PARSE           reduce using rule 85 (block_function -> block_function Asignacion .)
    TRUNC           reduce using rule 85 (block_function -> block_function Asignacion .)
    FLOAT           reduce using rule 85 (block_function -> block_function Asignacion .)
    STRINGNATIVE    reduce using rule 85 (block_function -> block_function Asignacion .)
    TYPEOF          reduce using rule 85 (block_function -> block_function Asignacion .)
    PUSH            reduce using rule 85 (block_function -> block_function Asignacion .)
    POP             reduce using rule 85 (block_function -> block_function Asignacion .)
    LENGTH          reduce using rule 85 (block_function -> block_function Asignacion .)
    MUTABLE         reduce using rule 85 (block_function -> block_function Asignacion .)
    STRUCT          reduce using rule 85 (block_function -> block_function Asignacion .)


state 411

    (86) block_function -> block_function retorno .

    END             reduce using rule 86 (block_function -> block_function retorno .)
    PRINT           reduce using rule 86 (block_function -> block_function retorno .)
    PRINTLN         reduce using rule 86 (block_function -> block_function retorno .)
    ID              reduce using rule 86 (block_function -> block_function retorno .)
    GLOBAL          reduce using rule 86 (block_function -> block_function retorno .)
    RETURN          reduce using rule 86 (block_function -> block_function retorno .)
    MIENTRAS        reduce using rule 86 (block_function -> block_function retorno .)
    FOR             reduce using rule 86 (block_function -> block_function retorno .)
    IF              reduce using rule 86 (block_function -> block_function retorno .)
    PARSE           reduce using rule 86 (block_function -> block_function retorno .)
    TRUNC           reduce using rule 86 (block_function -> block_function retorno .)
    FLOAT           reduce using rule 86 (block_function -> block_function retorno .)
    STRINGNATIVE    reduce using rule 86 (block_function -> block_function retorno .)
    TYPEOF          reduce using rule 86 (block_function -> block_function retorno .)
    PUSH            reduce using rule 86 (block_function -> block_function retorno .)
    POP             reduce using rule 86 (block_function -> block_function retorno .)
    LENGTH          reduce using rule 86 (block_function -> block_function retorno .)
    MUTABLE         reduce using rule 86 (block_function -> block_function retorno .)
    STRUCT          reduce using rule 86 (block_function -> block_function retorno .)


state 412

    (87) block_function -> block_function functionCall .

    END             reduce using rule 87 (block_function -> block_function functionCall .)
    PRINT           reduce using rule 87 (block_function -> block_function functionCall .)
    PRINTLN         reduce using rule 87 (block_function -> block_function functionCall .)
    ID              reduce using rule 87 (block_function -> block_function functionCall .)
    GLOBAL          reduce using rule 87 (block_function -> block_function functionCall .)
    RETURN          reduce using rule 87 (block_function -> block_function functionCall .)
    MIENTRAS        reduce using rule 87 (block_function -> block_function functionCall .)
    FOR             reduce using rule 87 (block_function -> block_function functionCall .)
    IF              reduce using rule 87 (block_function -> block_function functionCall .)
    PARSE           reduce using rule 87 (block_function -> block_function functionCall .)
    TRUNC           reduce using rule 87 (block_function -> block_function functionCall .)
    FLOAT           reduce using rule 87 (block_function -> block_function functionCall .)
    STRINGNATIVE    reduce using rule 87 (block_function -> block_function functionCall .)
    TYPEOF          reduce using rule 87 (block_function -> block_function functionCall .)
    PUSH            reduce using rule 87 (block_function -> block_function functionCall .)
    POP             reduce using rule 87 (block_function -> block_function functionCall .)
    LENGTH          reduce using rule 87 (block_function -> block_function functionCall .)
    MUTABLE         reduce using rule 87 (block_function -> block_function functionCall .)
    STRUCT          reduce using rule 87 (block_function -> block_function functionCall .)


state 413

    (88) block_function -> block_function whileLoop .

    END             reduce using rule 88 (block_function -> block_function whileLoop .)
    PRINT           reduce using rule 88 (block_function -> block_function whileLoop .)
    PRINTLN         reduce using rule 88 (block_function -> block_function whileLoop .)
    ID              reduce using rule 88 (block_function -> block_function whileLoop .)
    GLOBAL          reduce using rule 88 (block_function -> block_function whileLoop .)
    RETURN          reduce using rule 88 (block_function -> block_function whileLoop .)
    MIENTRAS        reduce using rule 88 (block_function -> block_function whileLoop .)
    FOR             reduce using rule 88 (block_function -> block_function whileLoop .)
    IF              reduce using rule 88 (block_function -> block_function whileLoop .)
    PARSE           reduce using rule 88 (block_function -> block_function whileLoop .)
    TRUNC           reduce using rule 88 (block_function -> block_function whileLoop .)
    FLOAT           reduce using rule 88 (block_function -> block_function whileLoop .)
    STRINGNATIVE    reduce using rule 88 (block_function -> block_function whileLoop .)
    TYPEOF          reduce using rule 88 (block_function -> block_function whileLoop .)
    PUSH            reduce using rule 88 (block_function -> block_function whileLoop .)
    POP             reduce using rule 88 (block_function -> block_function whileLoop .)
    LENGTH          reduce using rule 88 (block_function -> block_function whileLoop .)
    MUTABLE         reduce using rule 88 (block_function -> block_function whileLoop .)
    STRUCT          reduce using rule 88 (block_function -> block_function whileLoop .)


state 414

    (89) block_function -> block_function forLoop .

    END             reduce using rule 89 (block_function -> block_function forLoop .)
    PRINT           reduce using rule 89 (block_function -> block_function forLoop .)
    PRINTLN         reduce using rule 89 (block_function -> block_function forLoop .)
    ID              reduce using rule 89 (block_function -> block_function forLoop .)
    GLOBAL          reduce using rule 89 (block_function -> block_function forLoop .)
    RETURN          reduce using rule 89 (block_function -> block_function forLoop .)
    MIENTRAS        reduce using rule 89 (block_function -> block_function forLoop .)
    FOR             reduce using rule 89 (block_function -> block_function forLoop .)
    IF              reduce using rule 89 (block_function -> block_function forLoop .)
    PARSE           reduce using rule 89 (block_function -> block_function forLoop .)
    TRUNC           reduce using rule 89 (block_function -> block_function forLoop .)
    FLOAT           reduce using rule 89 (block_function -> block_function forLoop .)
    STRINGNATIVE    reduce using rule 89 (block_function -> block_function forLoop .)
    TYPEOF          reduce using rule 89 (block_function -> block_function forLoop .)
    PUSH            reduce using rule 89 (block_function -> block_function forLoop .)
    POP             reduce using rule 89 (block_function -> block_function forLoop .)
    LENGTH          reduce using rule 89 (block_function -> block_function forLoop .)
    MUTABLE         reduce using rule 89 (block_function -> block_function forLoop .)
    STRUCT          reduce using rule 89 (block_function -> block_function forLoop .)


state 415

    (90) block_function -> block_function IfCondition .

    END             reduce using rule 90 (block_function -> block_function IfCondition .)
    PRINT           reduce using rule 90 (block_function -> block_function IfCondition .)
    PRINTLN         reduce using rule 90 (block_function -> block_function IfCondition .)
    ID              reduce using rule 90 (block_function -> block_function IfCondition .)
    GLOBAL          reduce using rule 90 (block_function -> block_function IfCondition .)
    RETURN          reduce using rule 90 (block_function -> block_function IfCondition .)
    MIENTRAS        reduce using rule 90 (block_function -> block_function IfCondition .)
    FOR             reduce using rule 90 (block_function -> block_function IfCondition .)
    IF              reduce using rule 90 (block_function -> block_function IfCondition .)
    PARSE           reduce using rule 90 (block_function -> block_function IfCondition .)
    TRUNC           reduce using rule 90 (block_function -> block_function IfCondition .)
    FLOAT           reduce using rule 90 (block_function -> block_function IfCondition .)
    STRINGNATIVE    reduce using rule 90 (block_function -> block_function IfCondition .)
    TYPEOF          reduce using rule 90 (block_function -> block_function IfCondition .)
    PUSH            reduce using rule 90 (block_function -> block_function IfCondition .)
    POP             reduce using rule 90 (block_function -> block_function IfCondition .)
    LENGTH          reduce using rule 90 (block_function -> block_function IfCondition .)
    MUTABLE         reduce using rule 90 (block_function -> block_function IfCondition .)
    STRUCT          reduce using rule 90 (block_function -> block_function IfCondition .)


state 416

    (91) block_function -> block_function parseNative .

    END             reduce using rule 91 (block_function -> block_function parseNative .)
    PRINT           reduce using rule 91 (block_function -> block_function parseNative .)
    PRINTLN         reduce using rule 91 (block_function -> block_function parseNative .)
    ID              reduce using rule 91 (block_function -> block_function parseNative .)
    GLOBAL          reduce using rule 91 (block_function -> block_function parseNative .)
    RETURN          reduce using rule 91 (block_function -> block_function parseNative .)
    MIENTRAS        reduce using rule 91 (block_function -> block_function parseNative .)
    FOR             reduce using rule 91 (block_function -> block_function parseNative .)
    IF              reduce using rule 91 (block_function -> block_function parseNative .)
    PARSE           reduce using rule 91 (block_function -> block_function parseNative .)
    TRUNC           reduce using rule 91 (block_function -> block_function parseNative .)
    FLOAT           reduce using rule 91 (block_function -> block_function parseNative .)
    STRINGNATIVE    reduce using rule 91 (block_function -> block_function parseNative .)
    TYPEOF          reduce using rule 91 (block_function -> block_function parseNative .)
    PUSH            reduce using rule 91 (block_function -> block_function parseNative .)
    POP             reduce using rule 91 (block_function -> block_function parseNative .)
    LENGTH          reduce using rule 91 (block_function -> block_function parseNative .)
    MUTABLE         reduce using rule 91 (block_function -> block_function parseNative .)
    STRUCT          reduce using rule 91 (block_function -> block_function parseNative .)


state 417

    (92) block_function -> block_function truncNative .

    END             reduce using rule 92 (block_function -> block_function truncNative .)
    PRINT           reduce using rule 92 (block_function -> block_function truncNative .)
    PRINTLN         reduce using rule 92 (block_function -> block_function truncNative .)
    ID              reduce using rule 92 (block_function -> block_function truncNative .)
    GLOBAL          reduce using rule 92 (block_function -> block_function truncNative .)
    RETURN          reduce using rule 92 (block_function -> block_function truncNative .)
    MIENTRAS        reduce using rule 92 (block_function -> block_function truncNative .)
    FOR             reduce using rule 92 (block_function -> block_function truncNative .)
    IF              reduce using rule 92 (block_function -> block_function truncNative .)
    PARSE           reduce using rule 92 (block_function -> block_function truncNative .)
    TRUNC           reduce using rule 92 (block_function -> block_function truncNative .)
    FLOAT           reduce using rule 92 (block_function -> block_function truncNative .)
    STRINGNATIVE    reduce using rule 92 (block_function -> block_function truncNative .)
    TYPEOF          reduce using rule 92 (block_function -> block_function truncNative .)
    PUSH            reduce using rule 92 (block_function -> block_function truncNative .)
    POP             reduce using rule 92 (block_function -> block_function truncNative .)
    LENGTH          reduce using rule 92 (block_function -> block_function truncNative .)
    MUTABLE         reduce using rule 92 (block_function -> block_function truncNative .)
    STRUCT          reduce using rule 92 (block_function -> block_function truncNative .)


state 418

    (93) block_function -> block_function floatNative .

    END             reduce using rule 93 (block_function -> block_function floatNative .)
    PRINT           reduce using rule 93 (block_function -> block_function floatNative .)
    PRINTLN         reduce using rule 93 (block_function -> block_function floatNative .)
    ID              reduce using rule 93 (block_function -> block_function floatNative .)
    GLOBAL          reduce using rule 93 (block_function -> block_function floatNative .)
    RETURN          reduce using rule 93 (block_function -> block_function floatNative .)
    MIENTRAS        reduce using rule 93 (block_function -> block_function floatNative .)
    FOR             reduce using rule 93 (block_function -> block_function floatNative .)
    IF              reduce using rule 93 (block_function -> block_function floatNative .)
    PARSE           reduce using rule 93 (block_function -> block_function floatNative .)
    TRUNC           reduce using rule 93 (block_function -> block_function floatNative .)
    FLOAT           reduce using rule 93 (block_function -> block_function floatNative .)
    STRINGNATIVE    reduce using rule 93 (block_function -> block_function floatNative .)
    TYPEOF          reduce using rule 93 (block_function -> block_function floatNative .)
    PUSH            reduce using rule 93 (block_function -> block_function floatNative .)
    POP             reduce using rule 93 (block_function -> block_function floatNative .)
    LENGTH          reduce using rule 93 (block_function -> block_function floatNative .)
    MUTABLE         reduce using rule 93 (block_function -> block_function floatNative .)
    STRUCT          reduce using rule 93 (block_function -> block_function floatNative .)


state 419

    (94) block_function -> block_function stringNative .

    END             reduce using rule 94 (block_function -> block_function stringNative .)
    PRINT           reduce using rule 94 (block_function -> block_function stringNative .)
    PRINTLN         reduce using rule 94 (block_function -> block_function stringNative .)
    ID              reduce using rule 94 (block_function -> block_function stringNative .)
    GLOBAL          reduce using rule 94 (block_function -> block_function stringNative .)
    RETURN          reduce using rule 94 (block_function -> block_function stringNative .)
    MIENTRAS        reduce using rule 94 (block_function -> block_function stringNative .)
    FOR             reduce using rule 94 (block_function -> block_function stringNative .)
    IF              reduce using rule 94 (block_function -> block_function stringNative .)
    PARSE           reduce using rule 94 (block_function -> block_function stringNative .)
    TRUNC           reduce using rule 94 (block_function -> block_function stringNative .)
    FLOAT           reduce using rule 94 (block_function -> block_function stringNative .)
    STRINGNATIVE    reduce using rule 94 (block_function -> block_function stringNative .)
    TYPEOF          reduce using rule 94 (block_function -> block_function stringNative .)
    PUSH            reduce using rule 94 (block_function -> block_function stringNative .)
    POP             reduce using rule 94 (block_function -> block_function stringNative .)
    LENGTH          reduce using rule 94 (block_function -> block_function stringNative .)
    MUTABLE         reduce using rule 94 (block_function -> block_function stringNative .)
    STRUCT          reduce using rule 94 (block_function -> block_function stringNative .)


state 420

    (95) block_function -> block_function typeOfNative .

    END             reduce using rule 95 (block_function -> block_function typeOfNative .)
    PRINT           reduce using rule 95 (block_function -> block_function typeOfNative .)
    PRINTLN         reduce using rule 95 (block_function -> block_function typeOfNative .)
    ID              reduce using rule 95 (block_function -> block_function typeOfNative .)
    GLOBAL          reduce using rule 95 (block_function -> block_function typeOfNative .)
    RETURN          reduce using rule 95 (block_function -> block_function typeOfNative .)
    MIENTRAS        reduce using rule 95 (block_function -> block_function typeOfNative .)
    FOR             reduce using rule 95 (block_function -> block_function typeOfNative .)
    IF              reduce using rule 95 (block_function -> block_function typeOfNative .)
    PARSE           reduce using rule 95 (block_function -> block_function typeOfNative .)
    TRUNC           reduce using rule 95 (block_function -> block_function typeOfNative .)
    FLOAT           reduce using rule 95 (block_function -> block_function typeOfNative .)
    STRINGNATIVE    reduce using rule 95 (block_function -> block_function typeOfNative .)
    TYPEOF          reduce using rule 95 (block_function -> block_function typeOfNative .)
    PUSH            reduce using rule 95 (block_function -> block_function typeOfNative .)
    POP             reduce using rule 95 (block_function -> block_function typeOfNative .)
    LENGTH          reduce using rule 95 (block_function -> block_function typeOfNative .)
    MUTABLE         reduce using rule 95 (block_function -> block_function typeOfNative .)
    STRUCT          reduce using rule 95 (block_function -> block_function typeOfNative .)


state 421

    (96) block_function -> block_function pushArray .

    END             reduce using rule 96 (block_function -> block_function pushArray .)
    PRINT           reduce using rule 96 (block_function -> block_function pushArray .)
    PRINTLN         reduce using rule 96 (block_function -> block_function pushArray .)
    ID              reduce using rule 96 (block_function -> block_function pushArray .)
    GLOBAL          reduce using rule 96 (block_function -> block_function pushArray .)
    RETURN          reduce using rule 96 (block_function -> block_function pushArray .)
    MIENTRAS        reduce using rule 96 (block_function -> block_function pushArray .)
    FOR             reduce using rule 96 (block_function -> block_function pushArray .)
    IF              reduce using rule 96 (block_function -> block_function pushArray .)
    PARSE           reduce using rule 96 (block_function -> block_function pushArray .)
    TRUNC           reduce using rule 96 (block_function -> block_function pushArray .)
    FLOAT           reduce using rule 96 (block_function -> block_function pushArray .)
    STRINGNATIVE    reduce using rule 96 (block_function -> block_function pushArray .)
    TYPEOF          reduce using rule 96 (block_function -> block_function pushArray .)
    PUSH            reduce using rule 96 (block_function -> block_function pushArray .)
    POP             reduce using rule 96 (block_function -> block_function pushArray .)
    LENGTH          reduce using rule 96 (block_function -> block_function pushArray .)
    MUTABLE         reduce using rule 96 (block_function -> block_function pushArray .)
    STRUCT          reduce using rule 96 (block_function -> block_function pushArray .)


state 422

    (97) block_function -> block_function popArray .

    END             reduce using rule 97 (block_function -> block_function popArray .)
    PRINT           reduce using rule 97 (block_function -> block_function popArray .)
    PRINTLN         reduce using rule 97 (block_function -> block_function popArray .)
    ID              reduce using rule 97 (block_function -> block_function popArray .)
    GLOBAL          reduce using rule 97 (block_function -> block_function popArray .)
    RETURN          reduce using rule 97 (block_function -> block_function popArray .)
    MIENTRAS        reduce using rule 97 (block_function -> block_function popArray .)
    FOR             reduce using rule 97 (block_function -> block_function popArray .)
    IF              reduce using rule 97 (block_function -> block_function popArray .)
    PARSE           reduce using rule 97 (block_function -> block_function popArray .)
    TRUNC           reduce using rule 97 (block_function -> block_function popArray .)
    FLOAT           reduce using rule 97 (block_function -> block_function popArray .)
    STRINGNATIVE    reduce using rule 97 (block_function -> block_function popArray .)
    TYPEOF          reduce using rule 97 (block_function -> block_function popArray .)
    PUSH            reduce using rule 97 (block_function -> block_function popArray .)
    POP             reduce using rule 97 (block_function -> block_function popArray .)
    LENGTH          reduce using rule 97 (block_function -> block_function popArray .)
    MUTABLE         reduce using rule 97 (block_function -> block_function popArray .)
    STRUCT          reduce using rule 97 (block_function -> block_function popArray .)


state 423

    (98) block_function -> block_function lengthArray .

    END             reduce using rule 98 (block_function -> block_function lengthArray .)
    PRINT           reduce using rule 98 (block_function -> block_function lengthArray .)
    PRINTLN         reduce using rule 98 (block_function -> block_function lengthArray .)
    ID              reduce using rule 98 (block_function -> block_function lengthArray .)
    GLOBAL          reduce using rule 98 (block_function -> block_function lengthArray .)
    RETURN          reduce using rule 98 (block_function -> block_function lengthArray .)
    MIENTRAS        reduce using rule 98 (block_function -> block_function lengthArray .)
    FOR             reduce using rule 98 (block_function -> block_function lengthArray .)
    IF              reduce using rule 98 (block_function -> block_function lengthArray .)
    PARSE           reduce using rule 98 (block_function -> block_function lengthArray .)
    TRUNC           reduce using rule 98 (block_function -> block_function lengthArray .)
    FLOAT           reduce using rule 98 (block_function -> block_function lengthArray .)
    STRINGNATIVE    reduce using rule 98 (block_function -> block_function lengthArray .)
    TYPEOF          reduce using rule 98 (block_function -> block_function lengthArray .)
    PUSH            reduce using rule 98 (block_function -> block_function lengthArray .)
    POP             reduce using rule 98 (block_function -> block_function lengthArray .)
    LENGTH          reduce using rule 98 (block_function -> block_function lengthArray .)
    MUTABLE         reduce using rule 98 (block_function -> block_function lengthArray .)
    STRUCT          reduce using rule 98 (block_function -> block_function lengthArray .)


state 424

    (99) block_function -> block_function assignmentArray .

    END             reduce using rule 99 (block_function -> block_function assignmentArray .)
    PRINT           reduce using rule 99 (block_function -> block_function assignmentArray .)
    PRINTLN         reduce using rule 99 (block_function -> block_function assignmentArray .)
    ID              reduce using rule 99 (block_function -> block_function assignmentArray .)
    GLOBAL          reduce using rule 99 (block_function -> block_function assignmentArray .)
    RETURN          reduce using rule 99 (block_function -> block_function assignmentArray .)
    MIENTRAS        reduce using rule 99 (block_function -> block_function assignmentArray .)
    FOR             reduce using rule 99 (block_function -> block_function assignmentArray .)
    IF              reduce using rule 99 (block_function -> block_function assignmentArray .)
    PARSE           reduce using rule 99 (block_function -> block_function assignmentArray .)
    TRUNC           reduce using rule 99 (block_function -> block_function assignmentArray .)
    FLOAT           reduce using rule 99 (block_function -> block_function assignmentArray .)
    STRINGNATIVE    reduce using rule 99 (block_function -> block_function assignmentArray .)
    TYPEOF          reduce using rule 99 (block_function -> block_function assignmentArray .)
    PUSH            reduce using rule 99 (block_function -> block_function assignmentArray .)
    POP             reduce using rule 99 (block_function -> block_function assignmentArray .)
    LENGTH          reduce using rule 99 (block_function -> block_function assignmentArray .)
    MUTABLE         reduce using rule 99 (block_function -> block_function assignmentArray .)
    STRUCT          reduce using rule 99 (block_function -> block_function assignmentArray .)


state 425

    (100) block_function -> block_function Struct .

    END             reduce using rule 100 (block_function -> block_function Struct .)
    PRINT           reduce using rule 100 (block_function -> block_function Struct .)
    PRINTLN         reduce using rule 100 (block_function -> block_function Struct .)
    ID              reduce using rule 100 (block_function -> block_function Struct .)
    GLOBAL          reduce using rule 100 (block_function -> block_function Struct .)
    RETURN          reduce using rule 100 (block_function -> block_function Struct .)
    MIENTRAS        reduce using rule 100 (block_function -> block_function Struct .)
    FOR             reduce using rule 100 (block_function -> block_function Struct .)
    IF              reduce using rule 100 (block_function -> block_function Struct .)
    PARSE           reduce using rule 100 (block_function -> block_function Struct .)
    TRUNC           reduce using rule 100 (block_function -> block_function Struct .)
    FLOAT           reduce using rule 100 (block_function -> block_function Struct .)
    STRINGNATIVE    reduce using rule 100 (block_function -> block_function Struct .)
    TYPEOF          reduce using rule 100 (block_function -> block_function Struct .)
    PUSH            reduce using rule 100 (block_function -> block_function Struct .)
    POP             reduce using rule 100 (block_function -> block_function Struct .)
    LENGTH          reduce using rule 100 (block_function -> block_function Struct .)
    MUTABLE         reduce using rule 100 (block_function -> block_function Struct .)
    STRUCT          reduce using rule 100 (block_function -> block_function Struct .)


state 426

    (101) block_function -> block_function structAccess .

    END             reduce using rule 101 (block_function -> block_function structAccess .)
    PRINT           reduce using rule 101 (block_function -> block_function structAccess .)
    PRINTLN         reduce using rule 101 (block_function -> block_function structAccess .)
    ID              reduce using rule 101 (block_function -> block_function structAccess .)
    GLOBAL          reduce using rule 101 (block_function -> block_function structAccess .)
    RETURN          reduce using rule 101 (block_function -> block_function structAccess .)
    MIENTRAS        reduce using rule 101 (block_function -> block_function structAccess .)
    FOR             reduce using rule 101 (block_function -> block_function structAccess .)
    IF              reduce using rule 101 (block_function -> block_function structAccess .)
    PARSE           reduce using rule 101 (block_function -> block_function structAccess .)
    TRUNC           reduce using rule 101 (block_function -> block_function structAccess .)
    FLOAT           reduce using rule 101 (block_function -> block_function structAccess .)
    STRINGNATIVE    reduce using rule 101 (block_function -> block_function structAccess .)
    TYPEOF          reduce using rule 101 (block_function -> block_function structAccess .)
    PUSH            reduce using rule 101 (block_function -> block_function structAccess .)
    POP             reduce using rule 101 (block_function -> block_function structAccess .)
    LENGTH          reduce using rule 101 (block_function -> block_function structAccess .)
    MUTABLE         reduce using rule 101 (block_function -> block_function structAccess .)
    STRUCT          reduce using rule 101 (block_function -> block_function structAccess .)


state 427

    (175) Asignacion -> ID IGUAL exp DOSP DOSP ID . PCOMA

    PCOMA           shift and go to state 457


state 428

    (174) Asignacion -> ID IGUAL exp DOSP DOSP type . PCOMA

    PCOMA           shift and go to state 458


state 429

    (227) listArray -> listArray CORCHETEA exp CORCHETEC .

    CORCHETEA       reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    MAS             reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    MENOS           reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    POR             reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    DIVIDIDO        reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    POTENCIA        reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    PORCENTAJE      reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    MAYOR           reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    MENOR           reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    MAYORIGUAL      reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    MENORIGUAL      reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    DOBLEIGUAL      reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    NOIGUAL         reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    OR              reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    AND             reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    DOSP            reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    PRINT           reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    PRINTLN         reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    ID              reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    GLOBAL          reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    RETURN          reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    MIENTRAS        reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    FOR             reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    IF              reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    PARSE           reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    TRUNC           reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    FLOAT           reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    STRINGNATIVE    reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    TYPEOF          reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    PUSH            reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    POP             reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    LENGTH          reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    BREAK           reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    CONTINUE        reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    MUTABLE         reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    STRUCT          reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    END             reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    ELSEIF          reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    ELSE            reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    PARENTESISC     reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    COMA            reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    PCOMA           reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)
    CORCHETEC       reduce using rule 227 (listArray -> listArray CORCHETEA exp CORCHETEC .)


state 430

    (195) exp -> PUSH NOT PARENTESISA exp COMA . parametersCall PARENTESISC
    (73) parametersCall -> . parametersCall COMA exp
    (74) parametersCall -> . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    exp                            shift and go to state 121
    parametersCall                 shift and go to state 459
    array                          shift and go to state 83

state 431

    (196) exp -> PUSH NOT PARENTESISA ID COMA . parametersCall PARENTESISC
    (73) parametersCall -> . parametersCall COMA exp
    (74) parametersCall -> . exp
    (178) exp -> . exp MAS exp
    (179) exp -> . exp MENOS exp
    (180) exp -> . exp POR exp
    (181) exp -> . exp DIVIDIDO exp
    (182) exp -> . exp POTENCIA exp
    (183) exp -> . exp PORCENTAJE exp
    (184) exp -> . exp MAYOR exp
    (185) exp -> . exp MENOR exp
    (186) exp -> . exp MAYORIGUAL exp
    (187) exp -> . exp MENORIGUAL exp
    (188) exp -> . exp DOBLEIGUAL exp
    (189) exp -> . exp NOIGUAL exp
    (190) exp -> . exp OR exp
    (191) exp -> . exp AND exp
    (192) exp -> . ID attributes
    (195) exp -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC
    (196) exp -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC
    (197) exp -> . POP NOT PARENTESISA exp PARENTESISC
    (198) exp -> . POP NOT PARENTESISA ID PARENTESISC
    (199) exp -> . LENGTH PARENTESISA exp PARENTESISC
    (200) exp -> . LENGTH PARENTESISA ID PARENTESISC
    (201) exp -> . PARSE PARENTESISA type COMA exp PARENTESISC
    (202) exp -> . TRUNC PARENTESISA type COMA exp PARENTESISC
    (203) exp -> . TRUNC PARENTESISA exp PARENTESISC
    (204) exp -> . FLOAT PARENTESISA exp PARENTESISC
    (205) exp -> . STRINGNATIVE PARENTESISA exp PARENTESISC
    (206) exp -> . TYPEOF PARENTESISA exp PARENTESISC
    (207) exp -> . array
    (209) exp -> . exp DOSP exp
    (210) exp -> . ID PARENTESISA parametersCall PARENTESISC
    (211) exp -> . ID PARENTESISA PARENTESISC
    (212) exp -> . MENOS exp
    (213) exp -> . NOT exp
    (214) exp -> . PARENTESISA exp PARENTESISC
    (215) exp -> . ENTERO
    (216) exp -> . DECIMAL
    (217) exp -> . CADENA
    (218) exp -> . CARACTER
    (219) exp -> . FALSE
    (220) exp -> . TRUE
    (221) exp -> . NULO
    (222) exp -> . ID
    (223) exp -> . ID listArray
    (229) exp -> . UPPERCASE PARENTESISA exp PARENTESISC
    (230) exp -> . LOWERCASE PARENTESISA exp PARENTESISC
    (231) exp -> . LOGARITMOB10 PARENTESISA exp PARENTESISC
    (232) exp -> . LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC
    (233) exp -> . SIN PARENTESISA exp PARENTESISC
    (234) exp -> . COS PARENTESISA exp PARENTESISC
    (235) exp -> . TAN PARENTESISA exp PARENTESISC
    (236) exp -> . SQRT PARENTESISA exp PARENTESISC
    (208) array -> . CORCHETEA parametersCall CORCHETEC

    ID              shift and go to state 72
    PUSH            shift and go to state 73
    POP             shift and go to state 76
    LENGTH          shift and go to state 77
    PARSE           shift and go to state 78
    TRUNC           shift and go to state 79
    FLOAT           shift and go to state 80
    STRINGNATIVE    shift and go to state 81
    TYPEOF          shift and go to state 82
    MENOS           shift and go to state 71
    NOT             shift and go to state 74
    PARENTESISA     shift and go to state 75
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 85
    CADENA          shift and go to state 86
    CARACTER        shift and go to state 87
    FALSE           shift and go to state 88
    TRUE            shift and go to state 89
    NULO            shift and go to state 90
    UPPERCASE       shift and go to state 91
    LOWERCASE       shift and go to state 92
    LOGARITMOB10    shift and go to state 93
    LOGARITMONOB10  shift and go to state 94
    SIN             shift and go to state 95
    COS             shift and go to state 96
    TAN             shift and go to state 97
    SQRT            shift and go to state 98
    CORCHETEA       shift and go to state 99

    parametersCall                 shift and go to state 460
    exp                            shift and go to state 121
    array                          shift and go to state 83

state 432

    (197) exp -> POP NOT PARENTESISA exp PARENTESISC .

    MAS             reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    MENOS           reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    POR             reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    DIVIDIDO        reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    POTENCIA        reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    PORCENTAJE      reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    MAYOR           reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    MENOR           reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    MAYORIGUAL      reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    MENORIGUAL      reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    DOBLEIGUAL      reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    NOIGUAL         reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    OR              reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    AND             reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    DOSP            reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    PRINT           reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    PRINTLN         reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    ID              reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    GLOBAL          reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    RETURN          reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    MIENTRAS        reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    FOR             reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    IF              reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    PARSE           reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    TRUNC           reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    FLOAT           reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    STRINGNATIVE    reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    TYPEOF          reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    PUSH            reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    POP             reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    LENGTH          reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    BREAK           reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    CONTINUE        reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    MUTABLE         reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    STRUCT          reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    END             reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    ELSEIF          reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    ELSE            reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    PARENTESISC     reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    COMA            reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    PCOMA           reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)
    CORCHETEC       reduce using rule 197 (exp -> POP NOT PARENTESISA exp PARENTESISC .)


state 433

    (198) exp -> POP NOT PARENTESISA ID PARENTESISC .

    MAS             reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    MENOS           reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    POR             reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    DIVIDIDO        reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    POTENCIA        reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    PORCENTAJE      reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    MAYOR           reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    MENOR           reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    MAYORIGUAL      reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    MENORIGUAL      reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    DOBLEIGUAL      reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    NOIGUAL         reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    OR              reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    AND             reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    DOSP            reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    PRINT           reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    PRINTLN         reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    ID              reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    GLOBAL          reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    RETURN          reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    MIENTRAS        reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    FOR             reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    IF              reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    PARSE           reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    TRUNC           reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    FLOAT           reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    STRINGNATIVE    reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    TYPEOF          reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    PUSH            reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    POP             reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    LENGTH          reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    BREAK           reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    CONTINUE        reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    MUTABLE         reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    STRUCT          reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    END             reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    ELSEIF          reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    ELSE            reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    PARENTESISC     reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    COMA            reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    PCOMA           reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)
    CORCHETEC       reduce using rule 198 (exp -> POP NOT PARENTESISA ID PARENTESISC .)


state 434

    (201) exp -> PARSE PARENTESISA type COMA exp . PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 461
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 435

    (202) exp -> TRUNC PARENTESISA type COMA exp . PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 462
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 436

    (232) exp -> LOGARITMONOB10 PARENTESISA exp COMA exp . PARENTESISC
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp

    PARENTESISC     shift and go to state 463
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145


state 437

    (70) forLoop -> FOR ID IN exp block_loops END . PCOMA

    PCOMA           shift and go to state 464


state 438

    (62) IfCondition -> IF exp block_loops elseIfSt elseSt END . PCOMA

    PCOMA           shift and go to state 465


state 439

    (63) elseIfSt -> elseIfSt ELSEIF exp . block_loops
    (178) exp -> exp . MAS exp
    (179) exp -> exp . MENOS exp
    (180) exp -> exp . POR exp
    (181) exp -> exp . DIVIDIDO exp
    (182) exp -> exp . POTENCIA exp
    (183) exp -> exp . PORCENTAJE exp
    (184) exp -> exp . MAYOR exp
    (185) exp -> exp . MENOR exp
    (186) exp -> exp . MAYORIGUAL exp
    (187) exp -> exp . MENORIGUAL exp
    (188) exp -> exp . DOBLEIGUAL exp
    (189) exp -> exp . NOIGUAL exp
    (190) exp -> exp . OR exp
    (191) exp -> exp . AND exp
    (209) exp -> exp . DOSP exp
    (124) block_loops -> . block_loops Print
    (125) block_loops -> . block_loops Println
    (126) block_loops -> . block_loops Asignacion
    (127) block_loops -> . block_loops retorno
    (128) block_loops -> . block_loops functionCall
    (129) block_loops -> . block_loops forLoop
    (130) block_loops -> . block_loops whileLoop
    (131) block_loops -> . block_loops IfCondition
    (132) block_loops -> . block_loops parseNative
    (133) block_loops -> . block_loops truncNative
    (134) block_loops -> . block_loops floatNative
    (135) block_loops -> . block_loops stringNative
    (136) block_loops -> . block_loops typeOfNative
    (137) block_loops -> . block_loops pushArray
    (138) block_loops -> . block_loops popArray
    (139) block_loops -> . block_loops lengthArray
    (140) block_loops -> . block_loops assignmentArray
    (141) block_loops -> . block_loops Break
    (142) block_loops -> . block_loops Continue
    (143) block_loops -> . block_loops Struct
    (144) block_loops -> . block_loops structAccess
    (145) block_loops -> . Print
    (146) block_loops -> . Println
    (147) block_loops -> . Asignacion
    (148) block_loops -> . retorno
    (149) block_loops -> . functionCall
    (150) block_loops -> . whileLoop
    (151) block_loops -> . forLoop
    (152) block_loops -> . IfCondition
    (153) block_loops -> . parseNative
    (154) block_loops -> . truncNative
    (155) block_loops -> . floatNative
    (156) block_loops -> . stringNative
    (157) block_loops -> . typeOfNative
    (158) block_loops -> . pushArray
    (159) block_loops -> . popArray
    (160) block_loops -> . lengthArray
    (161) block_loops -> . assignmentArray
    (162) block_loops -> . Break
    (163) block_loops -> . Continue
    (164) block_loops -> . Struct
    (165) block_loops -> . structAccess
    (166) block_loops -> . empty
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (167) retorno -> . RETURN exp PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (122) Break -> . BREAK PCOMA
    (123) Continue -> . CONTINUE PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA
    (68) empty -> .

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for GLOBAL resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARSE resolved as shift
  ! shift/reduce conflict for TRUNC resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRINGNATIVE resolved as shift
  ! shift/reduce conflict for TYPEOF resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for LENGTH resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for MUTABLE resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
    MAS             shift and go to state 131
    MENOS           shift and go to state 132
    POR             shift and go to state 133
    DIVIDIDO        shift and go to state 134
    POTENCIA        shift and go to state 135
    PORCENTAJE      shift and go to state 136
    MAYOR           shift and go to state 137
    MENOR           shift and go to state 138
    MAYORIGUAL      shift and go to state 139
    MENORIGUAL      shift and go to state 140
    DOBLEIGUAL      shift and go to state 141
    NOIGUAL         shift and go to state 142
    OR              shift and go to state 143
    AND             shift and go to state 144
    DOSP            shift and go to state 145
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    RETURN          shift and go to state 168
    MIENTRAS        shift and go to state 28
    FOR             shift and go to state 29
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    BREAK           shift and go to state 169
    CONTINUE        shift and go to state 170
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40
    ELSEIF          reduce using rule 68 (empty -> .)
    ELSE            reduce using rule 68 (empty -> .)
    END             reduce using rule 68 (empty -> .)

  ! PRINT           [ reduce using rule 68 (empty -> .) ]
  ! PRINTLN         [ reduce using rule 68 (empty -> .) ]
  ! ID              [ reduce using rule 68 (empty -> .) ]
  ! GLOBAL          [ reduce using rule 68 (empty -> .) ]
  ! RETURN          [ reduce using rule 68 (empty -> .) ]
  ! FOR             [ reduce using rule 68 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 68 (empty -> .) ]
  ! IF              [ reduce using rule 68 (empty -> .) ]
  ! PARSE           [ reduce using rule 68 (empty -> .) ]
  ! TRUNC           [ reduce using rule 68 (empty -> .) ]
  ! FLOAT           [ reduce using rule 68 (empty -> .) ]
  ! STRINGNATIVE    [ reduce using rule 68 (empty -> .) ]
  ! TYPEOF          [ reduce using rule 68 (empty -> .) ]
  ! PUSH            [ reduce using rule 68 (empty -> .) ]
  ! POP             [ reduce using rule 68 (empty -> .) ]
  ! LENGTH          [ reduce using rule 68 (empty -> .) ]
  ! BREAK           [ reduce using rule 68 (empty -> .) ]
  ! CONTINUE        [ reduce using rule 68 (empty -> .) ]
  ! MUTABLE         [ reduce using rule 68 (empty -> .) ]
  ! STRUCT          [ reduce using rule 68 (empty -> .) ]

    block_loops                    shift and go to state 466
    Print                          shift and go to state 146
    Println                        shift and go to state 147
    Asignacion                     shift and go to state 148
    retorno                        shift and go to state 149
    functionCall                   shift and go to state 150
    forLoop                        shift and go to state 151
    whileLoop                      shift and go to state 152
    IfCondition                    shift and go to state 153
    parseNative                    shift and go to state 154
    truncNative                    shift and go to state 155
    floatNative                    shift and go to state 156
    stringNative                   shift and go to state 157
    typeOfNative                   shift and go to state 158
    pushArray                      shift and go to state 159
    popArray                       shift and go to state 160
    lengthArray                    shift and go to state 161
    assignmentArray                shift and go to state 162
    Break                          shift and go to state 163
    Continue                       shift and go to state 164
    Struct                         shift and go to state 165
    structAccess                   shift and go to state 166
    empty                          shift and go to state 167

state 440

    (66) elseSt -> ELSE block_loops .
    (124) block_loops -> block_loops . Print
    (125) block_loops -> block_loops . Println
    (126) block_loops -> block_loops . Asignacion
    (127) block_loops -> block_loops . retorno
    (128) block_loops -> block_loops . functionCall
    (129) block_loops -> block_loops . forLoop
    (130) block_loops -> block_loops . whileLoop
    (131) block_loops -> block_loops . IfCondition
    (132) block_loops -> block_loops . parseNative
    (133) block_loops -> block_loops . truncNative
    (134) block_loops -> block_loops . floatNative
    (135) block_loops -> block_loops . stringNative
    (136) block_loops -> block_loops . typeOfNative
    (137) block_loops -> block_loops . pushArray
    (138) block_loops -> block_loops . popArray
    (139) block_loops -> block_loops . lengthArray
    (140) block_loops -> block_loops . assignmentArray
    (141) block_loops -> block_loops . Break
    (142) block_loops -> block_loops . Continue
    (143) block_loops -> block_loops . Struct
    (144) block_loops -> block_loops . structAccess
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (167) retorno -> . RETURN exp PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (122) Break -> . BREAK PCOMA
    (123) Continue -> . CONTINUE PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA

    END             reduce using rule 66 (elseSt -> ELSE block_loops .)
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    RETURN          shift and go to state 168
    FOR             shift and go to state 29
    MIENTRAS        shift and go to state 28
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    BREAK           shift and go to state 169
    CONTINUE        shift and go to state 170
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40

    Print                          shift and go to state 237
    Println                        shift and go to state 238
    Asignacion                     shift and go to state 239
    retorno                        shift and go to state 240
    functionCall                   shift and go to state 241
    forLoop                        shift and go to state 242
    whileLoop                      shift and go to state 243
    IfCondition                    shift and go to state 244
    parseNative                    shift and go to state 245
    truncNative                    shift and go to state 246
    floatNative                    shift and go to state 247
    stringNative                   shift and go to state 248
    typeOfNative                   shift and go to state 249
    pushArray                      shift and go to state 250
    popArray                       shift and go to state 251
    lengthArray                    shift and go to state 252
    assignmentArray                shift and go to state 253
    Break                          shift and go to state 254
    Continue                       shift and go to state 255
    Struct                         shift and go to state 256
    structAccess                   shift and go to state 257

state 441

    (64) elseIfSt -> ELSEIF exp block_loops .
    (124) block_loops -> block_loops . Print
    (125) block_loops -> block_loops . Println
    (126) block_loops -> block_loops . Asignacion
    (127) block_loops -> block_loops . retorno
    (128) block_loops -> block_loops . functionCall
    (129) block_loops -> block_loops . forLoop
    (130) block_loops -> block_loops . whileLoop
    (131) block_loops -> block_loops . IfCondition
    (132) block_loops -> block_loops . parseNative
    (133) block_loops -> block_loops . truncNative
    (134) block_loops -> block_loops . floatNative
    (135) block_loops -> block_loops . stringNative
    (136) block_loops -> block_loops . typeOfNative
    (137) block_loops -> block_loops . pushArray
    (138) block_loops -> block_loops . popArray
    (139) block_loops -> block_loops . lengthArray
    (140) block_loops -> block_loops . assignmentArray
    (141) block_loops -> block_loops . Break
    (142) block_loops -> block_loops . Continue
    (143) block_loops -> block_loops . Struct
    (144) block_loops -> block_loops . structAccess
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (167) retorno -> . RETURN exp PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (122) Break -> . BREAK PCOMA
    (123) Continue -> . CONTINUE PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA

    ELSEIF          reduce using rule 64 (elseIfSt -> ELSEIF exp block_loops .)
    ELSE            reduce using rule 64 (elseIfSt -> ELSEIF exp block_loops .)
    END             reduce using rule 64 (elseIfSt -> ELSEIF exp block_loops .)
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    RETURN          shift and go to state 168
    FOR             shift and go to state 29
    MIENTRAS        shift and go to state 28
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    BREAK           shift and go to state 169
    CONTINUE        shift and go to state 170
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40

    Print                          shift and go to state 237
    Println                        shift and go to state 238
    Asignacion                     shift and go to state 239
    retorno                        shift and go to state 240
    functionCall                   shift and go to state 241
    forLoop                        shift and go to state 242
    whileLoop                      shift and go to state 243
    IfCondition                    shift and go to state 244
    parseNative                    shift and go to state 245
    truncNative                    shift and go to state 246
    floatNative                    shift and go to state 247
    stringNative                   shift and go to state 248
    typeOfNative                   shift and go to state 249
    pushArray                      shift and go to state 250
    popArray                       shift and go to state 251
    lengthArray                    shift and go to state 252
    assignmentArray                shift and go to state 253
    Break                          shift and go to state 254
    Continue                       shift and go to state 255
    Struct                         shift and go to state 256
    structAccess                   shift and go to state 257

state 442

    (56) parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC . PCOMA

    PCOMA           shift and go to state 467


state 443

    (57) truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC . PCOMA

    PCOMA           shift and go to state 468


state 444

    (50) pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall . PARENTESISC PCOMA
    (73) parametersCall -> parametersCall . COMA exp

    PARENTESISC     shift and go to state 469
    COMA            shift and go to state 219


state 445

    (51) pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall . PARENTESISC PCOMA
    (73) parametersCall -> parametersCall . COMA exp

    PARENTESISC     shift and go to state 470
    COMA            shift and go to state 219


state 446

    (52) popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .

    PRINT           reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    ID              reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    FOR             reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    IF              reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    PARSE           reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    TRUNC           reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    FLOAT           reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    PUSH            reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    POP             reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    LENGTH          reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    STRUCT          reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    $end            reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    END             reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    RETURN          reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    BREAK           reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)
    ELSE            reduce using rule 52 (popArray -> POP NOT PARENTESISA exp PARENTESISC PCOMA .)


state 447

    (53) popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .

    PRINT           reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    ID              reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    FOR             reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    IF              reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    PARSE           reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    TRUNC           reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    FLOAT           reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    PUSH            reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    POP             reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    LENGTH          reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    STRUCT          reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    $end            reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    END             reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    RETURN          reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    BREAK           reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)
    ELSE            reduce using rule 53 (popArray -> POP NOT PARENTESISA ID PARENTESISC PCOMA .)


state 448

    (41) Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .

    PRINT           reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    PRINTLN         reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    ID              reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    GLOBAL          reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    FUNCTION        reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    MIENTRAS        reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    FOR             reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    IF              reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    PARSE           reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    TRUNC           reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    FLOAT           reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    STRINGNATIVE    reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    TYPEOF          reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    PUSH            reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    POP             reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    LENGTH          reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    MUTABLE         reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    STRUCT          reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    $end            reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    END             reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    RETURN          reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    BREAK           reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    CONTINUE        reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    ELSEIF          reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)
    ELSE            reduce using rule 41 (Struct -> MUTABLE STRUCT ID bodyStruct END PCOMA .)


state 449

    (48) bodyStruct -> ID DOSP DOSP ID . PCOMA

    PCOMA           shift and go to state 471


state 450

    (45) bodyStruct -> ID DOSP DOSP type . PCOMA

    PCOMA           shift and go to state 472


state 451

    (43) bodyStruct -> bodyStruct ID DOSP DOSP . type PCOMA
    (47) bodyStruct -> bodyStruct ID DOSP DOSP . ID PCOMA
    (237) type -> . INT64
    (238) type -> . FLOAT64
    (239) type -> . STRING
    (240) type -> . CHAR
    (241) type -> . BOOL
    (242) type -> . NULO

    ID              shift and go to state 473
    INT64           shift and go to state 198
    FLOAT64         shift and go to state 199
    STRING          shift and go to state 200
    CHAR            shift and go to state 201
    BOOL            shift and go to state 202
    NULO            shift and go to state 203

    type                           shift and go to state 474

state 452

    (82) parameters -> ID DOSP DOSP ID .

    PARENTESISC     reduce using rule 82 (parameters -> ID DOSP DOSP ID .)
    COMA            reduce using rule 82 (parameters -> ID DOSP DOSP ID .)


state 453

    (81) parameters -> ID DOSP DOSP type .

    PARENTESISC     reduce using rule 81 (parameters -> ID DOSP DOSP type .)
    COMA            reduce using rule 81 (parameters -> ID DOSP DOSP type .)


state 454

    (75) create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END . PCOMA

    PCOMA           shift and go to state 475


state 455

    (78) parameters -> parameters COMA ID DOSP . DOSP type
    (79) parameters -> parameters COMA ID DOSP . DOSP ID

    DOSP            shift and go to state 476


state 456

    (76) create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .

    PRINT           reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    PRINTLN         reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    ID              reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    GLOBAL          reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    FUNCTION        reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    MIENTRAS        reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    FOR             reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    IF              reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    PARSE           reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    TRUNC           reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    FLOAT           reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    STRINGNATIVE    reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    TYPEOF          reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    PUSH            reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    POP             reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    LENGTH          reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    MUTABLE         reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    STRUCT          reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)
    $end            reduce using rule 76 (create_function -> FUNCTION ID PARENTESISA PARENTESISC block_function END PCOMA .)


state 457

    (175) Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .

    PRINT           reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    PRINTLN         reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    ID              reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    GLOBAL          reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    FUNCTION        reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    MIENTRAS        reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    FOR             reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    IF              reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    PARSE           reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    TRUNC           reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    FLOAT           reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    STRINGNATIVE    reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    TYPEOF          reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    PUSH            reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    POP             reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    LENGTH          reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    MUTABLE         reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    STRUCT          reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    $end            reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    END             reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    RETURN          reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    BREAK           reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    CONTINUE        reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    ELSEIF          reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)
    ELSE            reduce using rule 175 (Asignacion -> ID IGUAL exp DOSP DOSP ID PCOMA .)


state 458

    (174) Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .

    PRINT           reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    PRINTLN         reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    ID              reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    GLOBAL          reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    FUNCTION        reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    MIENTRAS        reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    FOR             reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    IF              reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    PARSE           reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    TRUNC           reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    FLOAT           reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    STRINGNATIVE    reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    TYPEOF          reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    PUSH            reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    POP             reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    LENGTH          reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    MUTABLE         reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    STRUCT          reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    $end            reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    END             reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    RETURN          reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    BREAK           reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    CONTINUE        reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    ELSEIF          reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)
    ELSE            reduce using rule 174 (Asignacion -> ID IGUAL exp DOSP DOSP type PCOMA .)


state 459

    (195) exp -> PUSH NOT PARENTESISA exp COMA parametersCall . PARENTESISC
    (73) parametersCall -> parametersCall . COMA exp

    PARENTESISC     shift and go to state 477
    COMA            shift and go to state 219


state 460

    (196) exp -> PUSH NOT PARENTESISA ID COMA parametersCall . PARENTESISC
    (73) parametersCall -> parametersCall . COMA exp

    PARENTESISC     shift and go to state 478
    COMA            shift and go to state 219


state 461

    (201) exp -> PARSE PARENTESISA type COMA exp PARENTESISC .

    MAS             reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    MENOS           reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    POR             reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    DIVIDIDO        reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    POTENCIA        reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    PORCENTAJE      reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    MAYOR           reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    MENOR           reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    MAYORIGUAL      reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    MENORIGUAL      reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    DOBLEIGUAL      reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    NOIGUAL         reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    OR              reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    AND             reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    DOSP            reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    PRINT           reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    PRINTLN         reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    ID              reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    GLOBAL          reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    RETURN          reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    MIENTRAS        reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    FOR             reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    IF              reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    PARSE           reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    TRUNC           reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    FLOAT           reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    STRINGNATIVE    reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    TYPEOF          reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    PUSH            reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    POP             reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    LENGTH          reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    BREAK           reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    CONTINUE        reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    MUTABLE         reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    STRUCT          reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    END             reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    ELSEIF          reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    ELSE            reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    PARENTESISC     reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    COMA            reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    PCOMA           reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)
    CORCHETEC       reduce using rule 201 (exp -> PARSE PARENTESISA type COMA exp PARENTESISC .)


state 462

    (202) exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .

    MAS             reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    MENOS           reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    POR             reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    DIVIDIDO        reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    POTENCIA        reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    PORCENTAJE      reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    MAYOR           reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    MENOR           reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    MAYORIGUAL      reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    MENORIGUAL      reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    DOBLEIGUAL      reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    NOIGUAL         reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    OR              reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    AND             reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    DOSP            reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    PRINT           reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    PRINTLN         reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    ID              reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    GLOBAL          reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    RETURN          reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    MIENTRAS        reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    FOR             reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    IF              reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    PARSE           reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    TRUNC           reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    FLOAT           reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    STRINGNATIVE    reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    TYPEOF          reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    PUSH            reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    POP             reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    LENGTH          reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    BREAK           reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    CONTINUE        reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    MUTABLE         reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    STRUCT          reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    END             reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    ELSEIF          reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    ELSE            reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    PARENTESISC     reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    COMA            reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    PCOMA           reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)
    CORCHETEC       reduce using rule 202 (exp -> TRUNC PARENTESISA type COMA exp PARENTESISC .)


state 463

    (232) exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .

    MAS             reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    MENOS           reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    POR             reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    DIVIDIDO        reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    POTENCIA        reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    PORCENTAJE      reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    MAYOR           reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    MENOR           reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    MAYORIGUAL      reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    MENORIGUAL      reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    DOBLEIGUAL      reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    NOIGUAL         reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    OR              reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    AND             reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    DOSP            reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    PRINT           reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    PRINTLN         reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    ID              reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    GLOBAL          reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    RETURN          reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    MIENTRAS        reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    FOR             reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    IF              reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    PARSE           reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    TRUNC           reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    FLOAT           reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    STRINGNATIVE    reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    TYPEOF          reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    PUSH            reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    POP             reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    LENGTH          reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    BREAK           reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    CONTINUE        reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    MUTABLE         reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    STRUCT          reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    END             reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    ELSEIF          reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    ELSE            reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    PARENTESISC     reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    COMA            reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    PCOMA           reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)
    CORCHETEC       reduce using rule 232 (exp -> LOGARITMONOB10 PARENTESISA exp COMA exp PARENTESISC .)


state 464

    (70) forLoop -> FOR ID IN exp block_loops END PCOMA .

    PRINT           reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    PRINTLN         reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    ID              reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    GLOBAL          reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    FUNCTION        reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    MIENTRAS        reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    FOR             reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    IF              reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    PARSE           reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    TRUNC           reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    FLOAT           reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    STRINGNATIVE    reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    TYPEOF          reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    PUSH            reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    POP             reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    LENGTH          reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    MUTABLE         reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    STRUCT          reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    $end            reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    END             reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    RETURN          reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    BREAK           reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    CONTINUE        reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    ELSEIF          reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)
    ELSE            reduce using rule 70 (forLoop -> FOR ID IN exp block_loops END PCOMA .)


state 465

    (62) IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .

    PRINT           reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    PRINTLN         reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    ID              reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    GLOBAL          reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    FUNCTION        reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    MIENTRAS        reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    FOR             reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    IF              reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    PARSE           reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    TRUNC           reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    FLOAT           reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    STRINGNATIVE    reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    TYPEOF          reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    PUSH            reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    POP             reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    LENGTH          reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    MUTABLE         reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    STRUCT          reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    $end            reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    END             reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    RETURN          reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    BREAK           reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    CONTINUE        reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    ELSEIF          reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)
    ELSE            reduce using rule 62 (IfCondition -> IF exp block_loops elseIfSt elseSt END PCOMA .)


state 466

    (63) elseIfSt -> elseIfSt ELSEIF exp block_loops .
    (124) block_loops -> block_loops . Print
    (125) block_loops -> block_loops . Println
    (126) block_loops -> block_loops . Asignacion
    (127) block_loops -> block_loops . retorno
    (128) block_loops -> block_loops . functionCall
    (129) block_loops -> block_loops . forLoop
    (130) block_loops -> block_loops . whileLoop
    (131) block_loops -> block_loops . IfCondition
    (132) block_loops -> block_loops . parseNative
    (133) block_loops -> block_loops . truncNative
    (134) block_loops -> block_loops . floatNative
    (135) block_loops -> block_loops . stringNative
    (136) block_loops -> block_loops . typeOfNative
    (137) block_loops -> block_loops . pushArray
    (138) block_loops -> block_loops . popArray
    (139) block_loops -> block_loops . lengthArray
    (140) block_loops -> block_loops . assignmentArray
    (141) block_loops -> block_loops . Break
    (142) block_loops -> block_loops . Continue
    (143) block_loops -> block_loops . Struct
    (144) block_loops -> block_loops . structAccess
    (168) Print -> . PRINT PARENTESISA exp PARENTESISC PCOMA
    (169) Print -> . PRINT PARENTESISA parametersCall PARENTESISC PCOMA
    (170) Println -> . PRINTLN PARENTESISA exp PARENTESISC PCOMA
    (171) Println -> . PRINTLN PARENTESISA PARENTESISC PCOMA
    (172) Println -> . PRINTLN PARENTESISA parametersCall PARENTESISC PCOMA
    (173) Asignacion -> . ID IGUAL exp PCOMA
    (174) Asignacion -> . ID IGUAL exp DOSP DOSP type PCOMA
    (175) Asignacion -> . ID IGUAL exp DOSP DOSP ID PCOMA
    (176) Asignacion -> . GLOBAL ID IGUAL exp PCOMA
    (177) Asignacion -> . GLOBAL ID PCOMA
    (167) retorno -> . RETURN exp PCOMA
    (71) functionCall -> . ID PARENTESISA parametersCall PARENTESISC PCOMA
    (72) functionCall -> . ID PARENTESISA PARENTESISC PCOMA
    (70) forLoop -> . FOR ID IN exp block_loops END PCOMA
    (69) whileLoop -> . MIENTRAS exp block_loops END PCOMA
    (62) IfCondition -> . IF exp block_loops elseIfSt elseSt END PCOMA
    (56) parseNative -> . PARSE PARENTESISA type COMA exp PARENTESISC PCOMA
    (57) truncNative -> . TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA
    (58) truncNative -> . TRUNC PARENTESISA exp PARENTESISC PCOMA
    (59) floatNative -> . FLOAT PARENTESISA exp PARENTESISC PCOMA
    (60) stringNative -> . STRINGNATIVE PARENTESISA exp PARENTESISC PCOMA
    (61) typeOfNative -> . TYPEOF PARENTESISA exp PARENTESISC PCOMA
    (50) pushArray -> . PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA
    (51) pushArray -> . PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA
    (52) popArray -> . POP NOT PARENTESISA exp PARENTESISC PCOMA
    (53) popArray -> . POP NOT PARENTESISA ID PARENTESISC PCOMA
    (54) lengthArray -> . LENGTH PARENTESISA exp PARENTESISC PCOMA
    (55) lengthArray -> . LENGTH PARENTESISA ID PARENTESISC PCOMA
    (224) assignmentArray -> . ID listArrayRef IGUAL exp PCOMA
    (122) Break -> . BREAK PCOMA
    (123) Continue -> . CONTINUE PCOMA
    (41) Struct -> . MUTABLE STRUCT ID bodyStruct END PCOMA
    (42) Struct -> . STRUCT ID bodyStruct END PCOMA
    (49) structAccess -> . ID attributes IGUAL exp PCOMA

    ELSEIF          reduce using rule 63 (elseIfSt -> elseIfSt ELSEIF exp block_loops .)
    ELSE            reduce using rule 63 (elseIfSt -> elseIfSt ELSEIF exp block_loops .)
    END             reduce using rule 63 (elseIfSt -> elseIfSt ELSEIF exp block_loops .)
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    ID              shift and go to state 26
    GLOBAL          shift and go to state 27
    RETURN          shift and go to state 168
    FOR             shift and go to state 29
    MIENTRAS        shift and go to state 28
    IF              shift and go to state 30
    PARSE           shift and go to state 31
    TRUNC           shift and go to state 32
    FLOAT           shift and go to state 33
    STRINGNATIVE    shift and go to state 34
    TYPEOF          shift and go to state 35
    PUSH            shift and go to state 36
    POP             shift and go to state 37
    LENGTH          shift and go to state 38
    BREAK           shift and go to state 169
    CONTINUE        shift and go to state 170
    MUTABLE         shift and go to state 39
    STRUCT          shift and go to state 40

    Print                          shift and go to state 237
    Println                        shift and go to state 238
    Asignacion                     shift and go to state 239
    retorno                        shift and go to state 240
    functionCall                   shift and go to state 241
    forLoop                        shift and go to state 242
    whileLoop                      shift and go to state 243
    IfCondition                    shift and go to state 244
    parseNative                    shift and go to state 245
    truncNative                    shift and go to state 246
    floatNative                    shift and go to state 247
    stringNative                   shift and go to state 248
    typeOfNative                   shift and go to state 249
    pushArray                      shift and go to state 250
    popArray                       shift and go to state 251
    lengthArray                    shift and go to state 252
    assignmentArray                shift and go to state 253
    Break                          shift and go to state 254
    Continue                       shift and go to state 255
    Struct                         shift and go to state 256
    structAccess                   shift and go to state 257

state 467

    (56) parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .

    PRINT           reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    ID              reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    FOR             reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    IF              reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    PARSE           reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    TRUNC           reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    FLOAT           reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    PUSH            reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    POP             reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    LENGTH          reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    STRUCT          reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    $end            reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    END             reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    RETURN          reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    BREAK           reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)
    ELSE            reduce using rule 56 (parseNative -> PARSE PARENTESISA type COMA exp PARENTESISC PCOMA .)


state 468

    (57) truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .

    PRINT           reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    ID              reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    FOR             reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    IF              reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    PARSE           reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    TRUNC           reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    FLOAT           reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    PUSH            reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    POP             reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    LENGTH          reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    STRUCT          reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    $end            reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    END             reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    RETURN          reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    BREAK           reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)
    ELSE            reduce using rule 57 (truncNative -> TRUNC PARENTESISA type COMA exp PARENTESISC PCOMA .)


state 469

    (50) pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC . PCOMA

    PCOMA           shift and go to state 479


state 470

    (51) pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC . PCOMA

    PCOMA           shift and go to state 480


state 471

    (48) bodyStruct -> ID DOSP DOSP ID PCOMA .

    END             reduce using rule 48 (bodyStruct -> ID DOSP DOSP ID PCOMA .)
    ID              reduce using rule 48 (bodyStruct -> ID DOSP DOSP ID PCOMA .)


state 472

    (45) bodyStruct -> ID DOSP DOSP type PCOMA .

    END             reduce using rule 45 (bodyStruct -> ID DOSP DOSP type PCOMA .)
    ID              reduce using rule 45 (bodyStruct -> ID DOSP DOSP type PCOMA .)


state 473

    (47) bodyStruct -> bodyStruct ID DOSP DOSP ID . PCOMA

    PCOMA           shift and go to state 481


state 474

    (43) bodyStruct -> bodyStruct ID DOSP DOSP type . PCOMA

    PCOMA           shift and go to state 482


state 475

    (75) create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .

    PRINT           reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    PRINTLN         reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    ID              reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    GLOBAL          reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    FUNCTION        reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    MIENTRAS        reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    FOR             reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    IF              reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    PARSE           reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    TRUNC           reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    FLOAT           reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    STRINGNATIVE    reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    TYPEOF          reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    PUSH            reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    POP             reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    LENGTH          reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    MUTABLE         reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    STRUCT          reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)
    $end            reduce using rule 75 (create_function -> FUNCTION ID PARENTESISA parameters PARENTESISC block_function END PCOMA .)


state 476

    (78) parameters -> parameters COMA ID DOSP DOSP . type
    (79) parameters -> parameters COMA ID DOSP DOSP . ID
    (237) type -> . INT64
    (238) type -> . FLOAT64
    (239) type -> . STRING
    (240) type -> . CHAR
    (241) type -> . BOOL
    (242) type -> . NULO

    ID              shift and go to state 483
    INT64           shift and go to state 198
    FLOAT64         shift and go to state 199
    STRING          shift and go to state 200
    CHAR            shift and go to state 201
    BOOL            shift and go to state 202
    NULO            shift and go to state 203

    type                           shift and go to state 484

state 477

    (195) exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .

    MAS             reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    MENOS           reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    POR             reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    DIVIDIDO        reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    POTENCIA        reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    PORCENTAJE      reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    MAYOR           reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    MENOR           reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    MAYORIGUAL      reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    MENORIGUAL      reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    DOBLEIGUAL      reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    NOIGUAL         reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    OR              reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    AND             reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    DOSP            reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    PRINT           reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    PRINTLN         reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    ID              reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    GLOBAL          reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    RETURN          reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    MIENTRAS        reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    FOR             reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    IF              reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    PARSE           reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    TRUNC           reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    FLOAT           reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    STRINGNATIVE    reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    TYPEOF          reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    PUSH            reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    POP             reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    LENGTH          reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    BREAK           reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    CONTINUE        reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    MUTABLE         reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    STRUCT          reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    END             reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    ELSEIF          reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    ELSE            reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    PARENTESISC     reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    COMA            reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    PCOMA           reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)
    CORCHETEC       reduce using rule 195 (exp -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC .)


state 478

    (196) exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .

    MAS             reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    MENOS           reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    POR             reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    DIVIDIDO        reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    POTENCIA        reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    PORCENTAJE      reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    MAYOR           reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    MENOR           reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    MAYORIGUAL      reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    MENORIGUAL      reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    DOBLEIGUAL      reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    NOIGUAL         reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    OR              reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    AND             reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    DOSP            reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    PRINT           reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    PRINTLN         reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    ID              reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    GLOBAL          reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    RETURN          reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    MIENTRAS        reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    FOR             reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    IF              reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    PARSE           reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    TRUNC           reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    FLOAT           reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    STRINGNATIVE    reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    TYPEOF          reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    PUSH            reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    POP             reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    LENGTH          reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    BREAK           reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    CONTINUE        reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    MUTABLE         reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    STRUCT          reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    END             reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    ELSEIF          reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    ELSE            reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    PARENTESISC     reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    COMA            reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    PCOMA           reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)
    CORCHETEC       reduce using rule 196 (exp -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC .)


state 479

    (50) pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .

    PRINT           reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    ID              reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    FOR             reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    IF              reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    PARSE           reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    TRUNC           reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    FLOAT           reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    PUSH            reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    POP             reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    LENGTH          reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    STRUCT          reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    $end            reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    END             reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    RETURN          reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    BREAK           reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)
    ELSE            reduce using rule 50 (pushArray -> PUSH NOT PARENTESISA exp COMA parametersCall PARENTESISC PCOMA .)


state 480

    (51) pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .

    PRINT           reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    PRINTLN         reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    ID              reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    GLOBAL          reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    FUNCTION        reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    MIENTRAS        reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    FOR             reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    IF              reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    PARSE           reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    TRUNC           reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    FLOAT           reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    STRINGNATIVE    reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    TYPEOF          reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    PUSH            reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    POP             reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    LENGTH          reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    MUTABLE         reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    STRUCT          reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    $end            reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    END             reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    RETURN          reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    BREAK           reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    CONTINUE        reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    ELSEIF          reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)
    ELSE            reduce using rule 51 (pushArray -> PUSH NOT PARENTESISA ID COMA parametersCall PARENTESISC PCOMA .)


state 481

    (47) bodyStruct -> bodyStruct ID DOSP DOSP ID PCOMA .

    END             reduce using rule 47 (bodyStruct -> bodyStruct ID DOSP DOSP ID PCOMA .)
    ID              reduce using rule 47 (bodyStruct -> bodyStruct ID DOSP DOSP ID PCOMA .)


state 482

    (43) bodyStruct -> bodyStruct ID DOSP DOSP type PCOMA .

    END             reduce using rule 43 (bodyStruct -> bodyStruct ID DOSP DOSP type PCOMA .)
    ID              reduce using rule 43 (bodyStruct -> bodyStruct ID DOSP DOSP type PCOMA .)


state 483

    (79) parameters -> parameters COMA ID DOSP DOSP ID .

    PARENTESISC     reduce using rule 79 (parameters -> parameters COMA ID DOSP DOSP ID .)
    COMA            reduce using rule 79 (parameters -> parameters COMA ID DOSP DOSP ID .)


state 484

    (78) parameters -> parameters COMA ID DOSP DOSP type .

    PARENTESISC     reduce using rule 78 (parameters -> parameters COMA ID DOSP DOSP type .)
    COMA            reduce using rule 78 (parameters -> parameters COMA ID DOSP DOSP type .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for GLOBAL in state 0 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 0 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for PARSE in state 0 resolved as shift
WARNING: shift/reduce conflict for TRUNC in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for STRINGNATIVE in state 0 resolved as shift
WARNING: shift/reduce conflict for TYPEOF in state 0 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 0 resolved as shift
WARNING: shift/reduce conflict for POP in state 0 resolved as shift
WARNING: shift/reduce conflict for LENGTH in state 0 resolved as shift
WARNING: shift/reduce conflict for MUTABLE in state 0 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 70 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 70 resolved as shift
WARNING: shift/reduce conflict for ID in state 70 resolved as shift
WARNING: shift/reduce conflict for GLOBAL in state 70 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 70 resolved as shift
WARNING: shift/reduce conflict for FOR in state 70 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 70 resolved as shift
WARNING: shift/reduce conflict for IF in state 70 resolved as shift
WARNING: shift/reduce conflict for PARSE in state 70 resolved as shift
WARNING: shift/reduce conflict for TRUNC in state 70 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 70 resolved as shift
WARNING: shift/reduce conflict for STRINGNATIVE in state 70 resolved as shift
WARNING: shift/reduce conflict for TYPEOF in state 70 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 70 resolved as shift
WARNING: shift/reduce conflict for POP in state 70 resolved as shift
WARNING: shift/reduce conflict for LENGTH in state 70 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 70 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 70 resolved as shift
WARNING: shift/reduce conflict for MUTABLE in state 70 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 70 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 101 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 101 resolved as shift
WARNING: shift/reduce conflict for ID in state 101 resolved as shift
WARNING: shift/reduce conflict for GLOBAL in state 101 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 101 resolved as shift
WARNING: shift/reduce conflict for FOR in state 101 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 101 resolved as shift
WARNING: shift/reduce conflict for IF in state 101 resolved as shift
WARNING: shift/reduce conflict for PARSE in state 101 resolved as shift
WARNING: shift/reduce conflict for TRUNC in state 101 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 101 resolved as shift
WARNING: shift/reduce conflict for STRINGNATIVE in state 101 resolved as shift
WARNING: shift/reduce conflict for TYPEOF in state 101 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 101 resolved as shift
WARNING: shift/reduce conflict for POP in state 101 resolved as shift
WARNING: shift/reduce conflict for LENGTH in state 101 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 101 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 101 resolved as shift
WARNING: shift/reduce conflict for MUTABLE in state 101 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 101 resolved as shift
WARNING: shift/reduce conflict for PARENTESISC in state 112 resolved as shift
WARNING: shift/reduce conflict for PARENTESISC in state 114 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 196 resolved as shift
WARNING: shift/reduce conflict for PARENTESISC in state 213 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 225 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 225 resolved as shift
WARNING: shift/reduce conflict for ID in state 225 resolved as shift
WARNING: shift/reduce conflict for GLOBAL in state 225 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 225 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 225 resolved as shift
WARNING: shift/reduce conflict for FOR in state 225 resolved as shift
WARNING: shift/reduce conflict for IF in state 225 resolved as shift
WARNING: shift/reduce conflict for PARSE in state 225 resolved as shift
WARNING: shift/reduce conflict for TRUNC in state 225 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 225 resolved as shift
WARNING: shift/reduce conflict for STRINGNATIVE in state 225 resolved as shift
WARNING: shift/reduce conflict for TYPEOF in state 225 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 225 resolved as shift
WARNING: shift/reduce conflict for POP in state 225 resolved as shift
WARNING: shift/reduce conflict for LENGTH in state 225 resolved as shift
WARNING: shift/reduce conflict for MUTABLE in state 225 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 225 resolved as shift
WARNING: shift/reduce conflict for MAS in state 272 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 272 resolved as shift
WARNING: shift/reduce conflict for POR in state 272 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 272 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 272 resolved as shift
WARNING: shift/reduce conflict for PORCENTAJE in state 272 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 272 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 272 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 272 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 272 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 272 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 272 resolved as shift
WARNING: shift/reduce conflict for OR in state 272 resolved as shift
WARNING: shift/reduce conflict for AND in state 272 resolved as shift
WARNING: shift/reduce conflict for DOSP in state 272 resolved as shift
WARNING: shift/reduce conflict for PARENTESISC in state 284 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 300 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 300 resolved as shift
WARNING: shift/reduce conflict for ID in state 300 resolved as shift
WARNING: shift/reduce conflict for GLOBAL in state 300 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 300 resolved as shift
WARNING: shift/reduce conflict for FOR in state 300 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 300 resolved as shift
WARNING: shift/reduce conflict for IF in state 300 resolved as shift
WARNING: shift/reduce conflict for PARSE in state 300 resolved as shift
WARNING: shift/reduce conflict for TRUNC in state 300 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 300 resolved as shift
WARNING: shift/reduce conflict for STRINGNATIVE in state 300 resolved as shift
WARNING: shift/reduce conflict for TYPEOF in state 300 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 300 resolved as shift
WARNING: shift/reduce conflict for POP in state 300 resolved as shift
WARNING: shift/reduce conflict for LENGTH in state 300 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 300 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 300 resolved as shift
WARNING: shift/reduce conflict for MUTABLE in state 300 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 300 resolved as shift
WARNING: shift/reduce conflict for COMA in state 311 resolved as shift
WARNING: shift/reduce conflict for PARENTESISC in state 313 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 327 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 327 resolved as shift
WARNING: shift/reduce conflict for ID in state 327 resolved as shift
WARNING: shift/reduce conflict for GLOBAL in state 327 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 327 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 327 resolved as shift
WARNING: shift/reduce conflict for FOR in state 327 resolved as shift
WARNING: shift/reduce conflict for IF in state 327 resolved as shift
WARNING: shift/reduce conflict for PARSE in state 327 resolved as shift
WARNING: shift/reduce conflict for TRUNC in state 327 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 327 resolved as shift
WARNING: shift/reduce conflict for STRINGNATIVE in state 327 resolved as shift
WARNING: shift/reduce conflict for TYPEOF in state 327 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 327 resolved as shift
WARNING: shift/reduce conflict for POP in state 327 resolved as shift
WARNING: shift/reduce conflict for LENGTH in state 327 resolved as shift
WARNING: shift/reduce conflict for MUTABLE in state 327 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 327 resolved as shift
WARNING: shift/reduce conflict for COMA in state 362 resolved as shift
WARNING: shift/reduce conflict for PARENTESISC in state 364 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 384 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 384 resolved as shift
WARNING: shift/reduce conflict for ID in state 384 resolved as shift
WARNING: shift/reduce conflict for GLOBAL in state 384 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 384 resolved as shift
WARNING: shift/reduce conflict for FOR in state 384 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 384 resolved as shift
WARNING: shift/reduce conflict for IF in state 384 resolved as shift
WARNING: shift/reduce conflict for PARSE in state 384 resolved as shift
WARNING: shift/reduce conflict for TRUNC in state 384 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 384 resolved as shift
WARNING: shift/reduce conflict for STRINGNATIVE in state 384 resolved as shift
WARNING: shift/reduce conflict for TYPEOF in state 384 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 384 resolved as shift
WARNING: shift/reduce conflict for POP in state 384 resolved as shift
WARNING: shift/reduce conflict for LENGTH in state 384 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 384 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 384 resolved as shift
WARNING: shift/reduce conflict for MUTABLE in state 384 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 384 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 386 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 386 resolved as shift
WARNING: shift/reduce conflict for ID in state 386 resolved as shift
WARNING: shift/reduce conflict for GLOBAL in state 386 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 386 resolved as shift
WARNING: shift/reduce conflict for FOR in state 386 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 386 resolved as shift
WARNING: shift/reduce conflict for IF in state 386 resolved as shift
WARNING: shift/reduce conflict for PARSE in state 386 resolved as shift
WARNING: shift/reduce conflict for TRUNC in state 386 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 386 resolved as shift
WARNING: shift/reduce conflict for STRINGNATIVE in state 386 resolved as shift
WARNING: shift/reduce conflict for TYPEOF in state 386 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 386 resolved as shift
WARNING: shift/reduce conflict for POP in state 386 resolved as shift
WARNING: shift/reduce conflict for LENGTH in state 386 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 386 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 386 resolved as shift
WARNING: shift/reduce conflict for MUTABLE in state 386 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 386 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 439 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 439 resolved as shift
WARNING: shift/reduce conflict for ID in state 439 resolved as shift
WARNING: shift/reduce conflict for GLOBAL in state 439 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 439 resolved as shift
WARNING: shift/reduce conflict for FOR in state 439 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 439 resolved as shift
WARNING: shift/reduce conflict for IF in state 439 resolved as shift
WARNING: shift/reduce conflict for PARSE in state 439 resolved as shift
WARNING: shift/reduce conflict for TRUNC in state 439 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 439 resolved as shift
WARNING: shift/reduce conflict for STRINGNATIVE in state 439 resolved as shift
WARNING: shift/reduce conflict for TYPEOF in state 439 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 439 resolved as shift
WARNING: shift/reduce conflict for POP in state 439 resolved as shift
WARNING: shift/reduce conflict for LENGTH in state 439 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 439 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 439 resolved as shift
WARNING: shift/reduce conflict for MUTABLE in state 439 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 439 resolved as shift
